{ storage
    (pair (pair (pair (mutez %balance_at_close)
                      (pair (big_map %buy_proposals nat (pair (bool %passed) (set %votes address)))
                            (big_map %cancel_swap_proposals nat (pair (bool %passed) (set %votes address)))))
                (pair (pair (set %close_votes address) (bool %closed))
                      (pair (set %did_withdraw address) (big_map %equity address mutez))))
          (pair (pair (pair (address %hen_address) (set %lock_votes address))
                      (pair (bool %locked) (nat %numOwners)))
                (pair (pair (set %owners address) (nat %swap_proposal_id))
                      (pair (big_map %swap_proposals
                               nat
                               (pair (pair (nat %objkt_amount) (pair (nat %objkt_id) (bool %passed)))
                                     (pair (bool %sold) (pair (set %votes address) (mutez %xtz_per_objkt)))))
                            (mutez %total_contributed))))) ;
  parameter
    (or (or (or (unit %default)
                (or (unit %deposit)
                    (pair %propose_swap
                       (nat %objkt_amount)
                       (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))
            (or (nat %undo_vote_buy) (or (nat %undo_vote_cancel_swap) (nat %undo_vote_swap))))
        (or (or (pair %vote_buy (mutez %price) (nat %swap_id))
                (or (nat %vote_cancel_swap) (unit %vote_close)))
            (or (unit %vote_lock) (or (nat %vote_swap) (unit %withdraw))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DROP }
                   { IF_LEFT
                       { DROP ;
                         DUP ;
                         GET 5 ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { DUP ; GET 3 ; GET 3 ; NOT } { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (self.data.owners.contains(sp.sender)) & (~ self.data.locked)" ;
                              FAILWITH } ;
                         DUP ;
                         CAR ;
                         GET 6 ;
                         SENDER ;
                         MEM ;
                         IF { UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              DUP ;
                              SENDER ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 87 ; FAILWITH } {} ;
                              AMOUNT ;
                              ADD ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR }
                            { UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              AMOUNT ;
                              SOME ;
                              SENDER ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR } ;
                         DUP ;
                         GET 8 ;
                         AMOUNT ;
                         ADD ;
                         UPDATE 8 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 3 } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; NOT } { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((self.data.owners.contains(sp.sender)) & self.data.locked) & (~ self.data.closed)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         GET 7 ;
                         DUP 3 ;
                         GET 4 ;
                         EMPTY_SET address ;
                         PUSH bool True ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         PUSH bool False ;
                         PAIR ;
                         PUSH bool False ;
                         DUP 5 ;
                         GET 3 ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         DIG 3 ;
                         GET 5 ;
                         CDR ;
                         UPDATE ;
                         UPDATE 7 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         PUSH nat 1 ;
                         ADD ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR } } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 3 } { PUSH bool False } ;
                     IF { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; NOT } { PUSH bool False } ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          GET 3 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 146 ; FAILWITH } {} ;
                          CAR ;
                          NOT }
                        { PUSH bool False } ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (((self.data.owners.contains(sp.sender)) & self.data.locked) & (~ self.data.closed)) & (~ self.data.buy_proposals[params].passed)" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DIG 6 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 153 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     PUSH bool False ;
                     SENDER ;
                     UPDATE ;
                     UPDATE 2 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 3 } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; NOT } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; GET 4 ; SWAP ; DUP ; DUG 2 ; MEM }
                            { PUSH bool False } ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              GET 4 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                              CAR ;
                              NOT }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((((self.data.owners.contains(sp.sender)) & self.data.locked) & (~ self.data.closed)) & (self.data.cancel_swap_proposals.contains(params))) & (~ self.data.cancel_swap_proposals[params].passed)" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 242 ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         PUSH bool False ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 2 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 3 } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; NOT } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 7 ; SWAP ; DUP ; DUG 2 ; MEM }
                            { PUSH bool False } ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 7 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 198 ; FAILWITH } {} ;
                              CAR ;
                              GET 4 ;
                              NOT }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((((self.data.owners.contains(sp.sender)) & self.data.locked) & (~ self.data.closed)) & (self.data.swap_proposals.contains(params))) & (~ self.data.swap_proposals[params].passed)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 7 ;
                         DUP ;
                         DIG 3 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 206 ; FAILWITH } {} ;
                         DUP ;
                         GET 5 ;
                         PUSH bool False ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 5 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 7 } } } ;
             NIL operation }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 3 } { PUSH bool False } ;
                     IF { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; NOT } { PUSH bool False } ;
                     IF {}
                        { PUSH string
                               "WrongCondition: ((self.data.owners.contains(sp.sender)) & self.data.locked) & (~ self.data.closed)" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          GET 3 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          GET ;
                          IF_NONE { PUSH int 128 ; FAILWITH } {} ;
                          CAR ;
                          IF { PUSH string "WrongCondition: ~ self.data.buy_proposals[params.swap_id].passed" ;
                               FAILWITH }
                             {} ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DUP ;
                          DUP 7 ;
                          CDR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 130 ; FAILWITH } {} ;
                          DUP ;
                          CDR ;
                          PUSH bool True ;
                          SENDER ;
                          UPDATE ;
                          UPDATE 2 ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          EMPTY_SET address ;
                          PUSH bool True ;
                          SENDER ;
                          UPDATE ;
                          PUSH bool False ;
                          PAIR ;
                          SOME ;
                          DUP 7 ;
                          CDR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     CAR ;
                     SIZE ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     DUP 3 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 137 ; FAILWITH } {} ;
                     CDR ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF { NIL operation ;
                          DUP 3 ;
                          GET 3 ;
                          CAR ;
                          CAR ;
                          CONTRACT %collect (pair nat nat) ;
                          IF_NONE { PUSH int 246 ; FAILWITH } {} ;
                          DIG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          PUSH nat 1 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          DIG 2 ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DUP ;
                          DIG 7 ;
                          CDR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 139 ; FAILWITH } {} ;
                          PUSH bool True ;
                          UPDATE 1 ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        { DROP ; NIL operation } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 3 } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; NOT } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; GET 4 ; SWAP ; DUP ; DUG 2 ; MEM }
                            { PUSH bool False } ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              GET 4 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                              CAR ;
                              NOT }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((((self.data.owners.contains(sp.sender)) & self.data.locked) & (~ self.data.closed)) & (self.data.cancel_swap_proposals.contains(params))) & (~ self.data.cancel_swap_proposals[params].passed)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF { SWAP ;
                              UNPAIR ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              DUP ;
                              DUP 7 ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 224 ; FAILWITH } {} ;
                              DUP ;
                              CDR ;
                              PUSH bool True ;
                              SENDER ;
                              UPDATE ;
                              UPDATE 2 ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { SWAP ;
                              UNPAIR ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              EMPTY_SET address ;
                              PUSH bool True ;
                              SENDER ;
                              UPDATE ;
                              PUSH bool False ;
                              PAIR ;
                              SOME ;
                              DUP 7 ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP } ;
                         SWAP ;
                         DUP ;
                         GET 3 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         GET 4 ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { PUSH int 228 ; FAILWITH } {} ;
                         CDR ;
                         SIZE ;
                         COMPARE ;
                         EQ ;
                         IF { NIL operation ;
                              DUP 3 ;
                              GET 3 ;
                              CAR ;
                              CAR ;
                              CONTRACT %cancel_swap nat ;
                              IF_NONE { PUSH int 262 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DIG 3 ;
                              TRANSFER_TOKENS ;
                              CONS }
                            { DROP ; NIL operation } }
                       { DROP ;
                         DUP ;
                         CAR ;
                         GET 3 ;
                         CDR ;
                         IF { PUSH bool False } { DUP ; GET 3 ; GET 3 } ;
                         IF { DUP ; GET 5 ; CAR ; SENDER ; MEM } { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((~ self.data.closed) & self.data.locked) & (self.data.owners.contains(sp.sender))" ;
                              FAILWITH } ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         PUSH bool True ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         GET 3 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         CAR ;
                         SIZE ;
                         COMPARE ;
                         EQ ;
                         IF { UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              CAR ;
                              PUSH bool True ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              CDR ;
                              BALANCE ;
                              PAIR ;
                              PAIR ;
                              PAIR }
                            {} ;
                         NIL operation } } }
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     GET 3 ;
                     GET 3 ;
                     IF { PUSH bool False } { DUP ; GET 5 ; CAR ; SENDER ; MEM } ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (~ self.data.locked) & (self.data.owners.contains(sp.sender))" ;
                          FAILWITH } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     PUSH bool True ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     GET 3 ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CAR ;
                     CDR ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF { UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          CDR ;
                          PUSH bool True ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR }
                        {} ;
                     NIL operation }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 3 } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; NOT } { PUSH bool False } ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 7 ; SWAP ; DUP ; DUG 2 ; MEM }
                            { PUSH bool False } ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 7 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 179 ; FAILWITH } {} ;
                              CAR ;
                              GET 4 ;
                              NOT }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((((self.data.owners.contains(sp.sender)) & self.data.locked) & (~ self.data.closed)) & (self.data.swap_proposals.contains(params))) & (~ self.data.swap_proposals[params].passed)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 7 ;
                         DUP ;
                         DUP 4 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 187 ; FAILWITH } {} ;
                         DUP ;
                         GET 5 ;
                         PUSH bool True ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 5 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 7 ;
                         DUP ;
                         GET 3 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         GET 7 ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                         GET 5 ;
                         SIZE ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 7 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              MEM ;
                              IF {} { PUSH string "swap doesn't exist" ; FAILWITH } ;
                              NIL operation ;
                              DUP 3 ;
                              GET 3 ;
                              CAR ;
                              CAR ;
                              CONTRACT %swap (pair nat (pair nat mutez)) ;
                              IF_NONE { PUSH int 258 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DUP 5 ;
                              GET 7 ;
                              DUP 5 ;
                              GET ;
                              IF_NONE { PUSH int 255 ; FAILWITH } {} ;
                              GET 6 ;
                              DUP 6 ;
                              GET 7 ;
                              DUP 6 ;
                              GET ;
                              IF_NONE { PUSH int 255 ; FAILWITH } {} ;
                              CAR ;
                              GET 3 ;
                              PAIR ;
                              DUP 6 ;
                              GET 7 ;
                              DUP 6 ;
                              GET ;
                              IF_NONE { PUSH int 255 ; FAILWITH } {} ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIG 2 ;
                              DUP ;
                              GET 7 ;
                              DUP ;
                              DIG 4 ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 191 ; FAILWITH } {} ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              CAR ;
                              PUSH bool True ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 7 ;
                              SWAP }
                            { DROP ; NIL operation } }
                       { DROP ;
                         DUP ;
                         CAR ;
                         GET 5 ;
                         SENDER ;
                         MEM ;
                         IF { PUSH bool False } { DUP ; GET 5 ; CAR ; SENDER ; MEM } ;
                         IF { DUP ; CAR ; GET 3 ; CDR } { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((~ (self.data.did_withdraw.contains(sp.sender))) & (self.data.owners.contains(sp.sender))) & self.data.closed" ;
                              FAILWITH } ;
                         NIL operation ;
                         SENDER ;
                         CONTRACT unit ;
                         IF_NONE { PUSH int 110 ; FAILWITH } {} ;
                         PUSH mutez 1 ;
                         DUP 4 ;
                         GET 8 ;
                         EDIV ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         DUP 4 ;
                         CAR ;
                         GET 6 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 103 ; FAILWITH } {} ;
                         PUSH mutez 1 ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH int 103 ; FAILWITH } {} ;
                         CAR ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         PUSH bool True ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP } } } } ;
         PAIR } }
