{ parameter
    (or (or (pair %claim_blocks
               (pair (map %colors nat bytes) (int %from_x))
               (pair (int %from_y) (pair (int %to_x) (int %to_y))))
            (unit %default))
        (or (pair %fa2_transfer (nat %objkt_id) (address %to))
            (or (pair %mint_block (bytes %cid) (address %target)) (address %verify_tzkt_io)))) ;
  storage
    (pair (pair (address %admin) (pair (nat %block_price) (int %grid_size)))
          (pair (pair (address %hen_minter) (address %hen_swap))
                (pair (big_map %metadata string bytes) (big_map %pixel_map nat (pair bytes address))))) ;
  code { CAST (pair (or (or (pair (pair (map nat bytes) int) (pair int (pair int int))) unit)
                        (or (pair nat address) (or (pair bytes address) address)))
                    (pair (pair address (pair nat int))
                          (pair (pair address address)
                                (pair (big_map string bytes) (big_map nat (pair bytes address)))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CAR ;
                 CDR ;
                 PUSH int 0 ;
                 SWAP ;
                 COMPARE ;
                 GE ;
                 IF { DUP ; GET 3 ; PUSH int 0 ; SWAP ; COMPARE ; GE } { PUSH bool False } ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      GET 4 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 5 ;
                      COMPARE ;
                      LT }
                    { PUSH bool False } ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      GET 4 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 6 ;
                      COMPARE ;
                      LT }
                    { PUSH bool False } ;
                 IF { DUP ; GET 5 ; SWAP ; DUP ; DUG 2 ; CAR ; CDR ; COMPARE ; LE }
                    { PUSH bool False } ;
                 IF { DUP ; GET 6 ; SWAP ; DUP ; DUG 2 ; GET 3 ; COMPARE ; LE }
                    { PUSH bool False } ;
                 IF { PUSH int 10 ;
                      SWAP ;
                      DUP ;
                      GET 3 ;
                      SWAP ;
                      DUP ;
                      DUG 3 ;
                      GET 6 ;
                      SUB ;
                      COMPARE ;
                      LE }
                    { PUSH bool False } ;
                 IF { PUSH int 10 ;
                      SWAP ;
                      DUP ;
                      CAR ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 3 ;
                      GET 5 ;
                      SUB ;
                      COMPARE ;
                      LE }
                    { PUSH bool False } ;
                 IF {} { PUSH string "Invalid coordinates" ; FAILWITH } ;
                 PUSH mutez 1000000 ;
                 DUP 3 ;
                 CAR ;
                 GET 3 ;
                 PUSH int 1 ;
                 DIG 3 ;
                 DUP ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 5 ;
                 GET 6 ;
                 SUB ;
                 ADD ;
                 PUSH int 1 ;
                 DIG 4 ;
                 DUP ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 GET 5 ;
                 SUB ;
                 ADD ;
                 MUL ;
                 ABS ;
                 MUL ;
                 MUL ;
                 AMOUNT ;
                 COMPARE ;
                 GE ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.amount >= sp.mul((abs(((params.to_x - params.from_x) + 1) * ((params.to_y - params.from_y) + 1))) * self.data.block_price, sp.tez(1))" ;
                      FAILWITH } ;
                 PUSH int 1 ;
                 SWAP ;
                 DUP ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 3 ;
                 GET 6 ;
                 SUB ;
                 ADD ;
                 PUSH int 1 ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 4 ;
                 GET 5 ;
                 SUB ;
                 ADD ;
                 MUL ;
                 ABS ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SIZE ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.len(params.colors) == (abs(((params.to_x - params.from_x) + 1) * ((params.to_y - params.from_y) + 1)))" ;
                      FAILWITH } ;
                 PUSH nat 0 ;
                 PUSH int 1 ;
                 DUP 3 ;
                 GET 6 ;
                 ADD ;
                 DUP 3 ;
                 GET 3 ;
                 DUP ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 LOOP { PUSH int 1 ;
                        DUP 5 ;
                        GET 5 ;
                        ADD ;
                        DUP 5 ;
                        CAR ;
                        CDR ;
                        DUP ;
                        DUP 3 ;
                        COMPARE ;
                        GT ;
                        LOOP { DUP 3 ;
                               DUP 8 ;
                               CAR ;
                               GET 4 ;
                               DUP 3 ;
                               MUL ;
                               ADD ;
                               ABS ;
                               DUP 8 ;
                               GET 6 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               MEM ;
                               IF { PUSH string "some pixel already taken" ; FAILWITH } {} ;
                               PUSH nat 300 ;
                               DUP 8 ;
                               CAR ;
                               CAR ;
                               DUP 8 ;
                               GET ;
                               IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                               SIZE ;
                               COMPARE ;
                               EQ ;
                               IF {}
                                  { PUSH string "WrongCondition: sp.len(params.colors[i.value]) == 300" ;
                                    FAILWITH } ;
                               DIG 7 ;
                               DUP ;
                               GET 6 ;
                               SENDER ;
                               DUP 10 ;
                               CAR ;
                               CAR ;
                               DUP 10 ;
                               GET ;
                               IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                               PAIR ;
                               SOME ;
                               DIG 3 ;
                               UPDATE ;
                               UPDATE 6 ;
                               DUG 6 ;
                               PUSH nat 1 ;
                               DIG 5 ;
                               ADD ;
                               DUG 4 ;
                               PUSH int 1 ;
                               ADD ;
                               DUP ;
                               DUP 3 ;
                               COMPARE ;
                               GT } ;
                        DROP 2 ;
                        PUSH int 1 ;
                        ADD ;
                        DUP ;
                        DUP 3 ;
                        COMPARE ;
                        GT } ;
                 DROP 4 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 49 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 AMOUNT ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 21 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 AMOUNT ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Only BONZAI" ; FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 3 ;
                 CAR ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 84 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 PUSH nat 1 ;
                 DIG 6 ;
                 UNPAIR ;
                 SWAP ;
                 PAIR 3 ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Only admin can mint" ; FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     GET 3 ;
                     CDR ;
                     CONTRACT %mint_OBJKT (pair (pair address nat) (pair bytes nat)) ;
                     IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     PUSH nat 200 ;
                     DUP 5 ;
                     CAR ;
                     PAIR ;
                     PUSH nat 1 ;
                     DIG 5 ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "only admin" ; FAILWITH } ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 32 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     AMOUNT ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS } } } ;
         PAIR } }
