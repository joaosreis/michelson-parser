{ parameter
    (or (or (nat %advertise_intent)
            (or (pair %execute_intent (address %address) (nat %token_amount))
                (address %fulfill_intent)))
        (or (address %internal_fulfill_intent)
            (or (unit %remove_intent) (nat %set_target_price)))) ;
  storage
    (pair (pair (address %engine_address)
                (pair (big_map %intents address (pair (nat %token_amount) (timestamp %start_timestamp)))
                      (address %sender)))
          (pair (pair (nat %target_price) (address %target_price_oracle))
                (pair (address %token_address) (nat %token_id)))) ;
  code { CAST (pair (or (or nat (or (pair address nat) address)) (or address (or unit nat)))
                    (pair (pair address (pair (big_map address (pair nat timestamp)) address))
                          (pair (pair nat address) (pair address nat)))) ;
         LAMBDA
           (pair unit
                 (pair (pair address (pair (big_map address (pair nat timestamp)) address))
                       (pair (pair nat address) (pair address nat))))
           (pair (list operation)
                 (pair unit
                       (pair (pair address (pair (big_map address (pair nat timestamp)) address))
                             (pair (pair nat address) (pair address nat)))))
           { NIL operation ;
             SWAP ;
             CDR ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             CDR ;
             CONTRACT %get_price (contract nat) ;
             IF_NONE { PUSH int 50 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             SELF_ADDRESS ;
             CONTRACT %set_target_price nat ;
             IF_NONE { PUSH int 52 ; FAILWITH } {} ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair unit
                 (pair (pair address (pair (big_map address (pair nat timestamp)) address))
                       (pair (pair nat address) (pair address nat))))
           (pair (list operation)
                 (pair unit
                       (pair (pair address (pair (big_map address (pair nat timestamp)) address))
                             (pair (pair nat address) (pair address nat)))))
           { NIL operation ;
             SWAP ;
             CDR ;
             SELF_ADDRESS ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH int 400 ; FAILWITH } ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 MEM ;
                 IF { PUSH int 700 ; FAILWITH } {} ;
                 DUP ;
                 PUSH nat 1000000000 ;
                 SWAP ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH int 602 ; FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 5 ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DUP 6 ;
                 DUP 8 ;
                 GET 6 ;
                 SELF_ADDRESS ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 NOW ;
                 DIG 6 ;
                 PAIR ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 219 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     PUSH int 86400 ;
                     ADD ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH int 611 ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     PUSH int 172800 ;
                     ADD ;
                     NOW ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH int 610 ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH int 601 ; FAILWITH } ;
                     PUSH nat 1000000000 ;
                     DUP 3 ;
                     CDR ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH int 602 ; FAILWITH } ;
                     DUP ;
                     DUP 3 ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 229 ; FAILWITH } {} ;
                     UPDATE 1 ;
                     NIL operation ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CONTRACT %settle_with_vault (pair address (pair nat address)) ;
                     IF_NONE { PUSH int 232 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     SENDER ;
                     DIG 5 ;
                     UNPAIR ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP 6 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          NONE (pair nat timestamp) ;
                          SENDER ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        {} }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     SENDER ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUG 2 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     CAR ;
                     SELF %internal_fulfill_intent ;
                     AMOUNT ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS } } }
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DUP 3 ;
                 DIG 2 ;
                 UNIT ;
                 PAIR ;
                 EXEC ;
                 DUP ;
                 GET 4 ;
                 DUG 2 ;
                 CAR ;
                 DUP 3 ;
                 CAR ;
                 GET 3 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 181 ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 PUSH int 172800 ;
                 ADD ;
                 NOW ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH int 610 ; FAILWITH } ;
                 PUSH mutez 1000 ;
                 AMOUNT ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH int 602 ; FAILWITH } ;
                 PUSH nat 4 ;
                 DUP 5 ;
                 GET 3 ;
                 CAR ;
                 LSR ;
                 DUP 5 ;
                 GET 3 ;
                 CAR ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 188 ; FAILWITH } {} ;
                 PUSH nat 1000000000000 ;
                 PUSH mutez 1 ;
                 AMOUNT ;
                 EDIV ;
                 IF_NONE { UNIT ; FAILWITH } {} ;
                 CAR ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH int 189 ; FAILWITH } { CAR } ;
                 DUP ;
                 DUP 3 ;
                 CAR ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH int 601 ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 CAR ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 194 ; FAILWITH } {} ;
                 UPDATE 1 ;
                 SWAP ;
                 DIG 2 ;
                 DUP 5 ;
                 GET 5 ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 5 ;
                 DIG 8 ;
                 DUP ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 10 ;
                 CAR ;
                 GET 4 ;
                 PAIR 3 ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 198 ; FAILWITH } {} ;
                 AMOUNT ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 DIG 3 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DUP 5 ;
                 SOME ;
                 DUP 8 ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUG 3 ;
                 CAR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 3 ;
                      DROP ;
                      DIG 2 ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      NONE (pair nat timestamp) ;
                      DIG 6 ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP }
                    { SWAP ; DROP ; DIG 2 ; DROP } }
               { IF_LEFT
                   { DROP ;
                     SWAP ;
                     DROP ;
                     DUP ;
                     GET 5 ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     DUP 6 ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 145 ; FAILWITH } {} ;
                     CAR ;
                     DUP 7 ;
                     GET 6 ;
                     SENDER ;
                     PAIR 3 ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     NONE (pair nat timestamp) ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.target_price_oracle" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
