{ storage
    (pair (pair (bool %active) (address %admin))
          (pair (address %fa12)
                (pair (nat %reward)
                      (big_map %swaps
                         bytes
                         (pair (pair (bytes %hashedSecret) (pair (address %initiator) (string %initiator_eth_addr)))
                               (pair (pair (address %participant) (timestamp %refundTimestamp))
                                     (pair (int %state) (nat %value)))))))) ;
  parameter
    (or (or (pair %addCounterParty (bytes %_hashedSecret) (address %_participant))
            (or (pair %initiateWait
                   (pair (nat %_amount) (bytes %_hashedSecret))
                   (pair (timestamp %_refundTimestamp) (string %initiator_eth_addr)))
                (pair %redeem (bytes %_hashedSecret) (bytes %_secret))))
        (or (bytes %refund) (or (bool %toggleContractState) (nat %updateReward)))) ;
  code { CAST (pair (or (or (pair bytes address)
                            (or (pair (pair nat bytes) (pair timestamp string)) (pair bytes bytes)))
                        (or bytes (or bool nat)))
                    (pair (pair bool address)
                          (pair address
                                (pair nat
                                      (big_map
                                         bytes
                                         (pair (pair bytes (pair address string)) (pair (pair address timestamp) (pair int nat)))))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { PUSH bool True ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "WrongCondition:self.data.active == True" ; FAILWITH } ;
                 PUSH int 1 ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 88 ; FAILWITH } {} ;
                 GET 5 ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.swaps[params._hashedSecret].state == 1" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 58 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.sender == self.data.swaps[params._hashedSecret].initiator" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 GET 6 ;
                 DUP ;
                 DUP 4 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 174 ; FAILWITH } {} ;
                 PUSH int 2 ;
                 UPDATE 5 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 6 ;
                 DUP ;
                 GET 6 ;
                 DUP ;
                 DUP 4 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 175 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 CDR ;
                 DIG 6 ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 6 ;
                 NIL operation }
               { IF_LEFT
                   { PUSH bool True ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "WrongCondition: self.data.active == True" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     MEM ;
                     IF { PUSH string "WrongCondition: ~ (self.data.swaps.contains(params._hashedSecret))" ;
                          FAILWITH }
                        {} ;
                     DUP ;
                     GET 3 ;
                     NOW ;
                     COMPARE ;
                     LT ;
                     IF {}
                        { PUSH string "WrongCondition: sp.now < params._refundTimestamp" ; FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     GET 3 ;
                     CONTRACT %transfer (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 153 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     SELF_ADDRESS ;
                     SENDER ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     GET 6 ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     PUSH int 1 ;
                     PAIR ;
                     DUP 5 ;
                     GET 3 ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     DUP 5 ;
                     GET 4 ;
                     SENDER ;
                     PAIR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     UPDATE ;
                     UPDATE 6 ;
                     SWAP }
                   { PUSH int 2 ;
                     DUP 3 ;
                     GET 6 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 88 ; FAILWITH } {} ;
                     GET 5 ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.swaps[params._hashedSecret].state == 2" ;
                          FAILWITH } ;
                     NOW ;
                     DUP 3 ;
                     GET 6 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 99 ; FAILWITH } {} ;
                     GET 3 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF {}
                        { PUSH string
                               "WrongCondition: self.data.swaps[params._hashedSecret].refundTimestamp > sp.now" ;
                          FAILWITH } ;
                     DUP ;
                     CDR ;
                     SHA256 ;
                     SHA256 ;
                     DUP 3 ;
                     GET 6 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 100 ; FAILWITH } {} ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string
                               "WrongCondition: self.data.swaps[params._hashedSecret].hashedSecret == sp.sha256(sp.sha256(params._secret))" ;
                          FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     GET 3 ;
                     CONTRACT %transfer (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DUP 5 ;
                     GET 6 ;
                     DUP 5 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 192 ; FAILWITH } {} ;
                     GET 6 ;
                     DUP 6 ;
                     GET 6 ;
                     DUP 6 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 192 ; FAILWITH } {} ;
                     GET 3 ;
                     CAR ;
                     SELF_ADDRESS ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     GET 6 ;
                     NONE (pair (pair bytes (pair address string)) (pair (pair address timestamp) (pair int nat))) ;
                     DIG 4 ;
                     CAR ;
                     UPDATE ;
                     UPDATE 6 ;
                     SWAP } } }
           { IF_LEFT
               { PUSH int 2 ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 111 ; FAILWITH } {} ;
                 GET 5 ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True }
                    { PUSH int 1 ;
                      DUP 3 ;
                      GET 6 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 112 ; FAILWITH } {} ;
                      GET 5 ;
                      COMPARE ;
                      EQ } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: (self.data.swaps[params].state == 2) | (self.data.swaps[params].state == 1)" ;
                      FAILWITH } ;
                 NOW ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 113 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 COMPARE ;
                 LE ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.swaps[params].refundTimestamp <= sp.now" ;
                      FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 3 ;
                 CONTRACT %transfer (pair address (pair address nat)) ;
                 IF_NONE { PUSH int 206 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DUP 5 ;
                 GET 6 ;
                 DUP 5 ;
                 GET ;
                 IF_NONE { PUSH int 209 ; FAILWITH } {} ;
                 GET 6 ;
                 DUP 6 ;
                 GET 6 ;
                 DUP 6 ;
                 GET ;
                 IF_NONE { PUSH int 209 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 SELF_ADDRESS ;
                 PAIR 3 ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 GET 6 ;
                 NONE (pair (pair bytes (pair address string)) (pair (pair address timestamp) (pair int nat))) ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 6 ;
                 SWAP }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     UPDATE 5 } ;
                 NIL operation } } ;
         PAIR } }
