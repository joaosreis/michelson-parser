{ storage
    (pair (pair (nat %counter) (pair (nat %fee) (address %manager)))
          (pair (big_map %metadata string bytes)
                (pair (address %objkts)
                      (big_map %swaps
                         nat
                         (pair (pair (pair (address %contract) (address %creator))
                                     (pair (address %issuer) (nat %objkt_amount)))
                               (pair (pair (nat %objkt_id) (nat %royalties))
                                     (pair (nat %token_id) (nat %token_per_objkt)))))))) ;
  parameter
    (or (or (nat %cancel_swap) (nat %collect))
        (or (pair %swap
               (pair (address %contract) (pair (address %creator) (nat %objkt_amount)))
               (pair (pair (nat %objkt_id) (nat %royalties))
                     (pair (nat %token_id) (nat %token_per_objkt))))
            (or (nat %update_fee) (address %update_manager)))) ;
  code { CAST (pair (or (or nat nat)
                        (or (pair (pair address (pair address nat)) (pair (pair nat nat) (pair nat nat)))
                            (or nat address)))
                    (pair (pair nat (pair nat address))
                          (pair (big_map string bytes)
                                (pair address
                                      (big_map
                                         nat
                                         (pair (pair (pair address address) (pair address nat)) (pair (pair nat nat) (pair nat nat)))))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.swaps[params.swap_id].issuer" ;
                      FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 5 ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 169 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DUP 7 ;
                 GET 6 ;
                 DUP 7 ;
                 GET ;
                 IF_NONE { PUSH int 145 ; FAILWITH } {} ;
                 CAR ;
                 GET 4 ;
                 DUP 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 145 ; FAILWITH } {} ;
                 GET 3 ;
                 CAR ;
                 DUP 9 ;
                 GET 6 ;
                 DUP 9 ;
                 GET ;
                 IF_NONE { PUSH int 145 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 PAIR 3 ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 GET 6 ;
                 NONE (pair (pair (pair address address) (pair address nat)) (pair (pair nat nat) (pair nat nat))) ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 6 ;
                 SWAP }
               { PUSH nat 0 ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 150 ; FAILWITH } {} ;
                 CAR ;
                 GET 4 ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.swaps[params.swap_id].objkt_amount > 0" ;
                      FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 5 ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 169 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 PUSH nat 1 ;
                 DUP 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 151 ; FAILWITH } {} ;
                 GET 3 ;
                 CAR ;
                 SENDER ;
                 PAIR 3 ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 169 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 6 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 155 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 ADD ;
                 PUSH nat 1000 ;
                 DIG 8 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 10 ;
                 GET 6 ;
                 DUP 10 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 DUP 11 ;
                 GET 6 ;
                 DUP 11 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 6 ;
                 MUL ;
                 ADD ;
                 EDIV ;
                 IF_NONE { PUSH int 154 ; FAILWITH } { CAR } ;
                 DUP 9 ;
                 GET 6 ;
                 DUP 9 ;
                 GET ;
                 IF_NONE { PUSH int 155 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH int 155 ; FAILWITH } { CAR } ;
                 DUP 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                 GET 5 ;
                 DUP 9 ;
                 GET 6 ;
                 DUP 9 ;
                 GET ;
                 IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 161 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 169 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 6 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 155 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 ADD ;
                 PUSH nat 1000 ;
                 DIG 8 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 10 ;
                 GET 6 ;
                 DUP 10 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 DUP 11 ;
                 GET 6 ;
                 DUP 11 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 6 ;
                 MUL ;
                 ADD ;
                 EDIV ;
                 IF_NONE { PUSH int 154 ; FAILWITH } { CAR } ;
                 DUP 9 ;
                 GET 6 ;
                 DUP 9 ;
                 GET ;
                 IF_NONE { PUSH int 155 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH int 155 ; FAILWITH } { CAR } ;
                 PUSH nat 1000 ;
                 DIG 8 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 10 ;
                 GET 6 ;
                 DUP 10 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 DUP 11 ;
                 GET 6 ;
                 DUP 11 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 6 ;
                 MUL ;
                 ADD ;
                 EDIV ;
                 IF_NONE { PUSH int 154 ; FAILWITH } { CAR } ;
                 SUB ;
                 ABS ;
                 DUP 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 161 ; FAILWITH } {} ;
                 GET 5 ;
                 DUP 9 ;
                 CAR ;
                 GET 4 ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 164 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 169 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 PUSH nat 1000 ;
                 DIG 7 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 9 ;
                 GET 6 ;
                 DUP 9 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 DUP 10 ;
                 GET 6 ;
                 DUP 10 ;
                 GET ;
                 IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                 GET 6 ;
                 MUL ;
                 ADD ;
                 EDIV ;
                 IF_NONE { PUSH int 154 ; FAILWITH } { CAR } ;
                 DUP 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 164 ; FAILWITH } {} ;
                 GET 6 ;
                 SUB ;
                 ABS ;
                 DUP 8 ;
                 GET 6 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 164 ; FAILWITH } {} ;
                 GET 5 ;
                 DUP 9 ;
                 GET 6 ;
                 DUP 9 ;
                 GET ;
                 IF_NONE { PUSH int 164 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 DUP ;
                 GET 6 ;
                 DUP ;
                 DUP 5 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 166 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CAR ;
                 PUSH nat 1 ;
                 DIG 9 ;
                 GET 6 ;
                 DIG 9 ;
                 GET ;
                 IF_NONE { PUSH int 166 ; FAILWITH } {} ;
                 CAR ;
                 GET 4 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 166 ; FAILWITH } {} ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 6 ;
                 SWAP } }
           { IF_LEFT
               { DUP ;
                 GET 3 ;
                 CDR ;
                 PUSH nat 0 ;
                 SWAP ;
                 COMPARE ;
                 GE ;
                 IF { DUP ; GET 3 ; CDR ; PUSH nat 250 ; SWAP ; COMPARE ; LE }
                    { PUSH bool False } ;
                 IF {}
                    { PUSH string "WrongCondition: (params.royalties >= 0) & (params.royalties <= 250)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 GET 6 ;
                 DIG 2 ;
                 DUP ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 4 ;
                 GET 5 ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 GET 3 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 5 ;
                 GET 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 GET 4 ;
                 SENDER ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 UPDATE 6 ;
                 SWAP ;
                 NIL operation ;
                 DUP 3 ;
                 GET 5 ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 169 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 5 ;
                 DUP ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 GET 3 ;
                 CAR ;
                 SELF_ADDRESS ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 SWAP }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 4 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 4 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR } ;
                 NIL operation } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
