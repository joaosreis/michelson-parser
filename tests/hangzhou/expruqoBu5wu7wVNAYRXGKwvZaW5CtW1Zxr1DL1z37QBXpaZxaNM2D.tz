{ parameter
    (or (or (or (or (pair %balance_of
                       (list %requests (pair (address %owner) (nat %token_id)))
                       (contract %callback
                          (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                    (unit %confirm_admin))
                (or (pair %get_attributes
                       (list nat)
                       (contract
                          (list (pair (string %category)
                                      (pair (map %ints string int)
                                            (pair (bool %on_sale)
                                                  (pair (address %owner)
                                                        (pair (map %sets string (set nat))
                                                              (pair (map %strings string string) (pair (nat %token_id) (nat %uid)))))))))))
                    (pair %list_token (bool %list) (pair (address %sender) (list %token_ids nat)))))
            (or (or (list %marketplace_transfer
                       (pair (address %from_) (pair (address %to_) (nat %token_id))))
                    (pair %mint
                       (address %address)
                       (pair (pair %attribute
                                (string %category)
                                (pair (map %ints string int)
                                      (pair (map %sets string (set nat)) (map %strings string string))))
                             (pair (nat %editions) (map %metadata string bytes)))))
                (or (pair %mint_custom
                       (address %address)
                       (pair (pair %attribute
                                (string %category)
                                (pair (map %ints string int)
                                      (pair (map %sets string (set nat)) (map %strings string string))))
                             (pair (nat %editions) (pair (map %metadata string bytes) (nat %uid)))))
                    (address %set_administrator))))
        (or (or (or (address %set_manager) (address %set_marketplace))
                (or (pair %set_metadata (string %k) (bytes %v)) (address %set_minter)))
            (or (or (bool %set_pause)
                    (list %transfer
                       (pair (address %from_)
                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                (or (list %update_attributes
                       (pair (map %ints string int)
                             (pair (map %sets string (set nat)) (pair (map %strings string string) (nat %token_id)))))
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                           (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))))) ;
  storage
    (pair (address %administrator)
          (pair (nat %all_tokens)
                (pair (big_map %ledger (pair address nat) nat)
                      (pair (address %manager)
                            (pair (address %marketplace)
                                  (pair (big_map %metadata string bytes)
                                        (pair (address %minter)
                                              (pair (big_map %operators
                                                       (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                                       unit)
                                                    (pair (bool %paused)
                                                          (pair (option %pending_admin address)
                                                                (pair (big_map %token_attributes
                                                                         nat
                                                                         (pair (string %category)
                                                                               (pair (map %ints string int)
                                                                                     (pair (bool %on_sale)
                                                                                           (pair (address %owner)
                                                                                                 (pair (map %sets string (set nat))
                                                                                                       (pair (map %strings string string) (pair (nat %token_id) (nat %uid)))))))))
                                                                      (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                                                                            (map %uids string nat))))))))))))) ;
  code { CAST (pair (or (or (or (or (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) unit)
                                (or (pair (list nat)
                                          (contract
                                             (list (pair string
                                                         (pair (map string int)
                                                               (pair bool
                                                                     (pair address (pair (map string (set nat)) (pair (map string string) (pair nat nat))))))))))
                                    (pair bool (pair address (list nat)))))
                            (or (or (list (pair address (pair address nat)))
                                    (pair address
                                          (pair (pair string (pair (map string int) (pair (map string (set nat)) (map string string))))
                                                (pair nat (map string bytes)))))
                                (or (pair address
                                          (pair (pair string (pair (map string int) (pair (map string (set nat)) (map string string))))
                                                (pair nat (pair (map string bytes) nat))))
                                    address)))
                        (or (or (or address address) (or (pair string bytes) address))
                            (or (or bool (list (pair address (list (pair address (pair nat nat))))))
                                (or (list (pair (map string int) (pair (map string (set nat)) (pair (map string string) nat))))
                                    (list (or (pair address (pair address nat)) (pair address (pair address nat))))))))
                    (pair address
                          (pair nat
                                (pair (big_map (pair address nat) nat)
                                      (pair address
                                            (pair address
                                                  (pair (big_map string bytes)
                                                        (pair address
                                                              (pair (big_map (pair address (pair address nat)) unit)
                                                                    (pair bool
                                                                          (pair (option address)
                                                                                (pair (big_map
                                                                                         nat
                                                                                         (pair string
                                                                                               (pair (map string int)
                                                                                                     (pair bool
                                                                                                           (pair address (pair (map string (set nat)) (pair (map string string) (pair nat nat))))))))
                                                                                      (pair (big_map nat (pair nat (map string bytes))) (map string nat)))))))))))))) ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 17 ;
                         IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         MAP { { DIP 2 { DUP } ; DIG 3 } ;
                               GET 23 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               MEM ;
                               IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                               { DIP 2 { DUP } ; DIG 3 } ;
                               GET 5 ;
                               SWAP ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               PAIR ;
                               MEM ;
                               IF { { DIP 2 { DUP } ; DIG 3 } ;
                                    GET 5 ;
                                    SWAP ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    PAIR ;
                                    GET ;
                                    IF_NONE { PUSH int 433 ; FAILWITH } {} ;
                                    SWAP ;
                                    PAIR }
                                  { PUSH nat 0 ; SWAP ; PAIR } } ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { DROP ;
                         DUP ;
                         GET 19 ;
                         IF_NONE { PUSH string "NO_PENDING_ADMIN" ; FAILWITH } {} ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "NOT_PENGING_ADMIN" ; FAILWITH } ;
                         DUP ;
                         GET 19 ;
                         IF_NONE { PUSH string "NO_PENDING_ADMIN" ; FAILWITH } {} ;
                         UPDATE 1 ;
                         NONE address ;
                         UPDATE 19 ;
                         NIL operation } }
                   { IF_LEFT
                       { NIL (pair string
                                   (pair (map string int)
                                         (pair bool
                                               (pair address (pair (map string (set nat)) (pair (map string string) (pair nat nat))))))) ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         ITER { SWAP ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 21 ;
                                DIG 2 ;
                                GET ;
                                IF_NONE { PUSH int 702 ; FAILWITH } {} ;
                                CONS } ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { SENDER ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 9 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ; DUP ; DUG 2 ; CAR ; SENDER ; COMPARE ; EQ } ;
                         IF {} { PUSH string "UNAUTHORIZED" ; FAILWITH } ;
                         DUP ;
                         GET 4 ;
                         ITER { { DIP 2 { DUP } ; DIG 3 } ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                LT ;
                                IF {} { PUSH string "INVALID_TOKEN_ID" ; FAILWITH } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 21 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                GET ;
                                IF_NONE { PUSH int 731 ; FAILWITH } {} ;
                                GET 7 ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "UNAUTHORIZED" ; FAILWITH } ;
                                DIG 2 ;
                                DUP ;
                                GET 21 ;
                                DUP ;
                                DIG 3 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 733 ; FAILWITH } {} ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                CAR ;
                                UPDATE 5 ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 21 ;
                                SWAP } ;
                         DROP ;
                         NIL operation } } }
               { IF_LEFT
                   { IF_LEFT
                       { SENDER ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 9 ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         DUP ;
                         ITER { PUSH bool True ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 21 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                GET 4 ;
                                GET ;
                                IF_NONE { PUSH int 745 ; FAILWITH } {} ;
                                GET 5 ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "NOT_ON_SALE" ; FAILWITH } ;
                                PUSH nat 1 ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 5 ;
                                DIG 2 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 4 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                IF_NONE { PUSH int 750 ; FAILWITH } {} ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                DUP ;
                                GET 5 ;
                                DUP ;
                                DIG 3 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 5 ;
                                CAR ;
                                PAIR ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 753 ; FAILWITH } { DROP } ;
                                PUSH nat 1 ;
                                DIG 6 ;
                                GET 5 ;
                                DIG 5 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 7 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                IF_NONE { PUSH int 754 ; FAILWITH } {} ;
                                SUB ;
                                ISNAT ;
                                IF_NONE { PUSH int 753 ; FAILWITH } {} ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 5 ;
                                DUP ;
                                DUG 3 ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 3 ;
                                GET 3 ;
                                PAIR ;
                                MEM ;
                                IF { DIG 2 ;
                                     DUP ;
                                     GET 5 ;
                                     DUP ;
                                     DIG 3 ;
                                     DUP ;
                                     GET 4 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 5 ;
                                     GET 3 ;
                                     PAIR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 756 ; FAILWITH } {} ;
                                     PUSH nat 1 ;
                                     ADD ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     UPDATE 5 ;
                                     DUG 2 }
                                   { DIG 2 ;
                                     DUP ;
                                     GET 5 ;
                                     PUSH (option nat) (Some 1) ;
                                     DIG 3 ;
                                     DUP ;
                                     GET 4 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 5 ;
                                     GET 3 ;
                                     PAIR ;
                                     UPDATE ;
                                     UPDATE 5 ;
                                     DUG 2 } ;
                                DIG 2 ;
                                DUP ;
                                GET 21 ;
                                DUP ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 4 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 760 ; FAILWITH } {} ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                GET 3 ;
                                UPDATE 7 ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 21 ;
                                DUP ;
                                GET 21 ;
                                DUP ;
                                DIG 3 ;
                                GET 4 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 761 ; FAILWITH } {} ;
                                PUSH bool False ;
                                UPDATE 5 ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 21 ;
                                SWAP } ;
                         DROP }
                       { SENDER ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 13 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ; DUP ; DUG 2 ; CAR ; SENDER ; COMPARE ; EQ } ;
                         IF {} { PUSH string "FA2_NOT_ADMIN_OR_MANAGER" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 24 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         CAR ;
                         MEM ;
                         IF {}
                            { SWAP ;
                              DUP ;
                              GET 24 ;
                              PUSH (option nat) (Some 0) ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 3 ;
                              CAR ;
                              UPDATE ;
                              UPDATE 24 ;
                              SWAP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         PUSH nat 0 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         LOOP { SWAP ;
                                DUP ;
                                DUG 2 ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                GET 3 ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                                DIG 3 ;
                                DUP ;
                                GET 3 ;
                                DUP ;
                                PUSH nat 1 ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                ADD ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                LE ;
                                IF { DROP } { SWAP ; DROP } ;
                                UPDATE 3 ;
                                DUP ;
                                DUG 4 ;
                                GET 5 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                CAR ;
                                PAIR ;
                                MEM ;
                                IF { DIG 3 ;
                                     DUP ;
                                     GET 5 ;
                                     DUP ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     CAR ;
                                     PAIR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 566 ; FAILWITH } {} ;
                                     PUSH nat 1 ;
                                     ADD ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     UPDATE 5 ;
                                     DUG 3 }
                                   { DIG 3 ;
                                     DUP ;
                                     GET 5 ;
                                     PUSH (option nat) (Some 1) ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     CAR ;
                                     PAIR ;
                                     UPDATE ;
                                     UPDATE 5 ;
                                     DUG 3 } ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 23 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                MEM ;
                                IF {}
                                   { DIG 3 ;
                                     DUP ;
                                     GET 23 ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     GET 6 ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     PAIR ;
                                     SOME ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     UPDATE ;
                                     UPDATE 23 ;
                                     DUG 3 } ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                DUP ;
                                GET 21 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                { DIP 6 { DUP } ; DIG 7 } ;
                                GET 24 ;
                                { DIP 6 { DUP } ; DIG 7 } ;
                                GET 3 ;
                                CAR ;
                                GET ;
                                IF_NONE { PUSH int 581 ; FAILWITH } {} ;
                                ADD ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                DIG 6 ;
                                DUP ;
                                GET 3 ;
                                GET 6 ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 9 ;
                                CAR ;
                                PUSH bool False ;
                                DIG 10 ;
                                DUP ;
                                GET 3 ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 12 ;
                                GET 3 ;
                                CAR ;
                                PAIR 8 ;
                                DIG 6 ;
                                DROP ;
                                SOME ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                UPDATE ;
                                UPDATE 21 ;
                                DUG 3 ;
                                PUSH nat 1 ;
                                ADD ;
                                PUSH nat 1 ;
                                DIG 2 ;
                                ADD ;
                                SWAP ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                LT } ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         GET 24 ;
                         DUP ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 3 ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 589 ; FAILWITH } {} ;
                         DIG 4 ;
                         GET 5 ;
                         ADD ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 24 } }
                   { IF_LEFT
                       { SENDER ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 13 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ; DUP ; DUG 2 ; CAR ; SENDER ; COMPARE ; EQ } ;
                         IF {} { PUSH string "FA2_NOT_ADMIN_OR_MANAGER" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 24 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         CAR ;
                         MEM ;
                         IF {}
                            { SWAP ;
                              DUP ;
                              GET 24 ;
                              PUSH (option nat) (Some 0) ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 3 ;
                              CAR ;
                              UPDATE ;
                              UPDATE 24 ;
                              SWAP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         PUSH nat 0 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         LOOP { SWAP ;
                                DUP ;
                                DUG 2 ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                GET 3 ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                                DIG 3 ;
                                DUP ;
                                GET 3 ;
                                DUP ;
                                PUSH nat 1 ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                ADD ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                LE ;
                                IF { DROP } { SWAP ; DROP } ;
                                UPDATE 3 ;
                                DUP ;
                                DUG 4 ;
                                GET 5 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                CAR ;
                                PAIR ;
                                MEM ;
                                IF { DIG 3 ;
                                     DUP ;
                                     GET 5 ;
                                     DUP ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     CAR ;
                                     PAIR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 618 ; FAILWITH } {} ;
                                     PUSH nat 1 ;
                                     ADD ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     UPDATE 5 ;
                                     DUG 3 }
                                   { DIG 3 ;
                                     DUP ;
                                     GET 5 ;
                                     PUSH (option nat) (Some 1) ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     CAR ;
                                     PAIR ;
                                     UPDATE ;
                                     UPDATE 5 ;
                                     DUG 3 } ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 23 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                MEM ;
                                IF {}
                                   { DIG 3 ;
                                     DUP ;
                                     GET 23 ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     GET 7 ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     PAIR ;
                                     SOME ;
                                     { DIP 4 { DUP } ; DIG 5 } ;
                                     UPDATE ;
                                     UPDATE 23 ;
                                     DUG 3 } ;
                                DIG 3 ;
                                DUP ;
                                GET 21 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                GET 8 ;
                                ADD ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                DIG 6 ;
                                DUP ;
                                GET 3 ;
                                GET 6 ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 9 ;
                                CAR ;
                                PUSH bool False ;
                                DIG 10 ;
                                DUP ;
                                GET 3 ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 12 ;
                                GET 3 ;
                                CAR ;
                                PAIR 8 ;
                                SOME ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                UPDATE ;
                                UPDATE 21 ;
                                DUG 3 ;
                                PUSH nat 1 ;
                                ADD ;
                                PUSH nat 1 ;
                                DIG 2 ;
                                ADD ;
                                SWAP ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                LT } ;
                         DROP 3 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "NOT_ADMIN" ; FAILWITH } ;
                         SOME ;
                         UPDATE 19 } } ;
                 NIL operation } }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         UPDATE 7 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         UPDATE 9 } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 11 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         SOME ;
                         DIG 3 ;
                         CAR ;
                         UPDATE ;
                         UPDATE 11 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         UPDATE 13 } } }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         UPDATE 17 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 17 ;
                         IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                         DUP ;
                         ITER { DUP ;
                                CDR ;
                                ITER { PUSH bool False ;
                                       { DIP 4 { DUP } ; DIG 5 } ;
                                       GET 21 ;
                                       { DIP 2 { DUP } ; DIG 3 } ;
                                       GET 3 ;
                                       GET ;
                                       IF_NONE { PUSH int 392 ; FAILWITH } {} ;
                                       GET 5 ;
                                       COMPARE ;
                                       EQ ;
                                       IF {} { PUSH string "Listed on Marketplace" ; FAILWITH } ;
                                       SENDER ;
                                       { DIP 2 { DUP } ; DIG 3 } ;
                                       CAR ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH bool True }
                                          { { DIP 3 { DUP } ; DIG 4 } ;
                                            GET 15 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            GET 3 ;
                                            SENDER ;
                                            { DIP 4 { DUP } ; DIG 5 } ;
                                            CAR ;
                                            PAIR 3 ;
                                            MEM } ;
                                       IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                       { DIP 3 { DUP } ; DIG 4 } ;
                                       GET 23 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       GET 3 ;
                                       MEM ;
                                       IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                       DUP ;
                                       GET 4 ;
                                       PUSH nat 0 ;
                                       COMPARE ;
                                       LT ;
                                       IF { DUP ;
                                            GET 4 ;
                                            { DIP 4 { DUP } ; DIG 5 } ;
                                            GET 5 ;
                                            { DIP 2 { DUP } ; DIG 3 } ;
                                            GET 3 ;
                                            { DIP 4 { DUP } ; DIG 5 } ;
                                            CAR ;
                                            PAIR ;
                                            GET ;
                                            IF_NONE { PUSH int 410 ; FAILWITH } {} ;
                                            COMPARE ;
                                            GE ;
                                            IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                            { DIP 3 { DUP } ; DIG 4 } ;
                                            DUP ;
                                            GET 5 ;
                                            DUP ;
                                            { DIP 3 { DUP } ; DIG 4 } ;
                                            GET 3 ;
                                            { DIP 5 { DUP } ; DIG 6 } ;
                                            CAR ;
                                            PAIR ;
                                            DUP ;
                                            DUG 2 ;
                                            GET ;
                                            IF_NONE { PUSH int 413 ; FAILWITH } { DROP } ;
                                            { DIP 3 { DUP } ; DIG 4 } ;
                                            GET 4 ;
                                            DIG 7 ;
                                            GET 5 ;
                                            { DIP 5 { DUP } ; DIG 6 } ;
                                            GET 3 ;
                                            { DIP 7 { DUP } ; DIG 8 } ;
                                            CAR ;
                                            PAIR ;
                                            GET ;
                                            IF_NONE { PUSH int 414 ; FAILWITH } {} ;
                                            SUB ;
                                            ISNAT ;
                                            IF_NONE { PUSH int 413 ; FAILWITH } {} ;
                                            SOME ;
                                            SWAP ;
                                            UPDATE ;
                                            UPDATE 5 ;
                                            DUP ;
                                            DUG 4 ;
                                            GET 5 ;
                                            SWAP ;
                                            DUP ;
                                            GET 3 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 3 ;
                                            CAR ;
                                            PAIR ;
                                            MEM ;
                                            IF { DIG 3 ;
                                                 DUP ;
                                                 GET 5 ;
                                                 DUP ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 GET 3 ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 CAR ;
                                                 PAIR ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 GET ;
                                                 IF_NONE { PUSH int 416 ; FAILWITH } {} ;
                                                 { DIP 4 { DUP } ; DIG 5 } ;
                                                 GET 4 ;
                                                 ADD ;
                                                 SOME ;
                                                 SWAP ;
                                                 UPDATE ;
                                                 UPDATE 5 ;
                                                 DUG 3 }
                                               { DIG 3 ;
                                                 DUP ;
                                                 GET 5 ;
                                                 { DIP 2 { DUP } ; DIG 3 } ;
                                                 GET 4 ;
                                                 SOME ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 GET 3 ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 CAR ;
                                                 PAIR ;
                                                 UPDATE ;
                                                 UPDATE 5 ;
                                                 DUG 3 } ;
                                            DIG 3 ;
                                            DUP ;
                                            GET 21 ;
                                            DUP ;
                                            { DIP 3 { DUP } ; DIG 4 } ;
                                            GET 3 ;
                                            DUP ;
                                            DUG 2 ;
                                            GET ;
                                            IF_NONE { PUSH int 420 ; FAILWITH } {} ;
                                            DIG 4 ;
                                            CAR ;
                                            UPDATE 7 ;
                                            SOME ;
                                            SWAP ;
                                            UPDATE ;
                                            UPDATE 21 ;
                                            DUG 2 }
                                          { DROP } } ;
                                DROP } ;
                         DROP } }
                   { IF_LEFT
                       { SENDER ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 7 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ; DUP ; DUG 2 ; CAR ; SENDER ; COMPARE ; EQ } ;
                         IF {} { PUSH int 713 ; FAILWITH } ;
                         DUP ;
                         ITER { DIG 2 ;
                                DUP ;
                                GET 21 ;
                                DUP ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 6 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 716 ; FAILWITH } {} ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                CAR ;
                                UPDATE 3 ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 21 ;
                                DUP ;
                                GET 21 ;
                                DUP ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 6 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 717 ; FAILWITH } {} ;
                                { DIP 4 { DUP } ; DIG 5 } ;
                                GET 5 ;
                                UPDATE 11 ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 21 ;
                                DUP ;
                                GET 21 ;
                                DUP ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 6 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 718 ; FAILWITH } {} ;
                                DIG 4 ;
                                GET 3 ;
                                UPDATE 9 ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 21 ;
                                SWAP } ;
                         DROP }
                       { DUP ;
                         ITER { IF_LEFT
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    GET 15 ;
                                    PUSH (option unit) (Some Unit) ;
                                    DIG 3 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    PAIR 3 ;
                                    UPDATE ;
                                    UPDATE 15 ;
                                    SWAP }
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    GET 15 ;
                                    NONE unit ;
                                    DIG 3 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    PAIR 3 ;
                                    UPDATE ;
                                    UPDATE 15 ;
                                    SWAP } } ;
                         DROP } } } ;
             NIL operation } ;
         PAIR } }
