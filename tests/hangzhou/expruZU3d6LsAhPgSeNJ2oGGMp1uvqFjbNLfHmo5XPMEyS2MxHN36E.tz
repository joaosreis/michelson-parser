{ storage
    (pair (pair (pair (big_map %alias bytes bool) (big_map %alias_metadata bytes bytes))
                (pair (big_map %entries address bool) (nat %fee)))
          (pair (pair (address %hdao)
                      (big_map %invoices address (pair (bytes %alias) (bytes %invoice))))
                (pair (address %manager)
                      (pair (big_map %metadata string bytes) (big_map %registries address bytes))))) ;
  parameter
    (or (pair %ban (address %address) (bytes %invoice))
        (or (pair %registry (bytes %alias) (bytes %metadata)) (nat %update_fee))) ;
  code { UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             GET 5 ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             DUP 5 ;
             CDR ;
             DIG 6 ;
             GET 8 ;
             DUP 7 ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 51 ; FAILWITH } {} ;
             PAIR ;
             SOME ;
             DUP 6 ;
             CAR ;
             UPDATE ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             DUG 2 ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             NONE bool ;
             DIG 6 ;
             GET 8 ;
             DUP 7 ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 55 ; FAILWITH } {} ;
             UPDATE ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             DUG 2 ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             NONE bytes ;
             DIG 6 ;
             GET 8 ;
             DUP 7 ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 56 ; FAILWITH } {} ;
             UPDATE ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             GET 8 ;
             NONE bytes ;
             DIG 3 ;
             CAR ;
             UPDATE ;
             UPDATE 8 ;
             NIL operation }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH bool False } {} ;
                 IF { PUSH string
                           "WrongCondition: ~ self.data.alias.get(params.alias, default_value = False)" ;
                      FAILWITH }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH bool False } {} ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      UNPAIR ;
                      UNPAIR ;
                      UNPAIR ;
                      NONE bool ;
                      DIG 6 ;
                      GET 8 ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      DUG 2 ;
                      UNPAIR ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      NONE bytes ;
                      DIG 6 ;
                      GET 8 ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 56 ; FAILWITH } {} ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      GET 8 ;
                      NONE bytes ;
                      SENDER ;
                      UPDATE ;
                      UPDATE 8 ;
                      SWAP }
                    {} ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 PUSH (option bool) (Some True) ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 UNPAIR ;
                 PUSH (option bool) (Some True) ;
                 DUP 6 ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 DUP 5 ;
                 CDR ;
                 SOME ;
                 DUP 6 ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 GET 8 ;
                 DIG 2 ;
                 CAR ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 UPDATE 8 ;
                 DUP ;
                 GET 3 ;
                 CAR ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DUP 6 ;
                 CAR ;
                 GET 4 ;
                 PUSH nat 0 ;
                 SELF_ADDRESS ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CAR ;
                 DIG 3 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation } } ;
         PAIR } }
