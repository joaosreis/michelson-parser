{ parameter
    (or (or (pair %create_ref
               (timestamp %end_time)
               (map %choices nat (pair (nat %id) (pair (string %short) (nat %votes)))))
            (nat %unvote))
        (pair %vote (nat %amt) (pair (nat %ref_id) (nat %choice_id)))) ;
  storage
    (pair (pair %admin (address %admin) (option %pending_admin address))
          (pair (big_map %referendums
                   nat
                   (pair (timestamp %end_time)
                         (map %choices nat (pair (nat %id) (pair (string %short) (nat %votes))))))
                (pair (nat %next_ref_id)
                      (pair (big_map %svote_ledger
                               address
                               (pair (nat %staked) (pair (nat %ref_id) (nat %choice_id))))
                            (pair (pair %vote_currency (address %fa2_address) (nat %token_id))
                                  (big_map %metadata string bytes)))))) ;
  code { LAMBDA
           (pair (pair address address) (pair nat (pair address nat)))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             NIL (pair nat nat) ;
             SWAP ;
             DUP 3 ;
             CDR ;
             PAIR ;
             CONS ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             PAIR ;
             UNPAIR 3 ;
             DUP 3 ;
             CDR ;
             MAP { DUP 3 ; PAIR } ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "Invalid FA2 Address" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             DIG 3 ;
             DIG 4 ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair nat
                 (pair (pair address (option address))
                       (pair (big_map nat (pair timestamp (map nat (pair nat (pair string nat)))))
                             (pair nat
                                   (pair (big_map address (pair nat (pair nat nat)))
                                         (pair (pair address nat) (big_map string bytes)))))))
           (pair timestamp (map nat (pair nat (pair string nat))))
           { UNPAIR ;
             SWAP ;
             CDR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "InvalidRefID" ; FAILWITH } {} } ;
         LAMBDA
           (pair nat (pair timestamp (map nat (pair nat (pair string nat)))))
           (pair nat (pair string nat))
           { UNPAIR ;
             SWAP ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "InvalidChoiceID" ; FAILWITH } {} } ;
         DIG 4 ;
         UNPAIR ;
         SELF_ADDRESS ;
         SWAP ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 PUSH string "Amount must be 0mutez" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 SOME ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PUSH nat 1 ;
                 DIG 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ;
                 SWAP ;
                 PUSH string "Amount must be 0mutez" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH string "NoVotes" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 NONE (pair nat (pair nat nat)) ;
                 SENDER ;
                 UPDATE ;
                 DUP 3 ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 GT ;
                 IF { DUP ; CDR ; CDR }
                    { PUSH int 0 ;
                      DUP 5 ;
                      CAR ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      SUB ;
                      COMPARE ;
                      LT ;
                      IF { PUSH string "fatal" ; FAILWITH }
                         { DUP 4 ; CAR ; SWAP ; DUP ; DUG 2 ; CDR ; CDR ; SUB ; ABS } } ;
                 DUP 6 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DUP 6 ;
                 CAR ;
                 PAIR ;
                 SENDER ;
                 DIG 8 ;
                 PAIR ;
                 PAIR ;
                 DIG 7 ;
                 SWAP ;
                 EXEC ;
                 DUP 7 ;
                 CDR ;
                 CDR ;
                 DUP 8 ;
                 CDR ;
                 CAR ;
                 DUP 6 ;
                 CDR ;
                 DIG 4 ;
                 DUP 6 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 5 ;
                 CAR ;
                 PAIR ;
                 SOME ;
                 DUP 8 ;
                 CDR ;
                 CDR ;
                 UPDATE ;
                 DIG 4 ;
                 CAR ;
                 PAIR ;
                 SOME ;
                 DIG 5 ;
                 CDR ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } }
           { SWAP ;
             DUG 2 ;
             PUSH string "AMOUNT_TOO_LOW" ;
             PUSH nat 0 ;
             DUP 3 ;
             CAR ;
             COMPARE ;
             GT ;
             PAIR ;
             DUP 7 ;
             SWAP ;
             EXEC ;
             DROP ;
             PUSH string "Amount must be 0mutez" ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             PAIR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SENDER ;
             GET ;
             IF_NONE
               { DUP ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 PUSH nat 0 ;
                 PAIR }
               {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             ADD ;
             DUP 4 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             DUP 3 ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SOME ;
             SENDER ;
             UPDATE ;
             DUP 4 ;
             DUP 3 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 7 ;
             SWAP ;
             EXEC ;
             DUP ;
             DUP 4 ;
             CDR ;
             CDR ;
             PAIR ;
             DIG 7 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             NOW ;
             COMPARE ;
             GT ;
             IF { DUP ; CDR ; CDR }
                { DUP 5 ; CAR ; SWAP ; DUP ; DUG 2 ; CDR ; CDR ; ADD } ;
             DUP 7 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             DIG 6 ;
             CAR ;
             PAIR ;
             DIG 7 ;
             SENDER ;
             PAIR ;
             PAIR ;
             DIG 7 ;
             SWAP ;
             EXEC ;
             DUP 7 ;
             CDR ;
             CDR ;
             DUP 8 ;
             CDR ;
             CAR ;
             DUP 6 ;
             CDR ;
             DIG 4 ;
             DUP 6 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 5 ;
             CAR ;
             PAIR ;
             SOME ;
             DUP 8 ;
             CDR ;
             CDR ;
             UPDATE ;
             DIG 4 ;
             CAR ;
             PAIR ;
             SOME ;
             DIG 5 ;
             CDR ;
             CAR ;
             UPDATE ;
             PAIR ;
             DIG 3 ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 3 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR } } }
