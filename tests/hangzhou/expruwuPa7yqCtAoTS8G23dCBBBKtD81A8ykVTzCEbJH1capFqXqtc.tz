{ storage
    (pair (pair (pair (address %administrator) (address %bankerAddress))
                (pair (address %ftMosAddress) (nat %ftMosTokenID)))
          (pair (pair (address %ftMozAddress) (nat %ftMozTokenID))
                (pair (map %goodsStoreMap
                         nat
                         (pair (pair (option %expectedTokenAddress address) (string %expectedTokenType))
                               (pair (nat %expectedValue) (pair (address %sellerAddress) (timestamp %startTime)))))
                      (pair (nat %mosPerMozHundred) (address %mozikNftAddress))))) ;
  parameter
    (or (or (pair %TokenToTokenSwap (nat %_direction) (nat %_tokenAmount))
            (or (pair %UpdateParameters
                   (pair (pair (address %_admin) (address %_bankerAddress))
                         (pair (address %_ftMosAddress) (nat %_ftMosTokenID)))
                   (pair (pair (address %_ftMozAddress) (nat %_ftMozTokenID))
                         (pair (nat %_mosPerMozHundred) (address %_mozikNftAddress))))
                (pair %WithdrawContractXTZ (mutez %_amount) (address %_destination))))
        (or (nat %buyNFT)
            (or (nat %cancelSell)
                (pair %sellNFT
                   (pair (string %_expectedTokenType) (nat %_saleTokenID))
                   (pair (timestamp %_startTime) (pair (option %_tokenAddress address) (nat %_value))))))) ;
  code { CAST (pair (or (or (pair nat nat)
                            (or (pair (pair (pair address address) (pair address nat))
                                      (pair (pair address nat) (pair nat address)))
                                (pair mutez address)))
                        (or nat (or nat (pair (pair string nat) (pair timestamp (pair (option address) nat))))))
                    (pair (pair (pair address address) (pair address nat))
                          (pair (pair address nat)
                                (pair (map nat (pair (pair (option address) string) (pair nat (pair address timestamp))))
                                      (pair nat address))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CAR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 EQ ;
                 IF { NIL operation ;
                      DUP 3 ;
                      GET 3 ;
                      CAR ;
                      CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                      IF_NONE { PUSH int 963 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      NIL (pair address (list (pair address (pair nat nat)))) ;
                      NIL (pair address (pair nat nat)) ;
                      DUP 6 ;
                      CDR ;
                      DIG 7 ;
                      DUP ;
                      GET 3 ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 9 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR 3 ;
                      CONS ;
                      SENDER ;
                      PAIR ;
                      CONS ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DUP 3 ;
                      GET 7 ;
                      PUSH nat 100 ;
                      DIG 3 ;
                      CDR ;
                      MUL ;
                      EDIV ;
                      IF_NONE { PUSH int 942 ; FAILWITH } { CAR } ;
                      SWAP ;
                      DUP 3 ;
                      CAR ;
                      GET 3 ;
                      CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                      IF_NONE { PUSH int 963 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      NIL (pair address (list (pair address (pair nat nat)))) ;
                      NIL (pair address (pair nat nat)) ;
                      DIG 5 ;
                      DUP 7 ;
                      CAR ;
                      GET 4 ;
                      SENDER ;
                      PAIR 3 ;
                      CONS ;
                      DUP 6 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      CONS ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { DUP ;
                      CAR ;
                      PUSH nat 1 ;
                      COMPARE ;
                      EQ ;
                      IF { NIL operation ;
                           DUP 3 ;
                           CAR ;
                           GET 3 ;
                           CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                           IF_NONE { PUSH int 963 ; FAILWITH } {} ;
                           PUSH mutez 0 ;
                           NIL (pair address (list (pair address (pair nat nat)))) ;
                           NIL (pair address (pair nat nat)) ;
                           DUP 6 ;
                           CDR ;
                           DIG 7 ;
                           DUP ;
                           CAR ;
                           GET 4 ;
                           SWAP ;
                           DUP ;
                           DUG 9 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           PAIR 3 ;
                           CONS ;
                           SENDER ;
                           PAIR ;
                           CONS ;
                           TRANSFER_TOKENS ;
                           CONS ;
                           PUSH nat 100 ;
                           DUP 4 ;
                           GET 7 ;
                           DIG 3 ;
                           CDR ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH int 952 ; FAILWITH } { CAR } ;
                           SWAP ;
                           DUP 3 ;
                           GET 3 ;
                           CAR ;
                           CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                           IF_NONE { PUSH int 963 ; FAILWITH } {} ;
                           PUSH mutez 0 ;
                           NIL (pair address (list (pair address (pair nat nat)))) ;
                           NIL (pair address (pair nat nat)) ;
                           DIG 5 ;
                           DUP 7 ;
                           GET 3 ;
                           CDR ;
                           SENDER ;
                           PAIR 3 ;
                           CONS ;
                           DUP 6 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           PAIR ;
                           CONS ;
                           TRANSFER_TOKENS ;
                           CONS }
                         { PUSH string "Only MOZ_TO_MOS or MOS_TO_MOZ is supported!" ; FAILWITH } } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "The sender is MUST be the origin administrator" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     UPDATE 8 ;
                     UNPAIR ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     GET 3 ;
                     DUP 4 ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     CDR ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     DUP 4 ;
                     GET 3 ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     UPDATE 7 ;
                     UNPAIR ;
                     UNPAIR ;
                     CAR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "only administrator can withdraw XTZ from contract!" ;
                          FAILWITH } ;
                     DUP ;
                     CDR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 751 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 MEM ;
                 IF {} { PUSH string "The token is not on sale!" ; FAILWITH } ;
                 NOW ;
                 DUP 3 ;
                 GET 5 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 GET 6 ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "The token is not on sale!" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 889 ; FAILWITH } {} ;
                 GET 5 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF {} { PUSH string "The buy can't be the seller!" ; FAILWITH } ;
                 PUSH string "XTZ" ;
                 DUP 3 ;
                 GET 5 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 892 ; FAILWITH } {} ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH mutez 1 ;
                      DUP 3 ;
                      GET 5 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 894 ; FAILWITH } {} ;
                      GET 3 ;
                      MUL ;
                      AMOUNT ;
                      COMPARE ;
                      GE ;
                      IF {} { PUSH string "Not Enought XTZ for buying!" ; FAILWITH } ;
                      NIL operation ;
                      DUP 3 ;
                      GET 5 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 899 ; FAILWITH } {} ;
                      GET 5 ;
                      CONTRACT unit ;
                      IF_NONE { PUSH string "transfer XTZ is failed" ; FAILWITH } {} ;
                      AMOUNT ;
                      UNIT ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { PUSH string "MOZ" ;
                      DUP 3 ;
                      GET 5 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 904 ; FAILWITH } {} ;
                      CAR ;
                      CDR ;
                      COMPARE ;
                      EQ ;
                      IF { NIL operation ;
                           DUP 3 ;
                           GET 3 ;
                           CAR ;
                           CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                           IF_NONE { PUSH int 963 ; FAILWITH } {} ;
                           PUSH mutez 0 ;
                           NIL (pair address (list (pair address (pair nat nat)))) ;
                           NIL (pair address (pair nat nat)) ;
                           DUP 7 ;
                           GET 5 ;
                           DUP 7 ;
                           GET ;
                           IF_NONE { PUSH int 906 ; FAILWITH } {} ;
                           GET 3 ;
                           DIG 7 ;
                           DUP ;
                           GET 3 ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 9 ;
                           GET 5 ;
                           DUP 9 ;
                           GET ;
                           IF_NONE { PUSH int 906 ; FAILWITH } {} ;
                           GET 5 ;
                           PAIR 3 ;
                           CONS ;
                           SENDER ;
                           PAIR ;
                           CONS ;
                           TRANSFER_TOKENS ;
                           CONS }
                         { PUSH string "only XTZ or MOZ be for buy!" ; FAILWITH } } ;
                 DUP 3 ;
                 GET 8 ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 963 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 PUSH nat 1 ;
                 DUP 7 ;
                 SENDER ;
                 PAIR 3 ;
                 CONS ;
                 DUP 7 ;
                 GET 5 ;
                 DUP 7 ;
                 GET ;
                 IF_NONE { PUSH int 917 ; FAILWITH } {} ;
                 GET 5 ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 GET 5 ;
                 NONE (pair (pair (option address) string) (pair nat (pair address timestamp))) ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 5 ;
                 SWAP }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF {}
                        { PUSH string "The token is not on sale, no need to cancel!" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 5 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 861 ; FAILWITH } {} ;
                          GET 5 ;
                          SENDER ;
                          COMPARE ;
                          EQ } ;
                     IF {}
                        { PUSH string "The sender is neither the administrator nor the seller!" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     GET 5 ;
                     NONE (pair (pair (option address) string) (pair nat (pair address timestamp))) ;
                     DIG 3 ;
                     UPDATE ;
                     UPDATE 5 }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     MEM ;
                     IF { PUSH string "This token is already ON SALE!" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     PUSH string "XTZ" ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True }
                        { DUP ; CAR ; CAR ; PUSH string "MOZ" ; COMPARE ; EQ } ;
                     IF {}
                        { PUSH string "_expectedTokenType should only be XTZ or MOZ!" ; FAILWITH } ;
                     DUP ;
                     GET 3 ;
                     NOW ;
                     SWAP ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "The token can't be set saled in the past!" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     GET 5 ;
                     DUP 3 ;
                     GET 3 ;
                     SENDER ;
                     PAIR ;
                     DUP 4 ;
                     GET 6 ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 5 ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     UPDATE ;
                     UPDATE 5 } ;
                 NIL operation } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
