{ parameter
    (or (or (list %add_tokens (pair (nat %kalamint_id) (nat %token_id)))
            (or (list %claim nat) (unit %confirm_admin)))
        (or (or (address %set_administrator) (bool %set_pause))
            (or (list %verify_owner
                   (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))
                (list %withdraw_token nat)))) ;
  storage
    (pair (address %administrator)
          (pair (address %burn_address)
                (pair (address %kalamint)
                      (pair (big_map %metadata string bytes)
                            (pair (address %nft_registry)
                                  (pair (bool %paused)
                                        (pair (option %pending_admin address)
                                              (big_map %tokens nat (pair (nat %kalamint_id) (nat %token_id)))))))))) ;
  code { CAST (pair (or (or (list (pair nat nat)) (or (list nat) unit))
                        (or (or address bool) (or (list (pair (pair address nat) nat)) (list nat))))
                    (pair address
                          (pair address
                                (pair address
                                      (pair (big_map string bytes)
                                            (pair address (pair bool (pair (option address) (big_map nat (pair nat nat)))))))))) ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                      FAILWITH } ;
                 DUP ;
                 ITER { DIG 2 ;
                        DUP ;
                        GET 14 ;
                        DIG 2 ;
                        DUP ;
                        SOME ;
                        SWAP ;
                        CDR ;
                        UPDATE ;
                        UPDATE 14 ;
                        SWAP } ;
                 DROP ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 11 ;
                     IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                     NIL (pair address nat) ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     ITER { SWAP ;
                            { DIP 3 { DUP } ; DIG 4 } ;
                            GET 14 ;
                            DIG 2 ;
                            GET ;
                            IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                            CAR ;
                            SENDER ;
                            PAIR ;
                            CONS } ;
                     NIL operation ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     GET 5 ;
                     CONTRACT %balance_of
                       (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                     IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     SELF_ADDRESS ;
                     CONTRACT %verify_owner (list (pair (pair address nat) nat)) ;
                     IF_NONE { PUSH int 50 ; FAILWITH } {} ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     NIL (pair address (pair nat nat)) ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     ITER { SWAP ;
                            PUSH nat 1 ;
                            { DIP 6 { DUP } ; DIG 7 } ;
                            GET 14 ;
                            DIG 3 ;
                            GET ;
                            IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                            CAR ;
                            { DIP 6 { DUP } ; DIG 7 } ;
                            GET 3 ;
                            PAIR 3 ;
                            CONS } ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     GET 5 ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 85 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     DIG 4 ;
                     SENDER ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     NIL (pair address (pair nat nat)) ;
                     DIG 2 ;
                     ITER { SWAP ; PUSH nat 1 ; DIG 2 ; SENDER ; PAIR 3 ; CONS } ;
                     SWAP ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     GET 9 ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 102 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     DIG 4 ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { DROP ;
                     DUP ;
                     GET 13 ;
                     IF_NONE { PUSH string "NO_PENDING_ADMIN" ; FAILWITH } {} ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "NOT_PENGING_ADMIN" ; FAILWITH } ;
                     DUP ;
                     GET 13 ;
                     IF_NONE { PUSH string "NO_PENDING_ADMIN" ; FAILWITH } {} ;
                     UPDATE 1 ;
                     NONE address ;
                     UPDATE 13 ;
                     NIL operation } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "NOT_ADMIN" ; FAILWITH } ;
                     SOME ;
                     UPDATE 13 }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     UPDATE 11 } ;
                 NIL operation }
               { IF_LEFT
                   { DUP ;
                     ITER { CDR ;
                            PUSH nat 1 ;
                            COMPARE ;
                            EQ ;
                            IF {} { PUSH string "NOT_OWNER" ; FAILWITH } } ;
                     DROP ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     NIL (pair address (pair nat nat)) ;
                     SWAP ;
                     ITER { SWAP ; PUSH nat 1 ; DIG 2 ; SENDER ; PAIR 3 ; CONS } ;
                     NIL operation ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     GET 9 ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     DIG 4 ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
