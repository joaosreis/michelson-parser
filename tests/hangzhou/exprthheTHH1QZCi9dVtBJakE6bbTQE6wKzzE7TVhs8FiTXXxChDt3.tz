{ parameter
    (or (or (or (address %changeAdmin) (unit %claim))
            (or (pair %stake nat (option address)) (nat %unstake)))
        (pair %updateConfig
           (pair (nat %mint_min_amount) (nat %mint_rate_permil))
           (pair (nat %referer_upline_permil) (nat %reward_amount_per_sec)))) ;
  storage
    (pair (pair (pair (pair (big_map %accounts
                               address
                               (pair (pair (pair (nat %last_reward_per_stake) (nat %reward_amount))
                                           (pair (nat %stake_amount) (option %upline address)))
                                     (nat %virt_stake_amount)))
                            (address %admin))
                      (pair (pair %config
                               (pair (nat %mint_min_amount) (nat %mint_rate_permil))
                               (pair (nat %referer_upline_permil) (nat %reward_amount_per_sec)))
                            (timestamp %last_update_time)))
                (pair (pair (nat %reward_per_stake) (address %reward_token))
                      (pair (address %token) (nat %total_stack))))
          (nat %total_virt_stack)) ;
  code { PUSH nat 1000000 ;
         LAMBDA
           (pair (pair nat address) (pair address address))
           (list operation)
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "FA2_TOKEN_NOT_FOUND" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             { DIP 4 { DUP } ; DIG 5 } ;
             CAR ;
             CDR ;
             NIL (pair address (pair nat nat)) ;
             { DIP 6 { DUP } ; DIG 7 } ;
             CDR ;
             CAR ;
             PUSH nat 0 ;
             DIG 8 ;
             CAR ;
             CAR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             CONS ;
             SWAP ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS ;
             CONS } ;
         LAMBDA
           (pair address
                 (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (option address))) nat)) address)
                                   (pair (pair (pair nat nat) (pair nat nat)) timestamp))
                             (pair (pair nat address) (pair address nat)))
                       nat))
           (pair (pair (pair nat nat) (pair nat (option address))) nat)
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE
               { PUSH nat 0 ;
                 NONE address ;
                 PUSH nat 0 ;
                 PAIR ;
                 PUSH nat 0 ;
                 PUSH nat 0 ;
                 PAIR ;
                 PAIR ;
                 PAIR }
               {} } ;
         { DIP 2 { DUP } ; DIG 3 } ;
         LAMBDA
           (pair nat
                 (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (option address))) nat)) address)
                                   (pair (pair (pair nat nat) (pair nat nat)) timestamp))
                             (pair (pair nat address) (pair address nat)))
                       nat))
           (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (option address))) nat)) address)
                             (pair (pair (pair nat nat) (pair nat nat)) timestamp))
                       (pair (pair nat address) (pair address nat)))
                 nat)
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             ADD ;
             NOW ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             COMPARE ;
             LT ;
             IF { PUSH nat 0 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  GT ;
                  IF { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       { DIP 2 { DUP } ; DIG 3 } ;
                       CAR ;
                       CDR ;
                       CDR ;
                       { DIP 3 { DUP } ; DIG 4 } ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       DIG 3 ;
                       DIG 5 ;
                       { DIP 5 { DUP } ; DIG 6 } ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       { DIP 6 { DUP } ; DIG 7 } ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       NOW ;
                       SUB ;
                       ABS ;
                       MUL ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                       CAR ;
                       { DIP 4 { DUP } ; DIG 5 } ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       ADD ;
                       PAIR ;
                       PAIR ;
                       DIG 2 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR }
                     { DIG 2 ; DROP 2 } ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  NOW ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR }
                { DIG 2 ; DROP 2 } } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         LAMBDA
           (pair nat
                 (pair (pair (pair (pair nat nat) (pair nat (option address))) nat)
                       (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (option address))) nat)) address)
                                         (pair (pair (pair nat nat) (pair nat nat)) timestamp))
                                   (pair (pair nat address) (pair address nat)))
                             nat)))
           (pair (pair (pair nat nat) (pair nat (option address))) nat)
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             DIG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             DIG 3 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             SUB ;
             ABS ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CDR ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CAR ;
             CDR ;
             CAR ;
             ADD ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             DIG 2 ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CAR ;
             CAR ;
             CDR ;
             ADD ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 4 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP ; PUSH string "SF_DENIED" ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          { DIP 2 { DUP } ; DIG 3 } ;
                          CAR ;
                          CDR ;
                          { DIP 3 { DUP } ; DIG 4 } ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR }
                   { DROP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     SENDER ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "SF_NO_REWARDS_YET" ; FAILWITH } {} ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     { DIP 6 { DUP } ; DIG 7 } ;
                     CDR ;
                     { DIP 7 { DUP } ; DIG 8 } ;
                     CAR ;
                     CDR ;
                     PUSH nat 0 ;
                     DIG 9 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     SELF_ADDRESS ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PUSH nat 1000 ;
                     DIG 2 ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     ADD ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GT ;
                     IF { NIL (pair nat (pair address nat)) ;
                          PUSH nat 0 ;
                          SELF_ADDRESS ;
                          DIG 3 ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          CONS ;
                          SWAP ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CONTRACT %mint (list (pair (nat %token_id) (pair (address %user) (nat %amount)))) ;
                          IF_NONE { PUSH string "FA2_TOKEN_NOT_FOUND" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 2 ;
                          TRANSFER_TOKENS ;
                          SOME }
                        { DROP 2 ; NONE operation } ;
                     DIG 2 ;
                     SWAP ;
                     IF_NONE { SWAP } { DIG 2 ; SWAP ; CONS } ;
                     PAIR } }
               { IF_LEFT
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     DIG 2 ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     SENDER ;
                     PAIR ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     PAIR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     IF_NONE
                       { DUP ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR }
                       { DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     IF_NONE
                       { DIG 2 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 3 ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 4 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { DIG 2 ;
                         DIG 5 ;
                         DROP 2 ;
                         SENDER ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "SF_CANNOT_BE_SELFUPLINE" ; FAILWITH } {} ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 1000 ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         ADD ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         SWAP ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CDR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 7 { DUP } ; DIG 8 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 8 { DUP } ; DIG 9 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CDR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         CAR ;
                         CDR ;
                         DIG 7 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 11 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 7 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     CAR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SELF_ADDRESS ;
                     PAIR ;
                     SENDER ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     PAIR }
                   { SWAP ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     SENDER ;
                     PAIR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     PAIR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     COMPARE ;
                     EQ ;
                     IF { DUP ; CAR ; CDR ; CAR } { { DIP 2 { DUP } ; DIG 3 } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "SF_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     IF_NONE
                       { DIG 3 ; DIG 4 ; DIG 5 ; DROP 3 ; DIG 2 }
                       { { DIP 3 { DUP } ; DIG 4 } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 1000 ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 7 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         SUB ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         PUSH int 0 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         COMPARE ;
                         LT ;
                         IF { SWAP ; DROP ; PUSH int 0 } { SWAP } ;
                         ABS ;
                         DIG 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CDR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         CAR ;
                         CDR ;
                         { DIP 7 { DUP } ; DIG 8 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 8 { DUP } ; DIG 9 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 9 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         DIG 7 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SUB ;
                         ABS ;
                         SWAP ;
                         CAR ;
                         PAIR } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     ABS ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SUB ;
                     ABS ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     PAIR ;
                     SELF_ADDRESS ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     PAIR } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DROP 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 3 ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } } }
