{ storage
    (pair (pair (pair (address %FA12TokenContract)
                      (pair (address %admin) (big_map %hashed_salts nat bytes)))
                (pair (pair (nat %id) (nat %limit))
                      (pair (big_map %metadata string bytes) (bool %paused))))
          (pair (pair (pair (big_map %previous_winners
                               nat
                               (pair (nat %ticket) (pair (nat %users) (address %winner))))
                            (nat %price))
                      (pair (address %reserve) (nat %round_num)))
                (pair (pair (map %tickets nat address) (map %user_map address (list nat)))
                      (pair (big_map %winning_data nat (pair (bytes %salt) (pair (bytes %time) (bytes %volume))))
                            (nat %winning_price))))) ;
  parameter
    (or (or (nat %buyTicket) (unit %pause))
        (or (pair %save_data (bytes %salt) (pair (bytes %time) (bytes %volume)))
            (or (bytes %save_hashed_salt) (nat %selectWinner)))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 6 ;
                 IF { PUSH string "Contract is paused please use the new contract" ; FAILWITH }
                    {} ;
                 DUP ;
                 PUSH nat 0 ;
                 COMPARE ;
                 NEQ ;
                 IF {} { PUSH string "You must buy at least 1 ticket" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 GET 3 ;
                 CAR ;
                 DUP 3 ;
                 ADD ;
                 COMPARE ;
                 LE ;
                 IF {}
                    { PUSH string
                           "Not enough remaining ticket. Please check the number of remaining tickets" ;
                      FAILWITH } ;
                 DUP ;
                 PUSH nat 0 ;
                 DUP ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 LOOP { DUP 4 ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        UNPAIR ;
                        SENDER ;
                        SOME ;
                        DIG 9 ;
                        CAR ;
                        GET 3 ;
                        CAR ;
                        UPDATE ;
                        PAIR ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        DUP ;
                        DUG 4 ;
                        GET 5 ;
                        CDR ;
                        SENDER ;
                        MEM ;
                        IF { DUP 4 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             DUP 9 ;
                             GET 5 ;
                             CDR ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 52 ; FAILWITH } {} ;
                             DIG 9 ;
                             CAR ;
                             GET 3 ;
                             CAR ;
                             CONS ;
                             SOME ;
                             SENDER ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DUG 3 }
                           { DUP 4 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             NIL nat ;
                             DIG 9 ;
                             CAR ;
                             GET 3 ;
                             CAR ;
                             CONS ;
                             SOME ;
                             SENDER ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DUG 3 } ;
                        DIG 3 ;
                        UNPAIR ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        UNPAIR ;
                        PUSH nat 1 ;
                        ADD ;
                        PAIR ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        PAIR ;
                        DUG 3 ;
                        PUSH nat 1 ;
                        ADD ;
                        DUP ;
                        DUP 3 ;
                        COMPARE ;
                        GT } ;
                 DROP 2 ;
                 NIL operation ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CONTRACT %transfer (pair address (pair address nat)) ;
                 IF_NONE { PUSH int 59 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DUP 5 ;
                 GET 3 ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 MUL ;
                 DUP 5 ;
                 GET 3 ;
                 GET 3 ;
                 SENDER ;
                 PAIR 3 ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DROP ;
                 DUP ;
                 CAR ;
                 GET 6 ;
                 IF { PUSH string "Contract is paused please use the new contract" ; FAILWITH }
                    {} ;
                 DUP ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "You must be admin" ; FAILWITH } ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 CAR ;
                 PUSH bool True ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 6 ;
                 IF { PUSH string "Contract is paused please use the new contract" ; FAILWITH }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "You must be admin" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 GET 7 ;
                 DIG 2 ;
                 SOME ;
                 PUSH nat 1 ;
                 DIG 4 ;
                 GET 3 ;
                 GET 4 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 97 ; FAILWITH } {} ;
                 UPDATE ;
                 UPDATE 7 ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 6 ;
                     IF { PUSH string "Contract is paused please use the new contract" ; FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "You must be admin" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DIG 5 ;
                     SOME ;
                     DIG 6 ;
                     GET 3 ;
                     GET 4 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 6 ;
                     IF { PUSH string "Contract is paused please use the new contract" ; FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "You must be admin" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     GET 3 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     GET 3 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Not all tickets are sold" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     DIG 6 ;
                     DUP ;
                     GET 5 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     GET 3 ;
                     CDR ;
                     DUP 8 ;
                     EDIV ;
                     IF_NONE { PUSH int 71 ; FAILWITH } { CDR } ;
                     GET ;
                     IF_NONE { PUSH int 72 ; FAILWITH } {} ;
                     DUP 8 ;
                     GET 5 ;
                     CDR ;
                     SIZE ;
                     DUP 9 ;
                     CAR ;
                     GET 3 ;
                     CDR ;
                     DUP 9 ;
                     EDIV ;
                     IF_NONE { PUSH int 71 ; FAILWITH } { CDR } ;
                     PAIR 3 ;
                     SOME ;
                     DIG 7 ;
                     GET 3 ;
                     GET 4 ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH nat 1 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT %transfer (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     DUP ;
                     GET 8 ;
                     SWAP ;
                     DUP ;
                     GET 5 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     GET 3 ;
                     CDR ;
                     DUP 7 ;
                     EDIV ;
                     IF_NONE { PUSH int 71 ; FAILWITH } { CDR } ;
                     GET ;
                     IF_NONE { PUSH int 72 ; FAILWITH } {} ;
                     DUP 7 ;
                     GET 3 ;
                     GET 3 ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     PUSH nat 0 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     GET 3 ;
                     CDR ;
                     PUSH nat 0 ;
                     DUP ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     LOOP { DUP 5 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            NONE (list nat) ;
                            DIG 10 ;
                            GET 5 ;
                            CAR ;
                            DUP 8 ;
                            GET ;
                            IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                            UPDATE ;
                            SWAP ;
                            NONE address ;
                            DUP 7 ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 4 ;
                            PUSH nat 1 ;
                            ADD ;
                            DUP ;
                            DUP 3 ;
                            COMPARE ;
                            GT } ;
                     DROP 2 ;
                     SWAP ;
                     DROP } } } ;
         PAIR } }
