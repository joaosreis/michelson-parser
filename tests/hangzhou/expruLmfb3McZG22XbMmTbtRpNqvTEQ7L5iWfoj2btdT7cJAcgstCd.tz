{ storage
    (pair (big_map %administrators address unit)
          (pair (option %baker key_hash) (address %pool_address))) ;
  parameter
    (or (or (pair %bulk_execute
               (lambda %execution_payload unit (list operation))
               (list %forwarders address))
            (pair %create_forwarders
               (option %callback (contract (list address)))
               (nat %number_of_adresses)))
        (or (address %remove_administrator) (address %set_administrator))) ;
  code { CAST (pair (or (or (pair (lambda unit (list operation)) (list address))
                            (pair (option (contract (list address))) nat))
                        (or address address))
                    (pair (big_map address unit) (pair (option key_hash) address))) ;
         LAMBDA
           (pair unit (pair (big_map address unit) (pair (option key_hash) address)))
           (pair (list operation)
                 (pair unit (pair (big_map address unit) (pair (option key_hash) address))))
           { NIL operation ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SENDER ;
             MEM ;
             IF {} { PUSH int 401 ; FAILWITH } ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CDR ;
                 NIL operation ;
                 SWAP ;
                 ITER { CONTRACT %execute (lambda unit (list operation)) ;
                        IF_NONE { PUSH int 112 ; FAILWITH } {} ;
                        PUSH mutez 0 ;
                        DUP 4 ;
                        CAR ;
                        TRANSFER_TOKENS ;
                        CONS } ;
                 SWAP ;
                 DROP ;
                 DIG 2 ;
                 DROP }
               { NIL address ;
                 NIL operation ;
                 DUP 3 ;
                 CDR ;
                 PUSH nat 0 ;
                 DUP ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 LOOP { DUP 6 ;
                        GET 4 ;
                        SELF_ADDRESS ;
                        PAIR ;
                        PUSH mutez 0 ;
                        DUP 8 ;
                        GET 3 ;
                        CREATE_CONTRACT
                          { parameter (or (unit %default) (lambda %execute unit (list operation))) ;
                            storage (pair (address %administrator) (address %recipient)) ;
                            code { CAST (pair (or unit (lambda unit (list operation))) (pair address address)) ;
                                   UNPAIR ;
                                   IF_LEFT
                                     { DROP ;
                                       DUP ;
                                       CDR ;
                                       CONTRACT unit ;
                                       IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                                       NIL operation ;
                                       SWAP ;
                                       BALANCE ;
                                       UNIT ;
                                       TRANSFER_TOKENS ;
                                       CONS }
                                     { SENDER ;
                                       DUP 3 ;
                                       CAR ;
                                       COMPARE ;
                                       EQ ;
                                       IF {} { PUSH int 401 ; FAILWITH } ;
                                       NIL operation ;
                                       SWAP ;
                                       UNIT ;
                                       EXEC ;
                                       NIL operation ;
                                       SWAP ;
                                       ITER { CONS } ;
                                       ITER { CONS } } ;
                                   NIL operation ;
                                   SWAP ;
                                   ITER { CONS } ;
                                   PAIR } } ;
                        PAIR ;
                        DIG 3 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CONS ;
                        DUG 3 ;
                        DIG 4 ;
                        SWAP ;
                        CDR ;
                        CONS ;
                        DUG 3 ;
                        PUSH nat 1 ;
                        ADD ;
                        DUP ;
                        DUP 3 ;
                        COMPARE ;
                        GT } ;
                 DROP 2 ;
                 DUP 3 ;
                 CAR ;
                 IF_NONE
                   { SWAP ; DROP ; SWAP ; DROP ; DIG 2 ; DROP }
                   { DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 2 ;
                     CAR ;
                     IF_NONE { PUSH int 103 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS } } }
           { IF_LEFT
               { DUG 2 ;
                 UNIT ;
                 PAIR ;
                 EXEC ;
                 DUP ;
                 GET 4 ;
                 DUG 2 ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 NONE unit ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 1 ;
                 SWAP }
               { DUG 2 ;
                 UNIT ;
                 PAIR ;
                 EXEC ;
                 DUP ;
                 GET 4 ;
                 DUG 2 ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 PUSH (option unit) (Some Unit) ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 1 ;
                 SWAP } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
