{ storage
    (pair (pair (address %administrator)
                (pair (big_map %aliases address bytes) (address %distributor)))
          (pair (mutez %fee) (pair (nat %max_size) (big_map %metadata string bytes)))) ;
  parameter
    (or (or (string %set_alias) (mutez %set_alias_fee))
        (or (nat %set_alias_max_size) (pair %set_metadata (string %k) (bytes %v)))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SIZE ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "ALIAS_TOO_BIG" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "INSUFFICIENT_AMOUNT" ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 4 ;
                 PACK ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 GET 4 ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 54 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 AMOUNT ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH int 65 ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH int 59 ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH int 81 ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DUP 5 ;
                 CDR ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR } ;
             NIL operation } ;
         PAIR } }
