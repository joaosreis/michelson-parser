{ parameter
    (or (or (or (nat %bailout) (unit %default)) (or (nat %deposit) (nat %internal_bailout)))
        (or (or (nat %internal_deposit) (unit %internal_withdraw))
            (or (list %set_balance
                   (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))
                (unit %withdraw)))) ;
  storage
    (pair (pair (pair (nat %current_balance) (nat %disc_factor))
                (pair (nat %dist_factor)
                      (pair (big_map %dist_factors address nat) (address %engine_address))))
          (pair (pair (nat %last_balance) (pair (address %sender) (big_map %stakes address nat)))
                (pair (address %token_address) (pair (nat %token_id) (nat %total_stake))))) ;
  code { CAST (pair (or (or (or nat unit) (or nat nat))
                        (or (or nat unit) (or (list (pair (pair address nat) nat)) unit)))
                    (pair (pair (pair nat nat) (pair nat (pair (big_map address nat) address)))
                          (pair (pair nat (pair address (big_map address nat))) (pair address (pair nat nat))))) ;
         LAMBDA
           (pair unit
                 (pair (pair (pair nat nat) (pair nat (pair (big_map address nat) address)))
                       (pair (pair nat (pair address (big_map address nat))) (pair address (pair nat nat)))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair nat nat) (pair nat (pair (big_map address nat) address)))
                             (pair (pair nat (pair address (big_map address nat))) (pair address (pair nat nat))))))
           { NIL operation ;
             SWAP ;
             CDR ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET 6 ;
             CONTRACT %update unit ;
             IF_NONE { PUSH int 113 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             UNIT ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 5 ;
             CONTRACT %balance_of
               (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
             IF_NONE { PUSH int 63 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             SELF_ADDRESS ;
             CONTRACT %set_balance (list (pair (pair address nat) nat)) ;
             IF_NONE { PUSH int 65 ; FAILWITH } {} ;
             NIL (pair address nat) ;
             DUP 6 ;
             GET 7 ;
             SELF_ADDRESS ;
             PAIR ;
             CONS ;
             PAIR ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair unit
                 (pair (pair (pair nat nat) (pair nat (pair (big_map address nat) address)))
                       (pair (pair nat (pair address (big_map address nat))) (pair address (pair nat nat)))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair nat nat) (pair nat (pair (big_map address nat) address)))
                             (pair (pair nat (pair address (big_map address nat))) (pair address (pair nat nat))))))
           { NIL operation ;
             SWAP ;
             CDR ;
             DUP ;
             GET 8 ;
             PUSH nat 0 ;
             COMPARE ;
             LT ;
             IF { DUP ;
                  UNPAIR ;
                  UNPAIR ;
                  UNPAIR ;
                  SWAP ;
                  DUP 5 ;
                  GET 8 ;
                  PUSH nat 1000000000000 ;
                  DIG 6 ;
                  DUP ;
                  GET 3 ;
                  CAR ;
                  SWAP ;
                  CAR ;
                  CAR ;
                  CAR ;
                  SUB ;
                  ISNAT ;
                  IF_NONE { PUSH int 84 ; FAILWITH } {} ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 85 ; FAILWITH } { CAR } ;
                  ADD ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  CDR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  PAIR }
                {} ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair unit
                 (pair (pair (pair nat nat) (pair nat (pair (big_map address nat) address)))
                       (pair (pair nat (pair address (big_map address nat))) (pair address (pair nat nat)))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair nat nat) (pair nat (pair (big_map address nat) address)))
                             (pair (pair nat (pair address (big_map address nat))) (pair address (pair nat nat))))))
           { NIL operation ;
             SWAP ;
             CDR ;
             SELF_ADDRESS ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH int 400 ; FAILWITH } ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     DUG 2 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     CAR ;
                     SELF %internal_bailout ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 4 ;
                     GET 8 ;
                     PUSH nat 1000000000000 ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 205 ; FAILWITH } { CAR } ;
                     ADD ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     NIL operation } }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     DUG 2 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     CAR ;
                     SELF %internal_deposit ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DUG 2 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     GET 3 ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 401 ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 4 ;
                     GET 3 ;
                     CAR ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH int 601 ; FAILWITH } ;
                     DUP 3 ;
                     UNPAIR ;
                     UNPAIR ;
                     CAR ;
                     DUP 6 ;
                     GET 8 ;
                     PUSH nat 1000000000000 ;
                     DUP 7 ;
                     DIG 8 ;
                     GET 3 ;
                     CAR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 241 ; FAILWITH } {} ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 241 ; FAILWITH } { CAR } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 3 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 4 ;
                     DIG 5 ;
                     GET 3 ;
                     CAR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 242 ; FAILWITH } {} ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } } }
           { IF_LEFT
               { IF_LEFT
                   { DUP 3 ;
                     DIG 2 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     DUP 6 ;
                     DIG 4 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 4 ;
                     DUP ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     ITER { CONS } ;
                     ITER { DIG 2 ; SWAP ; CONS ; SWAP } ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DUP 3 ;
                     GET 5 ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     DUP 6 ;
                     DUP 8 ;
                     GET 7 ;
                     SELF_ADDRESS ;
                     PAIR 3 ;
                     CONS ;
                     DUP 7 ;
                     GET 3 ;
                     GET 3 ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH nat 1000000000000 ;
                     DUP 4 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 142 ; FAILWITH } { CAR } ;
                     DIG 3 ;
                     DUP ;
                     CAR ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     GET 3 ;
                     MEM ;
                     IF { DIG 3 ;
                          DUP ;
                          CAR ;
                          GET 3 ;
                          SWAP ;
                          DUP ;
                          CAR ;
                          GET 5 ;
                          SWAP ;
                          DUP ;
                          DUG 6 ;
                          GET 3 ;
                          GET 3 ;
                          GET ;
                          IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                          COMPARE ;
                          LT }
                        { PUSH bool False } ;
                     IF { SWAP ;
                          DUP 4 ;
                          GET 3 ;
                          GET 3 ;
                          CONTRACT unit ;
                          IF_NONE { PUSH int 146 ; FAILWITH } {} ;
                          PUSH mutez 1 ;
                          PUSH nat 1000000000000 ;
                          DIG 6 ;
                          DUP ;
                          CAR ;
                          GET 5 ;
                          SWAP ;
                          DUP ;
                          DUG 8 ;
                          GET 3 ;
                          GET 3 ;
                          GET ;
                          IF_NONE { PUSH int 145 ; FAILWITH } {} ;
                          DUP 8 ;
                          CAR ;
                          GET 3 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 145 ; FAILWITH } {} ;
                          DIG 7 ;
                          DUP ;
                          GET 3 ;
                          GET 4 ;
                          SWAP ;
                          DUP ;
                          DUG 9 ;
                          GET 3 ;
                          GET 3 ;
                          GET ;
                          IF_NONE { PUSH int 145 ; FAILWITH } {} ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 145 ; FAILWITH } { CAR } ;
                          MUL ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          SWAP }
                        {} ;
                     DIG 3 ;
                     DUP ;
                     GET 3 ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     GET 3 ;
                     MEM ;
                     IF { DUP 4 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          DIG 9 ;
                          GET 3 ;
                          GET 3 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 148 ; FAILWITH } {} ;
                          DUP 8 ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 3 }
                        { DUP 4 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP 6 ;
                          SOME ;
                          DIG 9 ;
                          GET 3 ;
                          GET 3 ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 3 } ;
                     DUP 4 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP 9 ;
                     CAR ;
                     GET 3 ;
                     SOME ;
                     DIG 9 ;
                     GET 3 ;
                     GET 3 ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     GET 8 ;
                     DIG 2 ;
                     ADD ;
                     UPDATE 8 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     DIG 5 ;
                     ADD ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP }
                   { DUP 3 ;
                     DIG 2 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     DUP 6 ;
                     DIG 4 ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 4 ;
                     DUP ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     ITER { CONS } ;
                     ITER { DIG 2 ; SWAP ; CONS ; SWAP } ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     PUSH nat 1000000000000 ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     GET 3 ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 186 ; FAILWITH } {} ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 186 ; FAILWITH } { CAR } ;
                     SWAP ;
                     DUP 3 ;
                     GET 5 ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     DUP 6 ;
                     DIG 7 ;
                     DUP ;
                     GET 7 ;
                     SWAP ;
                     DUP ;
                     DUG 9 ;
                     GET 3 ;
                     GET 3 ;
                     PAIR 3 ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                     COMPARE ;
                     LT ;
                     IF { SWAP ;
                          DUP 3 ;
                          GET 3 ;
                          GET 3 ;
                          CONTRACT unit ;
                          IF_NONE { PUSH int 191 ; FAILWITH } {} ;
                          PUSH mutez 1 ;
                          PUSH nat 1000000000000 ;
                          DIG 5 ;
                          DUP ;
                          CAR ;
                          GET 5 ;
                          SWAP ;
                          DUP ;
                          DUG 7 ;
                          GET 3 ;
                          GET 3 ;
                          GET ;
                          IF_NONE { PUSH int 190 ; FAILWITH } {} ;
                          DUP 7 ;
                          CAR ;
                          GET 3 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 190 ; FAILWITH } {} ;
                          DIG 6 ;
                          DUP ;
                          GET 3 ;
                          GET 4 ;
                          SWAP ;
                          DUP ;
                          DUG 8 ;
                          GET 3 ;
                          GET 3 ;
                          GET ;
                          IF_NONE { PUSH int 190 ; FAILWITH } {} ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 190 ; FAILWITH } { CAR } ;
                          MUL ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          SWAP }
                        {} ;
                     DUP 3 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     DIG 5 ;
                     GET 3 ;
                     CAR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 193 ; FAILWITH } {} ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUP ;
                     GET 3 ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     GET 3 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 194 ; FAILWITH } {} ;
                     DIG 3 ;
                     GET 8 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 194 ; FAILWITH } {} ;
                     UPDATE 8 ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     NONE nat ;
                     DIG 7 ;
                     GET 3 ;
                     GET 3 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     NONE nat ;
                     DIG 7 ;
                     GET 3 ;
                     GET 3 ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP } }
               { IF_LEFT
                   { DUP ;
                     IF_CONS
                       { SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         CDR ;
                         DIG 3 ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { DROP ; SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP } ;
                     NIL operation }
                   { DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     UNIT ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     SWAP ;
                     CAR ;
                     SELF %internal_withdraw ;
                     PUSH mutez 0 ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
