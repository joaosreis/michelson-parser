{ parameter (or (contract %get_price nat) (map %set_price key (map bytes signature))) ;
  storage
    (pair (pair (nat %last_epoch) (pair (nat %price) (nat %signature_threshold)))
          (pair (pair (int %time_window) (map %trusted_certificates bytes unit))
                (pair (map %trusted_keys key unit) (nat %validity_window_in_epochs)))) ;
  code { CAST (pair (or (contract nat) (map key (map bytes signature)))
                    (pair (pair nat (pair nat nat)) (pair (pair int (map bytes unit)) (pair (map key unit) nat)))) ;
         UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             GET 6 ;
             PUSH nat 900 ;
             PUSH timestamp "1970-01-01T00:00:00Z" ;
             NOW ;
             SUB ;
             ISNAT ;
             { IF_NONE { PUSH int 110 ; FAILWITH } {} } ;
             EDIV ;
             { IF_NONE { PUSH int 110 ; FAILWITH } { CAR } } ;
             SUB ;
             ISNAT ;
             { IF_NONE { PUSH int 111 ; FAILWITH } {} } ;
             DUP 3 ;
             CAR ;
             CAR ;
             COMPARE ;
             GT ;
             IF {} { PUSH int 900 ; FAILWITH } ;
             NIL operation ;
             SWAP ;
             PUSH mutez 0 ;
             DUP 4 ;
             CAR ;
             GET 3 ;
             PUSH nat 1000000000000 ;
             EDIV ;
             { IF_NONE { PUSH int 112 ; FAILWITH } { CAR } } ;
             TRANSFER_TOKENS ;
             CONS }
           { PUSH nat 900 ;
             PUSH timestamp "1970-01-01T00:00:00Z" ;
             NOW ;
             SUB ;
             ISNAT ;
             { IF_NONE { PUSH int 61 ; FAILWITH } {} } ;
             EDIV ;
             { IF_NONE { PUSH int 61 ; FAILWITH } { CAR } } ;
             DUP ;
             DUP 4 ;
             CAR ;
             CAR ;
             COMPARE ;
             LT ;
             IF { EMPTY_MAP bytes nat ;
                  EMPTY_SET nat ;
                  DUP 4 ;
                  ITER { DUP 6 ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         MEM ;
                         IF { DUP ;
                              CDR ;
                              ITER { DUP ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     DUP 4 ;
                                     CAR ;
                                     CHECK_SIGNATURE ;
                                     IF { DUP 4 ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          CAR ;
                                          MEM ;
                                          IF { DIG 3 ;
                                               DUP ;
                                               DIG 2 ;
                                               CAR ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               { IF_NONE { PUSH int 71 ; FAILWITH } {} } ;
                                               PUSH nat 1 ;
                                               ADD ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               DUG 2 }
                                             { DIG 3 ; PUSH (option nat) (Some 1) ; DIG 2 ; CAR ; UPDATE ; DUG 2 } }
                                        { DROP } } ;
                              DROP }
                            { DROP } } ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  ITER { DUP 6 ;
                         CAR ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         COMPARE ;
                         GE ;
                         IF { DUP 6 ;
                              GET 3 ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              UNPACK (pair string (pair string (pair nat (pair nat (pair timestamp bytes))))) ;
                              { IF_NONE { PUSH int 77 ; FAILWITH } {} } ;
                              GET 10 ;
                              MEM ;
                              IF { DUP ;
                                   CAR ;
                                   UNPACK (pair string (pair string (pair nat (pair nat (pair timestamp bytes))))) ;
                                   { IF_NONE { PUSH int 77 ; FAILWITH } {} } ;
                                   GET 9 ;
                                   DUP 7 ;
                                   GET 3 ;
                                   CAR ;
                                   ADD ;
                                   NOW ;
                                   COMPARE ;
                                   LT ;
                                   IF { SWAP ;
                                        PUSH bool True ;
                                        DIG 2 ;
                                        CAR ;
                                        UNPACK (pair string (pair string (pair nat (pair nat (pair timestamp bytes))))) ;
                                        { IF_NONE { PUSH int 77 ; FAILWITH } {} } ;
                                        GET 5 ;
                                        UPDATE }
                                      { DROP } }
                                 { DROP } }
                            { DROP } } ;
                  DUP ;
                  NIL nat ;
                  SWAP ;
                  ITER { CONS } ;
                  NIL nat ;
                  SWAP ;
                  ITER { CONS } ;
                  PUSH nat 0 ;
                  PUSH nat 0 ;
                  DUP 3 ;
                  ITER { PUSH nat 2 ;
                         DUP 5 ;
                         SIZE ;
                         EDIV ;
                         { IF_NONE { PUSH int 87 ; FAILWITH } { CAR } } ;
                         DUP 3 ;
                         COMPARE ;
                         LE ;
                         IF { DIG 2 ; DROP ; SWAP ; PUSH nat 1 ; ADD } { DROP } } ;
                  DROP ;
                  DUP ;
                  PUSH nat 0 ;
                  COMPARE ;
                  LT ;
                  IF { SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       DIG 2 ;
                       DROP ;
                       DUP ;
                       DUP 4 ;
                       CAR ;
                       GET 3 ;
                       SUB ;
                       ABS ;
                       PUSH nat 4 ;
                       DUP 5 ;
                       CAR ;
                       GET 3 ;
                       LSR ;
                       COMPARE ;
                       GT ;
                       IF { DIG 2 ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DIG 3 ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP }
                          { PUSH int 0 ;
                            SWAP ;
                            DUP 4 ;
                            CAR ;
                            GET 3 ;
                            SUB ;
                            COMPARE ;
                            GT ;
                            IF { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 CDR ;
                                 PUSH nat 4 ;
                                 DUP 6 ;
                                 CAR ;
                                 GET 3 ;
                                 LSR ;
                                 DIG 5 ;
                                 CAR ;
                                 GET 3 ;
                                 SUB ;
                                 ISNAT ;
                                 { IF_NONE { PUSH int 96 ; FAILWITH } {} } ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP }
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 PUSH nat 4 ;
                                 DIG 6 ;
                                 CAR ;
                                 GET 3 ;
                                 LSR ;
                                 ADD ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP } } ;
                       SWAP ;
                       UNPAIR ;
                       CDR ;
                       DIG 2 ;
                       PAIR ;
                       PAIR }
                     { DROP 6 } }
                { DROP 2 } ;
             NIL operation } ;
         PAIR } }
