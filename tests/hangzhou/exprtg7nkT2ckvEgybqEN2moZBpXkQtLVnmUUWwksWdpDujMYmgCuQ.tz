{ storage
    (pair (pair (pair (address %administrator)
                      (pair (nat %all_tokens) (bool %contracts_may_hold_tokens_global)))
                (pair (bool %genesis_done)
                      (pair (big_map %ledger address nat) (big_map %metadata string bytes))))
          (pair (pair (big_map %operators
                         (pair (address %owner) (pair (address %operator) (nat %token_id)))
                         unit)
                      (pair (bool %paused)
                            (big_map %token_extra_data
                               nat
                               (pair (bool %contracts_may_hold_token) (address %minter)))))
                (pair (set %token_holder_contracts_whitelist address)
                      (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                            (big_map %total_supply nat nat))))) ;
  parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (or (pair %mint
                       (pair (address %address) (nat %amount))
                       (pair (map %metadata string bytes) (nat %token_id)))
                    (pair %mutez_transfer (mutez %amount) (address %destination))))
            (or (address %set_administrator)
                (or (pair %set_metadata (string %k) (bytes %v)) (bool %set_pause))))
        (or (or (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                (or (list %update_operators
                       (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                           (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))
                    (address %xadm_add_thc)))
            (or (unit %xadm_genesis) (or (address %xadm_rm_thc) (bool %xadm_set_cmh))))) ;
  code { CAST (pair (or (or (or (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))))
                                (or (pair (pair address nat) (pair (map string bytes) nat)) (pair mutez address)))
                            (or address (or (pair string bytes) bool)))
                        (or (or (list (pair address (list (pair address (pair nat nat)))))
                                (or (list (or (pair address (pair address nat)) (pair address (pair address nat)))) address))
                            (or unit (or address bool))))
                    (pair (pair (pair address (pair nat bool))
                                (pair bool (pair (big_map address nat) (big_map string bytes))))
                          (pair (pair (big_map (pair address (pair address nat)) unit)
                                      (pair bool (big_map nat (pair bool address))))
                                (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))) ;
         LAMBDA
           (pair (pair (pair address nat) (pair (map string bytes) nat))
                 (pair (pair (pair address (pair nat bool))
                             (pair bool (pair (big_map address nat) (big_map string bytes))))
                       (pair (pair (big_map (pair address (pair address nat)) unit)
                                   (pair bool (big_map nat (pair bool address))))
                             (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address (pair nat bool))
                                   (pair bool (pair (big_map address nat) (big_map string bytes))))
                             (pair (pair (big_map (pair address (pair address nat)) unit)
                                         (pair bool (big_map nat (pair bool address))))
                                   (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { PUSH bool True } { SELF_ADDRESS ; SENDER ; COMPARE ; EQ } ;
             IF {} { PUSH int 127 ; FAILWITH } ;
             PUSH nat 0 ;
             DUP 4 ;
             CAR ;
             GET 4 ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "single-asset: token-id <> 0" ; FAILWITH } ;
             DUP 3 ;
             CAR ;
             GET 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             GET 3 ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
             DUP ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             CDR ;
             DIG 4 ;
             CAR ;
             CAR ;
             GET 3 ;
             DUP ;
             PUSH nat 1 ;
             DUP 9 ;
             CAR ;
             GET 4 ;
             ADD ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             LE ;
             IF { DROP } { SWAP ; DROP } ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             GET 5 ;
             DUP 4 ;
             CAR ;
             CAR ;
             CAR ;
             MEM ;
             IF { UNPAIR ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  DUP ;
                  DUP 8 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  DUP ;
                  DUG 2 ;
                  GET ;
                  IF_NONE { PUSH int 140 ; FAILWITH } {} ;
                  DUP 9 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  ADD ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR }
                { UNPAIR ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  DUP 7 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  SOME ;
                  DUP 8 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  UPDATE ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR } ;
             DUP ;
             GET 7 ;
             DUP 4 ;
             CAR ;
             GET 4 ;
             MEM ;
             IF { DIG 2 ; DROP }
                { DUP ;
                  GET 7 ;
                  DIG 3 ;
                  DUP ;
                  CAR ;
                  GET 3 ;
                  SWAP ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  GET 4 ;
                  PAIR ;
                  SOME ;
                  DUP 5 ;
                  CAR ;
                  GET 4 ;
                  UPDATE ;
                  UPDATE 7 ;
                  DUP ;
                  GET 8 ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  SOME ;
                  DUP 5 ;
                  CAR ;
                  GET 4 ;
                  UPDATE ;
                  UPDATE 8 ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  SWAP ;
                  DUP 7 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PUSH bool False ;
                  PAIR ;
                  SOME ;
                  DIG 7 ;
                  CAR ;
                  GET 4 ;
                  UPDATE ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  PAIR } ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (list (pair address (list (pair address (pair nat nat)))))
                 (pair (pair (pair address (pair nat bool))
                             (pair bool (pair (big_map address nat) (big_map string bytes))))
                       (pair (pair (big_map (pair address (pair address nat)) unit)
                                   (pair bool (big_map nat (pair bool address))))
                             (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address (pair nat bool))
                                   (pair bool (pair (big_map address nat) (big_map string bytes))))
                             (pair (pair (big_map (pair address (pair address nat)) unit)
                                         (pair bool (big_map nat (pair bool address))))
                                   (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             GET 3 ;
             GET 3 ;
             IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
             DIG 2 ;
             CAR ;
             ITER { DUP ;
                    CDR ;
                    ITER { DUP ;
                           GET 3 ;
                           PUSH nat 0 ;
                           COMPARE ;
                           EQ ;
                           IF {} { PUSH string "single-asset: token-id <> 0" ; FAILWITH } ;
                           DUP ;
                           CAR ;
                           PUSH address "tz3jfebmewtfXYD1Xef34TwrfMg2rrrw6oum" ;
                           COMPARE ;
                           LT ;
                           IF { DUP 3 ; CAR ; CAR ; GET 4 } { PUSH bool True } ;
                           IF { PUSH bool True }
                              { DUP 3 ;
                                GET 3 ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                GET ;
                                IF_NONE { PUSH int 192 ; FAILWITH } {} ;
                                CAR } ;
                           IF { PUSH bool True } { DUP 3 ; GET 5 ; SWAP ; DUP ; DUG 2 ; CAR ; MEM } ;
                           IF { PUSH bool True }
                              { DUP 3 ; CAR ; CAR ; CAR ; SWAP ; DUP ; DUG 2 ; CAR ; COMPARE ; EQ } ;
                           IF {} { PUSH int 197 ; FAILWITH } ;
                           DUP 3 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF { PUSH bool True } { SENDER ; DUP 3 ; CAR ; COMPARE ; EQ } ;
                           IF { PUSH bool True }
                              { DUP 3 ;
                                GET 3 ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                SENDER ;
                                DUP 5 ;
                                CAR ;
                                PAIR 3 ;
                                MEM } ;
                           IF { PUSH bool True } { SELF_ADDRESS ; SENDER ; COMPARE ; EQ } ;
                           IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                           DUP 3 ;
                           GET 7 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET 3 ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           DUP ;
                           GET 4 ;
                           PUSH nat 0 ;
                           COMPARE ;
                           LT ;
                           IF { DUP ;
                                GET 4 ;
                                DUP 4 ;
                                CAR ;
                                GET 5 ;
                                DUP 4 ;
                                CAR ;
                                GET ;
                                IF_NONE { PUSH int 215 ; FAILWITH } {} ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                DUP 3 ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DUP ;
                                DUP 8 ;
                                CAR ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 219 ; FAILWITH } { DROP } ;
                                DUP 7 ;
                                GET 4 ;
                                DIG 9 ;
                                CAR ;
                                GET 5 ;
                                DUP 10 ;
                                CAR ;
                                GET ;
                                IF_NONE { PUSH int 219 ; FAILWITH } {} ;
                                SUB ;
                                ISNAT ;
                                IF_NONE { PUSH int 219 ; FAILWITH } {} ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                MEM ;
                                IF { DIG 2 ;
                                     UNPAIR ;
                                     UNPAIR ;
                                     SWAP ;
                                     UNPAIR ;
                                     SWAP ;
                                     UNPAIR ;
                                     DUP ;
                                     DUP 7 ;
                                     CAR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 222 ; FAILWITH } {} ;
                                     DIG 7 ;
                                     GET 4 ;
                                     ADD ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP }
                                   { DIG 2 ;
                                     UNPAIR ;
                                     UNPAIR ;
                                     SWAP ;
                                     UNPAIR ;
                                     SWAP ;
                                     UNPAIR ;
                                     DUP 6 ;
                                     GET 4 ;
                                     SOME ;
                                     DIG 6 ;
                                     CAR ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP } }
                              { DROP } } ;
                    DROP } ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (pair (pair address nat) (pair (map string bytes) nat))
                 (pair (pair (pair address (pair nat bool))
                             (pair bool (pair (big_map address nat) (big_map string bytes))))
                       (pair (pair (big_map (pair address (pair address nat)) unit)
                                   (pair bool (big_map nat (pair bool address))))
                             (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address (pair nat bool))
                                   (pair bool (pair (big_map address nat) (big_map string bytes))))
                             (pair (pair (big_map (pair address (pair address nat)) unit)
                                         (pair bool (big_map nat (pair bool address))))
                                   (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             SELF_ADDRESS ;
             CONTRACT %mint (pair (pair address nat) (pair (map string bytes) nat)) ;
             IF_NONE { PUSH int 165 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 4 ;
             CAR ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (list (pair address (list (pair address (pair nat nat)))))
                 (pair (pair (pair address (pair nat bool))
                             (pair bool (pair (big_map address nat) (big_map string bytes))))
                       (pair (pair (big_map (pair address (pair address nat)) unit)
                                   (pair bool (big_map nat (pair bool address))))
                             (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address (pair nat bool))
                                   (pair bool (pair (big_map address nat) (big_map string bytes))))
                             (pair (pair (big_map (pair address (pair address nat)) unit)
                                         (pair bool (big_map nat (pair bool address))))
                                   (pair (set address) (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             SELF_ADDRESS ;
             CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
             IF_NONE { PUSH int 232 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 4 ;
             CAR ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     GET 3 ;
                     IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     MAP { DUP 3 ;
                           GET 7 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           DUP 3 ;
                           CAR ;
                           GET 5 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           MEM ;
                           IF { DUP 3 ;
                                CAR ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                GET ;
                                IF_NONE { PUSH int 421 ; FAILWITH } {} ;
                                SWAP ;
                                PAIR }
                              { PUSH nat 0 ; SWAP ; PAIR } } ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         SWAP ;
                         CAR }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 325 ; FAILWITH } ;
                         DUP ;
                         CDR ;
                         CONTRACT unit ;
                         IF_NONE { PUSH int 328 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         DIG 2 ;
                         CAR ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS } } }
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         DUP 6 ;
                         CDR ;
                         SOME ;
                         DIG 6 ;
                         CAR ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } } ;
                 NIL operation } }
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     SWAP ;
                     CAR }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DUP ;
                         ITER { IF_LEFT
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                    IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                                    DIG 2 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    PUSH (option unit) (Some Unit) ;
                                    DIG 5 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    PAIR 3 ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP }
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                    IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                                    DIG 2 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    NONE unit ;
                                    DIG 5 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    PAIR 3 ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP } } ;
                         DROP }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 244 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 5 ;
                         PUSH bool True ;
                         DIG 3 ;
                         UPDATE ;
                         UPDATE 5 } ;
                     NIL operation } }
               { IF_LEFT
                   { PUSH bool False ;
                     DUP 3 ;
                     CAR ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 280 ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 281 ; FAILWITH } ;
                     DUP 4 ;
                     DIG 2 ;
                     PUSH (pair (map string bytes) nat)
                          (Pair { Elt ""
                                      0x697066733a2f2f516d57525245446b61443144576f614334474e323544796d7079524a627778357a364552697875315a374d44334d }
                                0) ;
                     PUSH mutez 1 ;
                     PUSH mutez 1000000000 ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     SELF_ADDRESS ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     DUP 5 ;
                     DIG 4 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1afgjpNDGVCTZX2HUCgpjFE42v3zF4ny19" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1P5Za1TUMsDejgzMM5iMNfHAxDUpPCHiwZ" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1hpdyGDit2se5ztF2Y9piXQfc3rFhYot9t" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1b1sH2FmuVazszFdkUn8GvfvZpNxSa7C8J" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1cjTb6ijvnPrJBfaTEFphxDovW9xQbkmDK" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1gi68wGST7UtzkNpnnc354mpqCcVNQVcSw" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1c8bog1Hw3c2AUYUcsJrKs1hw9CTfFTeCe" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1c2iwyckUCcicx2qxqtwLEartYFEHg1pvB" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1cALmpTf7EeeSBXHAX2rcnR4WAP8tSWkt6" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1Kx4ydaiJHThd2nTgXR25JPTZtKyLG9KC1" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1ZdMfzmWLb8mu22jE7rZ8Y3t9iKezM68cq" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1eht4WAjkqU7kaupJd8qCDmec9HuKfGf68" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1U2wsJgebEvS6CZYXn1mjErRU5mSZ2ZS1Z" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1Z1mMAbNr8SquKcMmBP6cEGA7cifvjvyRB" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1LKpeN8ZSSFNyTWiBNaE4u4sjaq7J1Vz2z" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1g7Aaac9ssD7cDUTngyXyx8QiVUsAVZCjQ" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1YMqQQme7jcERyk2586QDT9fqWGCz9L2fQ" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz28bm6XBaWD5oz171jQE1HjWmMjRz9jDhv7" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1fb6jz7rh4H7AojLShvhiXKaSNDyvkH7sM" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1auPyXVaMy3GntdCQwH2VGNuFj6bAocj2v" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1YJvMiZyXnzvV9pxtAiuCFvaG7XoBZhbUQ" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1YRG68NdqtAcsFEwTUw6FsSsiBb5kagEDo" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1hb9PiWxQEf6J9xevPsUM6dkuCLnhDMvsp" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 30000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1WidyAU8wuyG25Pd7b93bcx9hMu7W9Pea8" ;
                     PAIR 3 ;
                     CONS ;
                     PUSH nat 280000000 ;
                     PUSH nat 0 ;
                     PUSH address "tz1UBZUkXpKGhYsP5KtzDNqLLchwF4uHrGjw" ;
                     PAIR 3 ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 4 ;
                     DUP ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     ITER { CONS } ;
                     ITER { DIG 2 ; SWAP ; CONS ; SWAP } ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 250 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 5 ;
                         PUSH bool False ;
                         DIG 3 ;
                         UPDATE ;
                         UPDATE 5 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 238 ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     NIL operation } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
