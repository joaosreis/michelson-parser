{ storage
    (pair (pair (bool %locked) (address %manager))
          (pair (big_map %metadata string bytes)
                (pair (map %payout address nat) (map %permissions address bool)))) ;
  parameter
    (or (or (unit %default)
            (or (address %invite)
                (pair %mint
                   (pair (address %address) (nat %amount))
                   (pair (address %kt) (pair (bytes %metadata) (nat %royalties))))))
        (or (map %payout_config address nat)
            (or (pair %registry (address %kt) (pair (bytes %metadata) (bytes %subjkt)))
                (pair %update_operators
                   (pair (address %kt) (address %operator))
                   (pair (address %owner) (nat %token_id)))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { NIL operation ;
                 DUP 3 ;
                 GET 5 ;
                 ITER { CAR ;
                        DUP ;
                        DUG 2 ;
                        CONTRACT unit ;
                        IF_NONE { PUSH int 141 ; FAILWITH } {} ;
                        PUSH mutez 1 ;
                        DUP 6 ;
                        GET 5 ;
                        DIG 4 ;
                        GET ;
                        IF_NONE { PUSH int 141 ; FAILWITH } {} ;
                        PUSH nat 10000 ;
                        PUSH mutez 1 ;
                        PUSH nat 1 ;
                        MUL ;
                        BALANCE ;
                        EDIV ;
                        IF_NONE { PUSH int 141 ; FAILWITH } {} ;
                        CAR ;
                        EDIV ;
                        IF_NONE { PUSH int 141 ; FAILWITH } { CAR } ;
                        MUL ;
                        MUL ;
                        UNIT ;
                        TRANSFER_TOKENS ;
                        CONS } ;
                 SWAP ;
                 DROP }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     GET 6 ;
                     PUSH (option bool) (Some True) ;
                     DIG 3 ;
                     UPDATE ;
                     UPDATE 6 ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 176 ; FAILWITH } {} ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.permissions[sp.sender]" ; FAILWITH } ;
                     DUP ;
                     GET 3 ;
                     CONTRACT %mint_OBJKT (pair (pair address nat) (pair bytes nat)) ;
                     IF_NONE { PUSH int 177 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 5 ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; NOT } { PUSH bool False } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: (sp.sender == self.data.manager) & (~ self.data.locked)" ;
                      FAILWITH } ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 ITER { CDR ; ADD } ;
                 PUSH nat 10000 ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "WrongCondition: total.value == 10000" ; FAILWITH } ;
                 UPDATE 5 ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     CONTRACT %registry (pair bytes bytes) ;
                     IF_NONE { PUSH int 152 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     GET 4 ;
                     SWAP ;
                     GET 3 ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CONTRACT %update_operators (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 146 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     GET 3 ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
