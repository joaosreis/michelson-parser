{ parameter
    (or (or (or (address %changeAdmin) (unit %claim))
            (or (nat %claimAmount) (pair %stake nat (option address))))
        (or (nat %unstake)
            (pair %updateConfig
               (pair (pair (nat %mint_min_amount) (nat %mint_rate_permil))
                     (pair (nat %referer_upline_permil) (nat %reward_amount_per_sec)))
               (nat %rps_precision)))) ;
  storage
    (pair (pair (pair (pair (big_map %accounts
                               address
                               (pair (pair (pair (nat %last_reward_per_stake) (nat %reward_amount))
                                           (pair (nat %stake_amount) (nat %this_upline_permil)))
                                     (pair (option %upline address) (nat %virt_stake_amount))))
                            (address %admin))
                      (pair (pair %config
                               (pair (pair (nat %mint_min_amount) (nat %mint_rate_permil))
                                     (pair (nat %referer_upline_permil) (nat %reward_amount_per_sec)))
                               (nat %rps_precision))
                            (timestamp %last_update_time)))
                (pair (pair (nat %reward_per_stake) (address %reward_token))
                      (pair (nat %reward_token_id) (address %token))))
          (pair (pair (nat %token_id) (nat %total_stack)) (nat %total_virt_stack))) ;
  code { LAMBDA
           (pair (pair (pair nat address) (pair address address)) nat)
           (list operation)
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "FA2_TOKEN_NOT_FOUND" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             DUP 5 ;
             CAR ;
             CAR ;
             CDR ;
             NIL (pair address (pair nat nat)) ;
             DUP 7 ;
             CAR ;
             CDR ;
             CAR ;
             DUP 8 ;
             CDR ;
             DIG 8 ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             CONS ;
             SWAP ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS ;
             CONS } ;
         LAMBDA
           (pair address
                 (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                         address)
                                   (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                             (pair (pair nat address) (pair nat address)))
                       (pair (pair nat nat) nat)))
           (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat))
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE
               { PUSH nat 0 ;
                 NONE address ;
                 PAIR ;
                 PUSH nat 0 ;
                 PUSH nat 0 ;
                 PAIR ;
                 PUSH nat 0 ;
                 PUSH nat 0 ;
                 PAIR ;
                 PAIR ;
                 PAIR }
               {} } ;
         LAMBDA
           (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                   address)
                             (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                       (pair (pair nat address) (pair nat address)))
                 (pair (pair nat nat) nat))
           (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                   address)
                             (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                       (pair (pair nat address) (pair nat address)))
                 (pair (pair nat nat) nat))
           { DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CDR ;
             ADD ;
             NOW ;
             DUP 3 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             COMPARE ;
             LT ;
             IF { PUSH nat 0 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  GT ;
                  IF { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       DUP 4 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       DIG 3 ;
                       DUP 5 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       DUP 6 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       DUP 7 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       NOW ;
                       SUB ;
                       ABS ;
                       MUL ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                       CAR ;
                       DUP 5 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       ADD ;
                       PAIR ;
                       PAIR ;
                       DIG 2 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR }
                     { DROP } ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  NOW ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR }
                { DROP } } ;
         LAMBDA
           (pair (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat))
                 (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                         address)
                                   (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                             (pair (pair nat address) (pair nat address)))
                       (pair (pair nat nat) nat)))
           (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat))
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             DIG 3 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             SUB ;
             ABS ;
             DUP 3 ;
             CDR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             CAR ;
             ADD ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             ADD ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR } ;
         DUP 4 ;
         DUP 4 ;
         DUP 4 ;
         DUP 4 ;
         PAIR 4 ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat))
                                (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                                        address)
                                                  (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                                            (pair (pair nat address) (pair nat address)))
                                      (pair (pair nat nat) nat)))
                          (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                       (pair (lambda
                                (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                                        address)
                                                  (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                                            (pair (pair nat address) (pair nat address)))
                                      (pair (pair nat nat) nat))
                                (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                                        address)
                                                  (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                                            (pair (pair nat address) (pair nat address)))
                                      (pair (pair nat nat) nat)))
                             (pair (lambda
                                      (pair address
                                            (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                                                    address)
                                                              (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                                                        (pair (pair nat address) (pair nat address)))
                                                  (pair (pair nat nat) nat)))
                                      (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                   (lambda (pair (pair (pair nat address) (pair address address)) nat) (list operation)))))
                 (pair (pair address nat)
                       (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                               address)
                                         (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                                   (pair (pair nat address) (pair nat address)))
                             (pair (pair nat nat) nat))))
           (pair (list operation)
                 (pair (pair (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat nat)) (pair (option address) nat)))
                                         address)
                                   (pair (pair (pair (pair nat nat) (pair nat nat)) nat) timestamp))
                             (pair (pair nat address) (pair nat address)))
                       (pair (pair nat nat) nat)))
           { UNPAIR ;
             UNPAIR 4 ;
             DIG 4 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             DIG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { PUSH string "SF_NO_REWARDS" ; FAILWITH } {} ;
             PUSH nat 0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             IF { DIG 3 ; DROP }
                { DUP 4 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  GT ;
                  IF { DROP ; DIG 2 } { DIG 3 ; DROP } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DUP 3 ;
             DUP 5 ;
             CAR ;
             CAR ;
             CDR ;
             SUB ;
             ABS ;
             DIG 4 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP 3 ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             DUP 5 ;
             CAR ;
             CAR ;
             CDR ;
             DUP 6 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             DIG 6 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             DIG 5 ;
             SOME ;
             SENDER ;
             UPDATE ;
             PAIR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             SENDER ;
             PAIR ;
             SELF_ADDRESS ;
             DUP 5 ;
             PAIR ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             PUSH nat 1000 ;
             DIG 2 ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             ADD ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GT ;
             IF { NIL (pair nat (pair address nat)) ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  SELF_ADDRESS ;
                  DIG 3 ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  CONS ;
                  SWAP ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CDR ;
                  CONTRACT %mint (list (pair (nat %token_id) (pair (address %user) (nat %amount)))) ;
                  IF_NONE { PUSH string "FA2_TOKEN_NOT_FOUND" ; FAILWITH } {} ;
                  PUSH mutez 0 ;
                  DIG 2 ;
                  TRANSFER_TOKENS ;
                  SOME }
                { DROP 2 ; NONE operation } ;
             DIG 2 ;
             SWAP ;
             IF_NONE { SWAP } { DIG 2 ; SWAP ; CONS } ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 4 ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP ; PUSH string "SF_DENIED" ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR }
                   { DROP ; PUSH nat 0 ; SENDER ; PAIR ; PAIR ; EXEC } }
               { IF_LEFT
                   { DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 4 ; SENDER ; PAIR ; PAIR ; EXEC }
                   { DIG 2 ;
                     DROP ;
                     UNPAIR ;
                     DIG 2 ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     SENDER ;
                     PAIR ;
                     DUP 6 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 5 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CAR ;
                     IF_NONE
                       { DUP ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR }
                       { DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     IF_NONE
                       { DIG 2 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 3 ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         PAIR }
                       { DIG 5 ;
                         DROP ;
                         SENDER ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "SF_SELFREFERENCE_IS_FORBIDDEN" ; FAILWITH } {} ;
                         DUP 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 1000 ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 7 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 5 ;
                         DIG 2 ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 7 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP 5 ;
                         CDR ;
                         DUP 6 ;
                         CAR ;
                         CDR ;
                         DUP 7 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 8 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 8 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         DIG 7 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     CAR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     ADD ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SELF_ADDRESS ;
                     PAIR ;
                     SENDER ;
                     DIG 4 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     PAIR } } }
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { SWAP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 SENDER ;
                 PAIR ;
                 DUP 5 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ; CAR ; CDR ; CAR } { DUP 3 } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP 5 ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "SF_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 IF_NONE
                   { DIG 3 ; DIG 4 ; DIG 5 ; DROP 3 ; DIG 2 }
                   { DUP 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 1000 ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 7 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     SUB ;
                     DUP 7 ;
                     PUSH int 0 ;
                     DUP 3 ;
                     COMPARE ;
                     LT ;
                     IF { SWAP ; DROP ; PUSH int 0 } { SWAP } ;
                     ABS ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DUP 6 ;
                     CDR ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 9 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 9 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     DIG 7 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SUB ;
                     ABS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR } ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 4 ;
                 DUP 6 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SUB ;
                 ABS ;
                 PAIR ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 5 ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 SUB ;
                 ABS ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 PAIR ;
                 SELF_ADDRESS ;
                 DIG 4 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 PAIR }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DROP 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }
