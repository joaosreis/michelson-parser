{ parameter
    (or (or (or (or (address %changeAdmin) (unit %claim))
                (or (nat %claimAmount) (pair %stake nat (option address))))
            (or (or (nat %unstake)
                    (pair %updateConfig
                       (pair (pair (bool %automint) (nat %mint_min_amount))
                             (pair (nat %mint_rate_permil) (nat %referer_upline_permil)))
                       (pair (nat %reward_amount_per_sec) (nat %rps_precision))))
                (or (list %updateDepositFeeCfg (pair (nat %fee) (nat %from_secs)))
                    (list %updateFeeCfg (pair (nat %fee) (nat %from_secs))))))
        (or (or (pair %updateRewardBalance int bool) (address %withdrawDepositFee))
            (address %withdrawFee))) ;
  storage
    (pair (pair (pair (pair (pair (big_map %accounts
                                     address
                                     (pair (pair (pair (timestamp %first_stake) (nat %last_reward_per_stake))
                                                 (pair (nat %reward_amount) (nat %stake_amount)))
                                           (pair (pair (nat %this_upline_permil) (option %upline address))
                                                 (nat %virt_stake_amount))))
                                  (address %admin))
                            (pair (pair %config
                                     (pair (pair (bool %automint) (nat %mint_min_amount))
                                           (pair (nat %mint_rate_permil) (nat %referer_upline_permil)))
                                     (pair (nat %reward_amount_per_sec) (nat %rps_precision)))
                                  (list %deposit_fees_cfg (pair (nat %fee) (nat %from_secs)))))
                      (pair (pair (list %fees_cfg (pair (nat %fee) (nat %from_secs)))
                                  (timestamp %last_update_time))
                            (pair (nat %reward_balance) (nat %reward_per_stake))))
                (pair (pair (pair (address %reward_token) (nat %reward_token_id))
                            (pair (address %token) (nat %token_id)))
                      (pair (pair (nat %total_deposit_fees) (nat %total_fees))
                            (pair (nat %total_rewards_left) (nat %total_stack)))))
          (nat %total_virt_stack)) ;
  code { LAMBDA
           (pair (pair (pair nat address) (pair address address)) nat)
           operation
           { DUP ;
             CAR ;
             CDR ;
             CDR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "FA2_TOKEN_NOT_FOUND" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             NIL (pair address (pair nat nat)) ;
             DUP 6 ;
             CAR ;
             CDR ;
             CAR ;
             DUP 7 ;
             CDR ;
             DIG 7 ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             CONS ;
             SWAP ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair address
                 (pair (pair (pair (pair (pair (big_map
                                                  address
                                                  (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                               address)
                                         (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                   (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                             (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                       nat))
           (pair (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat))
                 bool)
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE
               { PUSH bool True ;
                 PUSH nat 0 ;
                 NONE address ;
                 PUSH nat 0 ;
                 PAIR ;
                 PAIR ;
                 PUSH nat 0 ;
                 PUSH nat 0 ;
                 PAIR ;
                 PUSH nat 0 ;
                 NOW ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR }
               { PUSH bool False ; SWAP ; PAIR } } ;
         LAMBDA
           (pair (pair (pair (pair (pair (big_map
                                            address
                                            (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                         address)
                                   (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                             (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                       (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                 nat)
           (pair (pair (pair (pair (pair (big_map
                                            address
                                            (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                         address)
                                   (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                             (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                       (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                 nat)
           { DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             ADD ;
             NOW ;
             DUP 3 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             COMPARE ;
             LT ;
             IF { PUSH nat 0 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  GT ;
                  IF { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       DIG 2 ;
                       DUP 4 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       DUP 5 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       NOW ;
                       SUB ;
                       ABS ;
                       DUP 6 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       MUL ;
                       DUP 6 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       ADD ;
                       PUSH nat 0 ;
                       DUP 7 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       COMPARE ;
                       EQ ;
                       DUP 7 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       NOT ;
                       DUP 8 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       DIG 3 ;
                       COMPARE ;
                       GE ;
                       AND ;
                       AND ;
                       IF { PUSH nat 0 } { DUP 5 ; CAR ; CAR ; CAR ; CDR ; CAR ; CDR ; CAR } ;
                       DUP 6 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       NOW ;
                       SUB ;
                       ABS ;
                       MUL ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                       CAR ;
                       DUP 4 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       ADD ;
                       DUP 4 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       PAIR ;
                       DUP 4 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       PAIR ;
                       DIG 3 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       DUP 3 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       NOW ;
                       SUB ;
                       ABS ;
                       DUP 4 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       MUL ;
                       DUP 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       ADD ;
                       PAIR ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       PAIR ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       PAIR ;
                       DIG 2 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR }
                     { DROP } ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  DUP 3 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  NOW ;
                  DUP 5 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR }
                { DROP } } ;
         LAMBDA
           (pair (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat))
                 (pair (pair (pair (pair (pair (big_map
                                                  address
                                                  (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                               address)
                                         (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                   (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                             (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                       nat))
           (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat))
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             SUB ;
             ABS ;
             DUP 3 ;
             CDR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             CDR ;
             ADD ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP 4 ;
             CAR ;
             CDR ;
             CAR ;
             ADD ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR } ;
         LAMBDA
           (pair (list (pair nat nat)) nat)
           nat
           { UNPAIR ;
             PUSH nat 0 ;
             PUSH nat 0 ;
             PUSH nat 0 ;
             PUSH bool False ;
             PAIR ;
             PAIR ;
             DUP 3 ;
             IF_CONS { SWAP ; DROP ; SOME } { NONE (pair nat nat) } ;
             IF_NONE
               { UNPAIR ; CDR ; PUSH bool True ; PAIR ; PAIR }
               { DUP ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR } ;
             DUP ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             CDR ;
             DUP 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP 3 ;
             DUP 5 ;
             PAIR ;
             PAIR ;
             DUP 4 ;
             NOT ;
             IF { DIG 4 ;
                  DIG 2 ;
                  PAIR ;
                  DIG 2 ;
                  DIG 3 ;
                  PAIR ;
                  PAIR ;
                  DIG 2 ;
                  ITER { SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DUP 6 ;
                         COMPARE ;
                         LT ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 7 ;
                         COMPARE ;
                         GE ;
                         DUP 4 ;
                         NOT ;
                         AND ;
                         AND ;
                         IF { SWAP ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              PUSH bool True ;
                              PAIR }
                            { DUP 3 ; CAR ; CDR ; CDR ; DIG 2 ; PAIR } ;
                         DIG 2 ;
                         CAR ;
                         UNPAIR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR } ;
                  DIG 2 ;
                  DROP ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  CDR ;
                  DUP 3 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  CDR ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR }
                { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 6 } ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             COMPARE ;
             GE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             NOT ;
             AND ;
             IF { CAR ; CDR } { CDR ; CDR } } ;
         DUP 5 ;
         DUP 5 ;
         DUP 5 ;
         DUP 5 ;
         DUP 5 ;
         PAIR 5 ;
         LAMBDA
           (pair (pair (lambda (pair (list (pair nat nat)) nat) nat)
                       (pair (lambda
                                (pair (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat))
                                      (pair (pair (pair (pair (pair (big_map
                                                                       address
                                                                       (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                                                    address)
                                                              (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                                        (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                                                  (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                                            nat))
                                (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                             (pair (lambda
                                      (pair (pair (pair (pair (pair (big_map
                                                                       address
                                                                       (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                                                    address)
                                                              (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                                        (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                                                  (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                                            nat)
                                      (pair (pair (pair (pair (pair (big_map
                                                                       address
                                                                       (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                                                    address)
                                                              (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                                        (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                                                  (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                                            nat))
                                   (pair (lambda
                                            (pair address
                                                  (pair (pair (pair (pair (pair (big_map
                                                                                   address
                                                                                   (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                                                                address)
                                                                          (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                                                    (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                                                              (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                                                        nat))
                                            (pair (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat))
                                                  bool))
                                         (lambda (pair (pair (pair nat address) (pair address address)) nat) operation)))))
                 (pair (pair address nat)
                       (pair (pair (pair (pair (pair (big_map
                                                        address
                                                        (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                                     address)
                                               (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                         (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                                   (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                             nat)))
           (pair (list operation)
                 (pair (pair (pair (pair (pair (big_map
                                                  address
                                                  (pair (pair (pair timestamp nat) (pair nat nat)) (pair (pair nat (option address)) nat)))
                                               address)
                                         (pair (pair (pair (pair bool nat) (pair nat nat)) (pair nat nat)) (list (pair nat nat))))
                                   (pair (pair (list (pair nat nat)) timestamp) (pair nat nat)))
                             (pair (pair (pair address nat) (pair address nat)) (pair (pair nat nat) (pair nat nat))))
                       nat))
           { UNPAIR ;
             UNPAIR 5 ;
             DIG 5 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DUP ;
             DIG 2 ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { PUSH string "SF_NO_REWARDS" ; FAILWITH } {} ;
             PUSH nat 0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             IF { DIG 3 ; DROP }
                { DUP 4 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  GT ;
                  IF { DROP ; DIG 2 } { DIG 3 ; DROP } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             DUP 3 ;
             DUP 5 ;
             CAR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP 3 ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             DUP 5 ;
             CAR ;
             CAR ;
             CDR ;
             DUP 6 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             DUP 7 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             DIG 7 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             DUP 7 ;
             SOME ;
             SENDER ;
             UPDATE ;
             PAIR ;
             PAIR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DUP 5 ;
             DUP 4 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             PAIR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DUP 3 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             PUSH int 0 ;
             DUP 7 ;
             DUP 6 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             COMPARE ;
             LT ;
             IF { PUSH nat 0 }
                { DUP 6 ; DUP 5 ; CAR ; CAR ; CDR ; CDR ; CAR ; SUB ; ABS } ;
             PAIR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             NOW ;
             SUB ;
             ABS ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             PUSH nat 100 ;
             SWAP ;
             DUP 4 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DUP 4 ;
             SUB ;
             DUP 3 ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 3 ;
             DUP 5 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             CDR ;
             ADD ;
             DUP 5 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP 4 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PUSH int 0 ;
             DUP 5 ;
             COMPARE ;
             LT ;
             IF { DIG 3 ; DROP ; PUSH int 0 } { DIG 3 } ;
             ABS ;
             PAIR ;
             SENDER ;
             SELF_ADDRESS ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             CDR ;
             DIG 2 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             DIG 4 ;
             PAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             CONS ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             PUSH nat 1000 ;
             DUP 3 ;
             DUP 5 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             ADD ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GT ;
             IF { DUP ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  ADD ;
                  DUP 3 ;
                  COMPARE ;
                  GT ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  AND ;
                  IF { DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       SWAP ;
                       SUB ;
                       ABS }
                     { SWAP ; DROP } ;
                  NIL (pair nat (pair address nat)) ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  SELF_ADDRESS ;
                  DUP 4 ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  CONS ;
                  DIG 2 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CONTRACT %mint (list (pair (nat %token_id) (pair (address %user) (nat %amount)))) ;
                  IF_NONE { PUSH string "FA2_TOKEN_NOT_FOUND" ; FAILWITH } {} ;
                  PUSH mutez 0 ;
                  DIG 2 ;
                  TRANSFER_TOKENS ;
                  SOME ;
                  SWAP ;
                  PAIR }
                { SWAP ; DIG 2 ; DROP 2 ; NONE operation ; SWAP ; PAIR } ;
             CDR ;
             DIG 2 ;
             SWAP ;
             IF_NONE { SWAP } { DIG 2 ; SWAP ; CONS } ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 6 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 4 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP ; PUSH string "SF_DENIED" ; FAILWITH }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DUP 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DIG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR } ;
                         NIL operation ;
                         PAIR }
                       { DROP ; PUSH nat 0 ; SENDER ; PAIR ; PAIR ; EXEC } }
                   { IF_LEFT
                       { DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 4 ; SENDER ; PAIR ; PAIR ; EXEC }
                       { DIG 2 ;
                         DROP ;
                         UNPAIR ;
                         DIG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         SENDER ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CAR ;
                         PUSH nat 0 ;
                         DUP 5 ;
                         COMPARE ;
                         GT ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         AND ;
                         IF { DUP ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              NOW ;
                              PAIR ;
                              PAIR ;
                              PAIR }
                            {} ;
                         DUP 3 ;
                         SWAP ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 5 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF_NONE
                           { SWAP ;
                             CDR ;
                             IF { DUP ;
                                  CDR ;
                                  CDR ;
                                  DIG 4 ;
                                  DUP 3 ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  CAR ;
                                  PAIR ;
                                  DUP ;
                                  CDR ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CAR ;
                                  CDR ;
                                  DUP 4 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  CAR ;
                                  PAIR }
                                { DIG 3 ; DROP } }
                           { DIG 2 ; DIG 5 ; DROP 3 } ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF_NONE
                           { DIG 3 ; DIG 4 ; DROP 2 ; SWAP }
                           { SENDER ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH string "SF_SELFREFERENCE_IS_FORBIDDEN" ; FAILWITH } {} ;
                             DUP 3 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             PUSH nat 1000 ;
                             DUP 4 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             DUP 7 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             DUP 5 ;
                             DIG 2 ;
                             CAR ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DUP 7 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             ADD ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DUP 5 ;
                             CDR ;
                             DUP 6 ;
                             CAR ;
                             CDR ;
                             DUP 7 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 8 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 9 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 9 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DIG 6 ;
                             DIG 8 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             ADD ;
                             SWAP ;
                             CAR ;
                             PAIR } ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 6 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 3 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 2 ;
                         PAIR ;
                         SELF_ADDRESS ;
                         SENDER ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         PAIR ;
                         DIG 3 ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         SENDER ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 0 ;
                         DUP 4 ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ; CAR ; CDR ; CDR } { DUP 3 } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "SF_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF_NONE
                           { DIG 3 ; DIG 5 ; DIG 6 ; DROP 3 ; DIG 2 }
                           { DUP 4 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 8 ;
                             SWAP ;
                             EXEC ;
                             DUP 5 ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DIG 7 ;
                             SWAP ;
                             EXEC ;
                             PUSH nat 1000 ;
                             DUP 5 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             DIG 7 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             DUP ;
                             DUP 3 ;
                             CDR ;
                             CDR ;
                             SUB ;
                             DUP 7 ;
                             CDR ;
                             DUP 8 ;
                             CAR ;
                             CDR ;
                             DUP 9 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 10 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 11 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 11 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PUSH int 0 ;
                             DUP 8 ;
                             COMPARE ;
                             LT ;
                             IF { DIG 6 ; DROP ; PUSH int 0 } { DIG 6 } ;
                             ABS ;
                             DUP 9 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 8 ;
                             CAR ;
                             PAIR ;
                             DIG 8 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SUB ;
                             ABS ;
                             SWAP ;
                             CAR ;
                             PAIR } ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOW ;
                         SUB ;
                         ABS ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 100 ;
                         SWAP ;
                         DUP 4 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         DIG 3 ;
                         SUB ;
                         PUSH int 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         IF { DROP ; PUSH int 0 } {} ;
                         ABS ;
                         DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DUP 6 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         CDR ;
                         DUP 3 ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 6 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 3 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 2 ;
                         PAIR ;
                         SENDER ;
                         SELF_ADDRESS ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         PAIR ;
                         DIG 3 ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
                         SWAP ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 5 ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                COMPARE ;
                                GT ;
                                IF { SWAP ; DIG 2 ; DROP 2 } { DROP ; SWAP ; CAR ; CAR ; PAIR } } ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         PUSH nat 2592000 ;
                         DIG 2 ;
                         CDR ;
                         COMPARE ;
                         GT ;
                         OR ;
                         IF { DROP ; PUSH string "SF_FEE_MUST_BE_ZERO_AFTER_30d" ; FAILWITH }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 5 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              PAIR ;
                              PAIR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR } ;
                         NIL operation ;
                         PAIR } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 6 ;
             DROP 4 ;
             IF_LEFT
               { IF_LEFT
                   { UNPAIR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
                     DIG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 3 ;
                     IF { DIG 3 ; DROP }
                        { PUSH int 0 ;
                          DUP 4 ;
                          COMPARE ;
                          GE ;
                          IF { SENDER ; SELF_ADDRESS ; SWAP ; PAIR }
                             { SELF_ADDRESS ; SENDER ; SWAP ; PAIR } ;
                          SWAP ;
                          DUP 3 ;
                          DUP 5 ;
                          ABS ;
                          PAIR ;
                          DIG 2 ;
                          UNPAIR ;
                          DIG 2 ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          PAIR ;
                          DIG 3 ;
                          DIG 3 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DIG 4 ;
                          SWAP ;
                          EXEC ;
                          CONS } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PUSH int 0 ;
                     DUP 7 ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     COMPARE ;
                     GT ;
                     IF { DIG 5 ; DUP 6 ; CAR ; CAR ; CDR ; CDR ; CAR ; ADD ; ABS }
                        { DIG 5 ; DROP ; PUSH nat 0 } ;
                     PAIR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
                     NIL operation ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     IF { DIG 2 ;
                          DUP ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DIG 2 ;
                          SELF_ADDRESS ;
                          DIG 2 ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DIG 4 ;
                          PAIR ;
                          DIG 3 ;
                          DIG 3 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          CONS ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          PUSH nat 0 ;
                          PAIR ;
                          PAIR ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR }
                        { SWAP ; DIG 3 ; DROP 2 ; PAIR } } }
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "SF_DENIED" ; FAILWITH } {} ;
                 NIL operation ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF { DIG 2 ;
                      DUP ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      DIG 2 ;
                      SELF_ADDRESS ;
                      DIG 2 ;
                      UNPAIR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      PAIR ;
                      DIG 3 ;
                      DIG 3 ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DIG 3 ;
                      SWAP ;
                      EXEC ;
                      CONS ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DUP 3 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      PUSH nat 0 ;
                      DUP 5 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DUP 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DIG 3 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { SWAP ; DIG 3 ; DROP 2 ; PAIR } } } } }
