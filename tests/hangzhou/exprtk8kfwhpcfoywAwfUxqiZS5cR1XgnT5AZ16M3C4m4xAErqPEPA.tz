{ parameter
    (or (or (or (pair %check_signature key (pair signature bytes))
                (pair %complex_optional_param
                   (or (int %int) (string %string))
                   (or (int %int) (string %string))))
            (or (pair %complex_param nat string) (unit %fail)))
        (or (or (unit %fail_with_int) (unit %fail_with_pair)) (int %simple_param))) ;
  storage
    (pair (int %simple)
          (pair (pair %complex nat string)
                (pair (pair %optional (or (int %int) (string %string)) (or (int %int) (string %string)))
                      (option %last_checked_sig
                         (pair (pair (bytes %msg) (address %sender)) (signature %sig_)))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SENDER ;
                     DUP 4 ;
                     HASH_KEY ;
                     IMPLICIT_ACCOUNT ;
                     ADDRESS ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 4 ; PUSH string "DIFFERENT_SIGNER_SENDER" ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          DIG 4 ;
                          CHECK_SIGNATURE ;
                          IF { DIG 2 ; SWAP ; SENDER ; DIG 3 ; PAIR ; PAIR ; SOME ; UPDATE 6 }
                             { DROP 3 ; PUSH string "DIFFERENT_SIGNER" ; FAILWITH } } }
                   { UPDATE 5 } }
               { IF_LEFT
                   { DUP ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     ADD ;
                     ABS ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     UPDATE 3 }
                   { DROP 2 ; PUSH string "Fail entrypoint" ; FAILWITH } } }
           { IF_LEFT
               { IF_LEFT
                   { DROP ; PUSH int 5 ; FAILWITH }
                   { DROP ; PUSH (pair int string) (Pair 6 "taquito") ; FAILWITH } }
               { SWAP ; DUP ; CAR ; DIG 2 ; ADD ; UPDATE 1 } } ;
         NIL operation ;
         PAIR } }
