{ parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (pair %mint
                   (pair (address %address) (nat %amount))
                   (pair (map %metadata string bytes) (nat %token_id))))
            (or (address %set_administrator) (pair %set_metadata (string %k) (bytes %v))))
        (or (or (bool %set_pause)
                (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
            (or (list %update_operators
                   (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                       (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))
                (list %update_token_metadata (pair (nat %token_id) (map %token_info string bytes)))))) ;
  storage
    (pair (pair (pair (address %administrator) (set %all_tokens nat))
                (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)))
          (pair (pair (big_map %operators
                         (pair (address %owner) (pair (address %operator) (nat %token_id)))
                         unit)
                      (bool %paused))
                (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                      (big_map %total_supply nat nat)))) ;
  code { CAST (pair (or (or (or (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))))
                                (pair (pair address nat) (pair (map string bytes) nat)))
                            (or address (pair string bytes)))
                        (or (or bool (list (pair address (list (pair address (pair nat nat))))))
                            (or (list (or (pair address (pair address nat)) (pair address (pair address nat))))
                                (list (pair nat (map string bytes))))))
                    (pair (pair (pair address (set nat))
                                (pair (big_map (pair address nat) nat) (big_map string bytes)))
                          (pair (pair (big_map (pair address (pair address nat)) unit) bool)
                                (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))) ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CDR ;
                     IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     MAP { { DIP 2 { DUP } ; DIG 3 } ;
                           GET 5 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           { DIP 2 { DUP } ; DIG 3 } ;
                           CAR ;
                           GET 3 ;
                           SWAP ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           PAIR ;
                           MEM ;
                           IF { { DIP 2 { DUP } ; DIG 3 } ;
                                CAR ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                IF_NONE { PUSH int 473 ; FAILWITH } {} ;
                                SWAP ;
                                PAIR }
                              { PUSH nat 0 ; SWAP ; PAIR } } ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     CDR ;
                     PUSH nat 1 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "NFT-asset: amount <> 1" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     MEM ;
                     IF { PUSH string "NFT-asset: cannot mint twice same token" ; FAILWITH } {} ;
                     SWAP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     SWAP ;
                     PUSH bool True ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     GET 4 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { SWAP ;
                          { { DUP ; CAR ; DIP { CDR } } } ;
                          { { DUP ; CAR ; DIP { CDR } } } ;
                          SWAP ;
                          { { DUP ; CAR ; DIP { CDR } } } ;
                          DUP ;
                          DIG 5 ;
                          DUP ;
                          GET 4 ;
                          SWAP ;
                          DUP ;
                          DUG 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 597 ; FAILWITH } {} ;
                          { DIP 6 { DUP } ; DIG 7 } ;
                          CAR ;
                          CDR ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        { SWAP ;
                          { { DUP ; CAR ; DIP { CDR } } } ;
                          { { DUP ; CAR ; DIP { CDR } } } ;
                          SWAP ;
                          { { DUP ; CAR ; DIP { CDR } } } ;
                          { DIP 4 { DUP } ; DIG 5 } ;
                          CAR ;
                          CDR ;
                          SOME ;
                          DIG 5 ;
                          DUP ;
                          GET 4 ;
                          SWAP ;
                          DUP ;
                          DUG 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          GET 6 ;
                          { DIP 2 { DUP } ; DIG 3 } ;
                          CAR ;
                          CDR ;
                          SOME ;
                          DIG 3 ;
                          GET 4 ;
                          UPDATE ;
                          UPDATE 6 }
                        { SWAP ;
                          DUP ;
                          GET 5 ;
                          DIG 2 ;
                          DUP ;
                          GET 3 ;
                          SWAP ;
                          DUP ;
                          DUG 4 ;
                          GET 4 ;
                          PAIR ;
                          SOME ;
                          { DIP 3 { DUP } ; DIG 4 } ;
                          GET 4 ;
                          UPDATE ;
                          UPDATE 5 ;
                          DUP ;
                          GET 6 ;
                          { DIP 2 { DUP } ; DIG 3 } ;
                          CAR ;
                          CDR ;
                          SOME ;
                          DIG 3 ;
                          GET 4 ;
                          UPDATE ;
                          UPDATE 6 } ;
                     NIL operation } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                     SWAP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                     SWAP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     SWAP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     SWAP ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CDR ;
                     SOME ;
                     DIG 5 ;
                     CAR ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR } ;
                 NIL operation } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                     SWAP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     SWAP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CDR ;
                     IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                     DUP ;
                     ITER { DUP ;
                            CDR ;
                            ITER { { DIP 3 { DUP } ; DIG 4 } ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   SENDER ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH bool True }
                                      { SENDER ; { DIP 2 { DUP } ; DIG 3 } ; CAR ; COMPARE ; EQ } ;
                                   IF { PUSH bool True }
                                      { { DIP 3 { DUP } ; DIG 4 } ;
                                        GET 3 ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        SENDER ;
                                        { DIP 4 { DUP } ; DIG 5 } ;
                                        CAR ;
                                        PAIR 3 ;
                                        MEM } ;
                                   IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                   { DIP 3 { DUP } ; DIG 4 } ;
                                   GET 5 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 3 ;
                                   MEM ;
                                   IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                   DUP ;
                                   GET 4 ;
                                   PUSH nat 0 ;
                                   COMPARE ;
                                   LT ;
                                   IF { DUP ;
                                        GET 4 ;
                                        { DIP 4 { DUP } ; DIG 5 } ;
                                        CAR ;
                                        GET 3 ;
                                        { DIP 2 { DUP } ; DIG 3 } ;
                                        GET 3 ;
                                        { DIP 4 { DUP } ; DIG 5 } ;
                                        CAR ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { PUSH int 449 ; FAILWITH } {} ;
                                        COMPARE ;
                                        GE ;
                                        IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                        { DIP 3 { DUP } ; DIG 4 } ;
                                        { { DUP ; CAR ; DIP { CDR } } } ;
                                        { { DUP ; CAR ; DIP { CDR } } } ;
                                        SWAP ;
                                        { { DUP ; CAR ; DIP { CDR } } } ;
                                        DUP ;
                                        { DIP 5 { DUP } ; DIG 6 } ;
                                        GET 3 ;
                                        { DIP 7 { DUP } ; DIG 8 } ;
                                        CAR ;
                                        PAIR ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE { PUSH int 453 ; FAILWITH } { DROP } ;
                                        { DIP 5 { DUP } ; DIG 6 } ;
                                        GET 4 ;
                                        DIG 9 ;
                                        CAR ;
                                        GET 3 ;
                                        { DIP 7 { DUP } ; DIG 8 } ;
                                        GET 3 ;
                                        { DIP 9 { DUP } ; DIG 10 } ;
                                        CAR ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { PUSH int 453 ; FAILWITH } {} ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { PUSH int 453 ; FAILWITH } {} ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        GET 3 ;
                                        SWAP ;
                                        DUP ;
                                        GET 3 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        PAIR ;
                                        MEM ;
                                        IF { DIG 3 ;
                                             { { DUP ; CAR ; DIP { CDR } } } ;
                                             { { DUP ; CAR ; DIP { CDR } } } ;
                                             SWAP ;
                                             { { DUP ; CAR ; DIP { CDR } } } ;
                                             DUP ;
                                             DIG 5 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 7 ;
                                             CAR ;
                                             PAIR ;
                                             DUP ;
                                             DUG 2 ;
                                             GET ;
                                             IF_NONE { PUSH int 455 ; FAILWITH } {} ;
                                             DIG 6 ;
                                             GET 4 ;
                                             ADD ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 2 }
                                           { DIG 3 ;
                                             { { DUP ; CAR ; DIP { CDR } } } ;
                                             { { DUP ; CAR ; DIP { CDR } } } ;
                                             SWAP ;
                                             { { DUP ; CAR ; DIP { CDR } } } ;
                                             { DIP 4 { DUP } ; DIG 5 } ;
                                             GET 4 ;
                                             SOME ;
                                             DIG 5 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             UPDATE ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 2 } }
                                      { DROP } } ;
                            DROP } ;
                     DROP } }
               { IF_LEFT
                   { DUP ;
                     ITER { IF_LEFT
                              { DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True }
                                   { { DIP 2 { DUP } ; DIG 3 } ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     SENDER ;
                                     COMPARE ;
                                     EQ } ;
                                IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                                DIG 2 ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                PUSH (option unit) (Some Unit) ;
                                DIG 5 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                SWAP ;
                                CAR ;
                                PAIR 3 ;
                                UPDATE ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP }
                              { DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True }
                                   { { DIP 2 { DUP } ; DIG 3 } ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     SENDER ;
                                     COMPARE ;
                                     EQ } ;
                                IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                                DIG 2 ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                NONE unit ;
                                DIG 5 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                SWAP ;
                                CAR ;
                                PAIR 3 ;
                                UPDATE ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP } } ;
                     DROP }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                     DUP ;
                     ITER { DIG 2 ;
                            DUP ;
                            GET 5 ;
                            DIG 2 ;
                            DUP ;
                            SOME ;
                            SWAP ;
                            CAR ;
                            UPDATE ;
                            UPDATE 5 ;
                            SWAP } ;
                     DROP } } ;
             NIL operation } ;
         PAIR } }
