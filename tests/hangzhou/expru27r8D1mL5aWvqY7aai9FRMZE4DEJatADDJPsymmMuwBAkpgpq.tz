{ storage
    (pair (pair (pair (pair (set %administrator address) (set %all_tokens nat))
                      (pair (map %governable_storage string bytes)
                            (pair (address %governance_token) (big_map %ledger (pair address nat) nat))))
                (pair (pair (big_map %metadata string bytes)
                            (big_map %operators
                               (pair (address %owner) (pair (address %operator) (nat %token_id)))
                               unit))
                      (pair (bool %paused)
                            (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                                  (big_map %total_supply nat nat)))))
          (big_map
             nat
             (lambda
                (pair (or (pair (list address) (pair string string)) bytes)
                      (pair (pair (pair (set address) (set nat))
                                  (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                            (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                  (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
                (pair (list operation)
                      (pair (pair (pair (set address) (set nat))
                                  (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                            (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                  (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))))) ;
  parameter
    (or (or (pair %entrypoint_0
               (list %addresses address)
               (pair (string %body) (string %subject)))
            (bytes %entrypoint_1))
        (or (or (or (or (address %add_administrator)
                        (pair %balance_of
                           (list %requests (pair (address %owner) (nat %token_id)))
                           (contract %callback
                              (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))))
                    (or (pair %burn (address %address) (pair (nat %amount) (nat %token_id)))
                        (or (unit %claim) (unit %confirm_gov_token_admin))))
                (or (or (string %delete_governable_storage)
                        (lambda %entrypoint_0_update
                           (pair (or (pair %entrypoint_0
                                        (list %addresses address)
                                        (pair (string %body) (string %subject)))
                                     (bytes %entrypoint_1))
                                 (pair (pair (pair (set %administrator address) (set %all_tokens nat))
                                             (pair (map %governable_storage string bytes)
                                                   (pair (address %governance_token) (big_map %ledger (pair address nat) nat))))
                                       (pair (pair (big_map %metadata string bytes)
                                                   (big_map %operators
                                                      (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                                      unit))
                                             (pair (bool %paused)
                                                   (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                                                         (big_map %total_supply nat nat))))))
                           (pair (list operation)
                                 (pair (pair (pair (set %administrator address) (set %all_tokens nat))
                                             (pair (map %governable_storage string bytes)
                                                   (pair (address %governance_token) (big_map %ledger (pair address nat) nat))))
                                       (pair (pair (big_map %metadata string bytes)
                                                   (big_map %operators
                                                      (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                                      unit))
                                             (pair (bool %paused)
                                                   (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                                                         (big_map %total_supply nat nat))))))))
                    (or (lambda %entrypoint_1_update
                           (pair (or (pair %entrypoint_0
                                        (list %addresses address)
                                        (pair (string %body) (string %subject)))
                                     (bytes %entrypoint_1))
                                 (pair (pair (pair (set %administrator address) (set %all_tokens nat))
                                             (pair (map %governable_storage string bytes)
                                                   (pair (address %governance_token) (big_map %ledger (pair address nat) nat))))
                                       (pair (pair (big_map %metadata string bytes)
                                                   (big_map %operators
                                                      (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                                      unit))
                                             (pair (bool %paused)
                                                   (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                                                         (big_map %total_supply nat nat))))))
                           (pair (list operation)
                                 (pair (pair (pair (set %administrator address) (set %all_tokens nat))
                                             (pair (map %governable_storage string bytes)
                                                   (pair (address %governance_token) (big_map %ledger (pair address nat) nat))))
                                       (pair (pair (big_map %metadata string bytes)
                                                   (big_map %operators
                                                      (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                                      unit))
                                             (pair (bool %paused)
                                                   (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                                                         (big_map %total_supply nat nat)))))))
                        (or (pair %mint
                               (pair (address %address) (nat %amount))
                               (pair (map %metadata string bytes) (nat %token_id)))
                            (address %remove_administrator)))))
            (or (or (or (address %set_gov_token_admin) (pair %set_governable_storage string bytes))
                    (or (address %set_governance_token)
                        (or (pair %set_metadata (string %k) (bytes %v)) (bool %set_pause))))
                (or (or (nat %stake)
                        (list %transfer
                           (pair (address %from_)
                                 (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                    (or (list %transfer_gov_tokens
                           (pair (address %from_)
                                 (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                        (or (nat %unstake)
                            (list %update_operators
                               (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                   (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))))))) ;
  code { CAST (pair (or (or (pair (list address) (pair string string)) bytes)
                        (or (or (or (or address (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))))
                                    (or (pair address (pair nat nat)) (or unit unit)))
                                (or (or string
                                        (lambda
                                           (pair (or (pair (list address) (pair string string)) bytes)
                                                 (pair (pair (pair (set address) (set nat))
                                                             (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                                                       (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                                             (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
                                           (pair (list operation)
                                                 (pair (pair (pair (set address) (set nat))
                                                             (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                                                       (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                                             (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))))
                                    (or (lambda
                                           (pair (or (pair (list address) (pair string string)) bytes)
                                                 (pair (pair (pair (set address) (set nat))
                                                             (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                                                       (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                                             (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
                                           (pair (list operation)
                                                 (pair (pair (pair (set address) (set nat))
                                                             (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                                                       (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                                             (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))))
                                        (or (pair (pair address nat) (pair (map string bytes) nat)) address))))
                            (or (or (or address (pair string bytes)) (or address (or (pair string bytes) bool)))
                                (or (or nat (list (pair address (list (pair address (pair nat nat))))))
                                    (or (list (pair address (list (pair address (pair nat nat)))))
                                        (or nat (list (or (pair address (pair address nat)) (pair address (pair address nat))))))))))
                    (pair (pair (pair (pair (set address) (set nat))
                                      (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                                (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                      (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))
                          (big_map
                             nat
                             (lambda
                                (pair (or (pair (list address) (pair string string)) bytes)
                                      (pair (pair (pair (set address) (set nat))
                                                  (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                                            (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                                  (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))))
                                (pair (list operation)
                                      (pair (pair (pair (set address) (set nat))
                                                  (pair (map string bytes) (pair address (big_map (pair address nat) nat))))
                                            (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                                  (pair bool (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))))))) ;
         UNPAIR 3 ;
         IF_LEFT
           { DUP ;
             IF_LEFT { DROP ; PUSH nat 0 } { DROP ; PUSH nat 1 } ;
             DUP 4 ;
             SWAP ;
             GET ;
             IF_NONE { PUSH int -1 ; FAILWITH } {} ;
             DUG 2 ;
             PAIR ;
             EXEC ;
             UNPAIR }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             UNPAIR ;
                             PUSH bool True ;
                             DIG 5 ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             NIL operation }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                             DUP ;
                             CAR ;
                             MAP { DUP 3 ;
                                   GET 7 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   MEM ;
                                   IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                   DUP 3 ;
                                   CAR ;
                                   GET 6 ;
                                   SWAP ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 3 ;
                                   CAR ;
                                   PAIR ;
                                   MEM ;
                                   IF { DUP 3 ;
                                        CAR ;
                                        GET 6 ;
                                        SWAP ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { PUSH int 412 ; FAILWITH } {} ;
                                        SWAP ;
                                        PAIR }
                                      { PUSH nat 0 ; SWAP ; PAIR } } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH string "Cannot burn another's tokens" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             DUP ;
                             DIG 6 ;
                             DUP ;
                             GET 4 ;
                             SWAP ;
                             DUP ;
                             DUG 8 ;
                             CAR ;
                             PAIR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 524 ; FAILWITH } { DROP } ;
                             DUP 7 ;
                             GET 3 ;
                             DIG 8 ;
                             CAR ;
                             GET 6 ;
                             DIG 8 ;
                             DUP ;
                             GET 4 ;
                             SWAP ;
                             DUP ;
                             DUG 10 ;
                             CAR ;
                             PAIR ;
                             GET ;
                             IF_NONE { PUSH int 524 ; FAILWITH } {} ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 524 ; FAILWITH } {} ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             DUG 2 ;
                             DUP ;
                             GET 8 ;
                             DUP 3 ;
                             GET 3 ;
                             DIG 4 ;
                             GET 8 ;
                             DUP 5 ;
                             GET 4 ;
                             GET ;
                             IF_NONE { PUSH int 525 ; FAILWITH } {} ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 525 ; FAILWITH } {} ;
                             SOME ;
                             DIG 3 ;
                             GET 4 ;
                             UPDATE ;
                             UPDATE 8 ;
                             NIL operation }
                           { IF_LEFT
                               { DROP ;
                                 DUP ;
                                 CAR ;
                                 GET 3 ;
                                 PUSH string "awardee_map" ;
                                 GET ;
                                 IF_NONE { PUSH int 675 ; FAILWITH } {} ;
                                 UNPACK (map address mutez) ;
                                 IF_NONE { PUSH int 675 ; FAILWITH } {} ;
                                 NIL operation ;
                                 SENDER ;
                                 CONTRACT unit ;
                                 IF_NONE { PUSH int 677 ; FAILWITH } {} ;
                                 DUP 3 ;
                                 SENDER ;
                                 GET ;
                                 IF_NONE { PUSH int 677 ; FAILWITH } {} ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 SWAP ;
                                 NONE mutez ;
                                 SENDER ;
                                 UPDATE ;
                                 SWAP ;
                                 DIG 2 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 DIG 5 ;
                                 PACK ;
                                 SOME ;
                                 PUSH string "awardee_map" ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP }
                               { DROP ;
                                 DUP ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 MEM ;
                                 IF {} { PUSH int 723 ; FAILWITH } ;
                                 DUP ;
                                 CAR ;
                                 GET 5 ;
                                 CONTRACT %confirm_admin unit ;
                                 IF_NONE { PUSH int 724 ; FAILWITH } {} ;
                                 NIL operation ;
                                 SWAP ;
                                 PUSH mutez 0 ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 CONS } } } }
                   { IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH int 735 ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             NONE bytes ;
                             DIG 5 ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH int 620 ; FAILWITH } ;
                             DIG 2 ;
                             SWAP ;
                             SOME ;
                             PUSH nat 0 ;
                             UPDATE ;
                             SWAP } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH int 625 ; FAILWITH } ;
                             DIG 2 ;
                             SWAP ;
                             SOME ;
                             PUSH nat 1 ;
                             UPDATE ;
                             SWAP }
                           { IF_LEFT
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 MEM ;
                                 IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 PUSH bool True ;
                                 DUP 6 ;
                                 GET 4 ;
                                 UPDATE ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET 6 ;
                                 SWAP ;
                                 DUP ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 3 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 MEM ;
                                 IF { SWAP ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      DUP ;
                                      DIG 6 ;
                                      DUP ;
                                      GET 4 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 8 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      DUP ;
                                      DUG 2 ;
                                      GET ;
                                      IF_NONE { PUSH int 547 ; FAILWITH } {} ;
                                      DUP 8 ;
                                      CAR ;
                                      CDR ;
                                      ADD ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP }
                                    { SWAP ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      DUP 6 ;
                                      CAR ;
                                      CDR ;
                                      SOME ;
                                      DIG 6 ;
                                      DUP ;
                                      GET 4 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 8 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      UPDATE ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP } ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET 7 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET 4 ;
                                 MEM ;
                                 IF { DROP }
                                    { SWAP ;
                                      DUP ;
                                      GET 7 ;
                                      DIG 2 ;
                                      DUP ;
                                      GET 3 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 4 ;
                                      GET 4 ;
                                      PAIR ;
                                      SOME ;
                                      DUP 4 ;
                                      GET 4 ;
                                      UPDATE ;
                                      UPDATE 7 ;
                                      DUP ;
                                      GET 8 ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      SOME ;
                                      DIG 3 ;
                                      GET 4 ;
                                      UPDATE ;
                                      UPDATE 8 } }
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 MEM ;
                                 IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 PUSH bool False ;
                                 DIG 5 ;
                                 UPDATE ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR } } } ;
                     NIL operation } }
               { IF_LEFT
                   { IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH int 716 ; FAILWITH } ;
                             NIL operation ;
                             DUP 3 ;
                             CAR ;
                             GET 5 ;
                             CONTRACT %transfer address ;
                             IF_NONE { PUSH int 718 ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH int 730 ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             DUP 5 ;
                             CDR ;
                             SOME ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             NIL operation } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH int 633 ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             CDR ;
                             DIG 4 ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR }
                           { IF_LEFT
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 MEM ;
                                 IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 DUP 5 ;
                                 CDR ;
                                 SOME ;
                                 DIG 5 ;
                                 CAR ;
                                 UPDATE ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR }
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 MEM ;
                                 IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ;
                                 UPDATE 5 } } ;
                         NIL operation } }
                   { IF_LEFT
                       { IF_LEFT
                           { DUP ;
                             PUSH nat 0 ;
                             COMPARE ;
                             LT ;
                             IF {} { PUSH int 657 ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             GET 3 ;
                             PUSH string "stake_map" ;
                             GET ;
                             IF_NONE { PUSH int 659 ; FAILWITH } {} ;
                             UNPACK (map address nat) ;
                             IF_NONE { PUSH int 659 ; FAILWITH } {} ;
                             DUP ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH (option nat) (Some 0) ; SENDER ; UPDATE } ;
                             NIL operation ;
                             SELF %transfer_gov_tokens ;
                             PUSH mutez 0 ;
                             NIL (pair address (list (pair address (pair nat nat)))) ;
                             NIL (pair address (pair nat nat)) ;
                             DUP 7 ;
                             PUSH nat 0 ;
                             SELF_ADDRESS ;
                             PAIR 3 ;
                             CONS ;
                             SENDER ;
                             PAIR ;
                             CONS ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             SWAP ;
                             DUP ;
                             SENDER ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 669 ; FAILWITH } {} ;
                             DIG 4 ;
                             ADD ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             DIG 2 ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             DIG 5 ;
                             PACK ;
                             SOME ;
                             PUSH string "stake_map" ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                             DUP ;
                             ITER { DUP ;
                                    CDR ;
                                    ITER { DUP 4 ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           SENDER ;
                                           MEM ;
                                           IF { PUSH bool True } { SENDER ; DUP 3 ; CAR ; COMPARE ; EQ } ;
                                           IF { PUSH bool True }
                                              { DUP 4 ;
                                                GET 3 ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                GET 3 ;
                                                SENDER ;
                                                DUP 5 ;
                                                CAR ;
                                                PAIR 3 ;
                                                MEM } ;
                                           IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                           DUP 4 ;
                                           GET 7 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           GET 3 ;
                                           MEM ;
                                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                           DUP ;
                                           GET 4 ;
                                           PUSH nat 0 ;
                                           COMPARE ;
                                           LT ;
                                           IF { DUP ;
                                                GET 4 ;
                                                DUP 5 ;
                                                CAR ;
                                                GET 6 ;
                                                DUP 3 ;
                                                GET 3 ;
                                                DUP 5 ;
                                                CAR ;
                                                PAIR ;
                                                GET ;
                                                IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                                                COMPARE ;
                                                GE ;
                                                IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                                DUP 4 ;
                                                UNPAIR ;
                                                UNPAIR ;
                                                SWAP ;
                                                UNPAIR ;
                                                SWAP ;
                                                UNPAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUP 7 ;
                                                GET 3 ;
                                                DUP 9 ;
                                                CAR ;
                                                PAIR ;
                                                DUP ;
                                                DUG 2 ;
                                                GET ;
                                                IF_NONE { PUSH int 394 ; FAILWITH } { DROP } ;
                                                DUP 7 ;
                                                GET 4 ;
                                                DIG 10 ;
                                                CAR ;
                                                GET 6 ;
                                                DUP 9 ;
                                                GET 3 ;
                                                DUP 11 ;
                                                CAR ;
                                                PAIR ;
                                                GET ;
                                                IF_NONE { PUSH int 394 ; FAILWITH } {} ;
                                                SUB ;
                                                ISNAT ;
                                                IF_NONE { PUSH int 394 ; FAILWITH } {} ;
                                                SOME ;
                                                SWAP ;
                                                UPDATE ;
                                                SWAP ;
                                                PAIR ;
                                                SWAP ;
                                                PAIR ;
                                                SWAP ;
                                                PAIR ;
                                                PAIR ;
                                                DUP ;
                                                DUG 4 ;
                                                CAR ;
                                                GET 6 ;
                                                SWAP ;
                                                DUP ;
                                                GET 3 ;
                                                SWAP ;
                                                DUP ;
                                                DUG 3 ;
                                                CAR ;
                                                PAIR ;
                                                MEM ;
                                                IF { DIG 3 ;
                                                     UNPAIR ;
                                                     UNPAIR ;
                                                     SWAP ;
                                                     UNPAIR ;
                                                     SWAP ;
                                                     UNPAIR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DIG 6 ;
                                                     DUP ;
                                                     GET 3 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 8 ;
                                                     CAR ;
                                                     PAIR ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     GET ;
                                                     IF_NONE { PUSH int 397 ; FAILWITH } {} ;
                                                     DIG 7 ;
                                                     GET 4 ;
                                                     ADD ;
                                                     SOME ;
                                                     SWAP ;
                                                     UPDATE ;
                                                     SWAP ;
                                                     PAIR ;
                                                     SWAP ;
                                                     PAIR ;
                                                     SWAP ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUG 2 }
                                                   { DIG 3 ;
                                                     UNPAIR ;
                                                     UNPAIR ;
                                                     SWAP ;
                                                     UNPAIR ;
                                                     SWAP ;
                                                     UNPAIR ;
                                                     SWAP ;
                                                     DUP 6 ;
                                                     GET 4 ;
                                                     SOME ;
                                                     DIG 6 ;
                                                     DUP ;
                                                     GET 3 ;
                                                     SWAP ;
                                                     CAR ;
                                                     PAIR ;
                                                     UPDATE ;
                                                     SWAP ;
                                                     PAIR ;
                                                     SWAP ;
                                                     PAIR ;
                                                     SWAP ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUG 2 } }
                                              { DROP } } ;
                                    DROP } ;
                             DROP ;
                             NIL operation } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH int 641 ; FAILWITH } ;
                             NIL operation ;
                             DUP 3 ;
                             CAR ;
                             GET 5 ;
                             CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                             IF_NONE { PUSH int 650 ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { IF_LEFT
                               { DUP ;
                                 PUSH nat 0 ;
                                 COMPARE ;
                                 LT ;
                                 IF {} { PUSH int 686 ; FAILWITH } ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET 3 ;
                                 PUSH string "stake_map" ;
                                 GET ;
                                 IF_NONE { PUSH int 688 ; FAILWITH } {} ;
                                 UNPACK (map address nat) ;
                                 IF_NONE { PUSH int 688 ; FAILWITH } {} ;
                                 NIL operation ;
                                 SELF %transfer_gov_tokens ;
                                 PUSH mutez 0 ;
                                 NIL (pair address (list (pair address (pair nat nat)))) ;
                                 NIL (pair address (pair nat nat)) ;
                                 DUP 7 ;
                                 PUSH nat 0 ;
                                 SENDER ;
                                 PAIR 3 ;
                                 CONS ;
                                 SELF_ADDRESS ;
                                 PAIR ;
                                 CONS ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 3 ;
                                 DIG 3 ;
                                 SENDER ;
                                 GET ;
                                 IF_NONE { PUSH int 696 ; FAILWITH } {} ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH int 696 ; FAILWITH } {} ;
                                 SOME ;
                                 SENDER ;
                                 UPDATE ;
                                 SWAP ;
                                 PUSH nat 0 ;
                                 DUP 3 ;
                                 SENDER ;
                                 GET ;
                                 IF_NONE { PUSH int 697 ; FAILWITH } {} ;
                                 COMPARE ;
                                 EQ ;
                                 IF { SWAP ; NONE nat ; SENDER ; UPDATE ; SWAP } {} ;
                                 DIG 2 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 DIG 5 ;
                                 PACK ;
                                 SOME ;
                                 PUSH string "stake_map" ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET 3 ;
                                 PUSH string "awardee_map" ;
                                 GET ;
                                 IF_NONE { PUSH int 704 ; FAILWITH } {} ;
                                 UNPACK (map address mutez) ;
                                 IF_NONE { PUSH int 704 ; FAILWITH } {} ;
                                 SWAP ;
                                 SENDER ;
                                 CONTRACT unit ;
                                 IF_NONE { PUSH int 706 ; FAILWITH } {} ;
                                 DUP 3 ;
                                 SENDER ;
                                 GET ;
                                 IF_NONE { PUSH int 706 ; FAILWITH } {} ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 SWAP ;
                                 NONE mutez ;
                                 SENDER ;
                                 UPDATE ;
                                 DIG 2 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 DIG 4 ;
                                 PACK ;
                                 SOME ;
                                 PUSH string "awardee_map" ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP }
                               { DUP ;
                                 ITER { IF_LEFT
                                          { DUP ;
                                            CAR ;
                                            SENDER ;
                                            COMPARE ;
                                            EQ ;
                                            IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; CAR ; SENDER ; MEM } ;
                                            IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                                            DIG 2 ;
                                            UNPAIR ;
                                            SWAP ;
                                            UNPAIR ;
                                            UNPAIR ;
                                            SWAP ;
                                            PUSH (option unit) (Some Unit) ;
                                            DIG 5 ;
                                            DUP ;
                                            GET 4 ;
                                            SWAP ;
                                            DUP ;
                                            GET 3 ;
                                            SWAP ;
                                            CAR ;
                                            PAIR 3 ;
                                            UPDATE ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            SWAP }
                                          { DUP ;
                                            CAR ;
                                            SENDER ;
                                            COMPARE ;
                                            EQ ;
                                            IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; CAR ; SENDER ; MEM } ;
                                            IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                                            DIG 2 ;
                                            UNPAIR ;
                                            SWAP ;
                                            UNPAIR ;
                                            UNPAIR ;
                                            SWAP ;
                                            NONE unit ;
                                            DIG 5 ;
                                            DUP ;
                                            GET 4 ;
                                            SWAP ;
                                            DUP ;
                                            GET 3 ;
                                            SWAP ;
                                            CAR ;
                                            PAIR 3 ;
                                            UPDATE ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            SWAP } } ;
                                 DROP ;
                                 NIL operation } } } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         DUG 2 ;
         PAIR ;
         SWAP ;
         PAIR } }
