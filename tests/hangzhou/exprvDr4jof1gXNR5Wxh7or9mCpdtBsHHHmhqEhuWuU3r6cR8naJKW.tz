{ parameter
    (or (or (nat %bid) (or (nat %retract_bid) (nat %swap)))
        (or (or (address %update_admin) (address %update_hicetnunc))
            (or (nat %update_hicetnunc_fee) (nat %update_management_fee)))) ;
  storage
    (pair (pair (pair (address %admin) (address %hicetnunc))
                (pair (nat %hicetnunc_fee) (nat %management_fee)))
          (pair (pair (big_map %metadata string bytes) (address %objkt))
                (pair (nat %swap_id)
                      (big_map %swaps
                         nat
                         (pair (address %issuer) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))) ;
  code { CAST (pair (or (or nat (or nat nat)) (or (or address address) (or nat nat)))
                    (pair (pair (pair address address) (pair nat nat))
                          (pair (pair (big_map string bytes) address)
                                (pair nat (big_map nat (pair address (pair nat mutez))))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "no value in bid" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 GET 6 ;
                 AMOUNT ;
                 DIG 3 ;
                 SENDER ;
                 PAIR 3 ;
                 SOME ;
                 DIG 3 ;
                 GET 5 ;
                 UPDATE ;
                 UPDATE 6 ;
                 DUP ;
                 GET 5 ;
                 PUSH nat 1 ;
                 ADD ;
                 UPDATE 5 ;
                 NIL operation }
               { IF_LEFT
                   { SENDER ;
                     DUP 3 ;
                     GET 6 ;
                     DUP 3 ;
                     GET ;
                     IF_NONE { PUSH int 49 ; FAILWITH } {} ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.swaps[params].issuer == sp.sender" ;
                          FAILWITH } ;
                     NIL operation ;
                     SENDER ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 50 ; FAILWITH } {} ;
                     DUP 4 ;
                     GET 6 ;
                     DUP 4 ;
                     GET ;
                     IF_NONE { PUSH int 50 ; FAILWITH } {} ;
                     GET 4 ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     GET 6 ;
                     NONE (pair address (pair nat mutez)) ;
                     DIG 4 ;
                     UPDATE ;
                     UPDATE 6 ;
                     SWAP }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender != self.data.swaps[params.swap_id].issuer" ;
                          FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     GET 3 ;
                     CDR ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 79 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     PUSH nat 1 ;
                     DUP 8 ;
                     GET 6 ;
                     DUP 8 ;
                     GET ;
                     IF_NONE { PUSH int 59 ; FAILWITH } {} ;
                     GET 3 ;
                     DUP 9 ;
                     GET 6 ;
                     DUP 9 ;
                     GET ;
                     IF_NONE { PUSH int 59 ; FAILWITH } {} ;
                     CAR ;
                     PAIR 3 ;
                     CONS ;
                     SENDER ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 67 ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     PUSH nat 1000 ;
                     DUP 6 ;
                     CAR ;
                     GET 4 ;
                     PUSH mutez 1 ;
                     PUSH nat 1 ;
                     MUL ;
                     PUSH mutez 1 ;
                     DUP ;
                     DUP 10 ;
                     GET 6 ;
                     DUP 10 ;
                     GET ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     GET 4 ;
                     EDIV ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 64 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 64 ; FAILWITH } { CAR } ;
                     MUL ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 70 ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     PUSH nat 1000 ;
                     DUP 6 ;
                     CAR ;
                     GET 3 ;
                     PUSH mutez 1 ;
                     PUSH nat 1 ;
                     MUL ;
                     PUSH mutez 1 ;
                     DUP ;
                     DUP 10 ;
                     GET 6 ;
                     DUP 10 ;
                     GET ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     GET 4 ;
                     EDIV ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 63 ; FAILWITH } { CAR } ;
                     MUL ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SENDER ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     PUSH nat 1000 ;
                     DUP 6 ;
                     CAR ;
                     GET 3 ;
                     PUSH mutez 1 ;
                     PUSH nat 1 ;
                     MUL ;
                     PUSH mutez 1 ;
                     DUP ;
                     DUP 10 ;
                     GET 6 ;
                     DUP 10 ;
                     GET ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     GET 4 ;
                     EDIV ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 63 ; FAILWITH } { CAR } ;
                     PUSH nat 1000 ;
                     DUP 7 ;
                     CAR ;
                     GET 4 ;
                     PUSH mutez 1 ;
                     PUSH nat 1 ;
                     MUL ;
                     PUSH mutez 1 ;
                     DUP ;
                     DUP 11 ;
                     GET 6 ;
                     DUP 11 ;
                     GET ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     GET 4 ;
                     EDIV ;
                     IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 64 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 64 ; FAILWITH } { CAR } ;
                     ADD ;
                     MUL ;
                     DUP 5 ;
                     GET 6 ;
                     DUP 5 ;
                     GET ;
                     IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                     GET 4 ;
                     SUB ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     GET 6 ;
                     NONE (pair address (pair nat mutez)) ;
                     DIG 4 ;
                     UPDATE ;
                     UPDATE 6 ;
                     SWAP } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR } } ;
             NIL operation } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
