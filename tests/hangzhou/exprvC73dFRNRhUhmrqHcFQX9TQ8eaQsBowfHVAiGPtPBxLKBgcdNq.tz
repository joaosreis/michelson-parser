{ storage
    (pair (pair (pair (pair (address %addressToSendLiquidity) (address %admin))
                      (pair (nat %decimals)
                            (pair (big_map %isParticipated address bool) (big_map %metadata string bytes))))
                (pair (pair (mutez %minimumParticipation) (mutez %originalPrice))
                      (pair (nat %privateSaleTokensSold)
                            (pair (timestamp %salePublicEndTime) (timestamp %salePublicStartTime)))))
          (pair (pair (pair (nat %status) (address %token))
                      (pair (nat %tokenId) (pair (mutez %tokenPrice) (timestamp %tokensFirstUnlockTime))))
                (pair (pair (timestamp %tokensFullUnlockTime)
                            (pair (nat %tokensToSell) (nat %totalTokensSold)))
                      (pair (mutez %totalXTZRaised)
                            (pair (big_map %userToHisParticipationDetails
                                     address
                                     (pair (pair (map %SaleMap
                                                    nat
                                                    (pair (nat %amountOfTokensReceived)
                                                          (pair (mutez %amountXTZPaid) (timestamp %timestamp))))
                                                 (nat %counter))
                                           (pair (mutez %netPoolContribution)
                                                 (pair (nat %totalAllocation) (nat %totalWithdrawn)))))
                                  (big_map %whitelist address bool)))))) ;
  parameter
    (or (or (unit %depositTokens) (or (set %distributeFunds address) (unit %participateSale)))
        (or (or (nat %rescueFunds) (unit %transferLiquidity))
            (or (list %whitelistParticipants address) (unit %withdrawTokens)))) ;
  code { CAST (pair (or (or unit (or (set address) unit)) (or (or nat unit) (or (list address) unit)))
                    (pair (pair (pair (pair address address)
                                      (pair nat (pair (big_map address bool) (big_map string bytes))))
                                (pair (pair mutez mutez) (pair nat (pair timestamp timestamp))))
                          (pair (pair (pair nat address) (pair nat (pair mutez timestamp)))
                                (pair (pair timestamp (pair nat nat))
                                      (pair mutez
                                            (pair (big_map
                                                     address
                                                     (pair (pair (map nat (pair nat (pair mutez timestamp))) nat) (pair mutez (pair nat nat))))
                                                  (big_map address bool))))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 DUP ;
                 GET 3 ;
                 CAR ;
                 CAR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "WrongCondition: self.data.status == 0" ; FAILWITH } ;
                 DUP ;
                 GET 3 ;
                 CAR ;
                 CDR ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 5 ;
                 DUP ;
                 GET 5 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 GET 3 ;
                 GET 3 ;
                 SELF_ADDRESS ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 GET 3 ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "WrongCondition: self.data.status == 0" ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 CDR ;
                 PUSH nat 1 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { IF_LEFT
                   { SENDER ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "ONLY ADMIN CAN CALL" ; FAILWITH } ;
                     PUSH nat 2 ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "Can't withdraw before liquidity is transferred." ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     GET 6 ;
                     NOW ;
                     COMPARE ;
                     GT ;
                     IF {} { PUSH string "Tokens are not unlocked yet." ; FAILWITH } ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     NIL (pair address (pair nat nat)) ;
                     DUP 5 ;
                     ITER { DIG 2 ;
                            DROP ;
                            DIG 2 ;
                            DROP ;
                            DIG 2 ;
                            DROP ;
                            DUP 4 ;
                            GET 9 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            MEM ;
                            IF {} { PUSH string "NOT PARTICIPATED IN SALE" ; FAILWITH } ;
                            DUP 4 ;
                            GET 9 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                            GET 5 ;
                            DUG 2 ;
                            DUP 5 ;
                            GET 9 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 159 ; FAILWITH } {} ;
                            GET 6 ;
                            DUG 2 ;
                            DUP 6 ;
                            GET 5 ;
                            CAR ;
                            NOW ;
                            COMPARE ;
                            GT ;
                            IF { DUP 3 ;
                                 DUP 5 ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH int 162 ; FAILWITH } {} ;
                                 DUG 2 }
                               { PUSH nat 0 ;
                                 DUP 4 ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { PUSH string "ALREADY WITHDRAWN 40%" ; FAILWITH } ;
                                 PUSH nat 100 ;
                                 PUSH nat 40 ;
                                 DUP 6 ;
                                 MUL ;
                                 EDIV ;
                                 IF_NONE { PUSH int 165 ; FAILWITH } { CAR } ;
                                 DUG 2 } ;
                            PUSH nat 0 ;
                            DUP 4 ;
                            COMPARE ;
                            GT ;
                            IF { SWAP ;
                                 DUP 3 ;
                                 DUP 8 ;
                                 GET 3 ;
                                 GET 3 ;
                                 DUP 4 ;
                                 PAIR 3 ;
                                 CONS ;
                                 SWAP ;
                                 DIG 6 ;
                                 DUP ;
                                 GET 9 ;
                                 DUP ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { PUSH int 172 ; FAILWITH } {} ;
                                 DUP ;
                                 GET 6 ;
                                 DUP 7 ;
                                 ADD ;
                                 UPDATE 6 ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 UPDATE 9 ;
                                 DUG 5 }
                               { DROP } } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     NIL operation ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CDR ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 177 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     DIG 4 ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 8 ;
                     NOW ;
                     COMPARE ;
                     GT ;
                     IF {}
                        { PUSH string "WrongCondition: sp.now > self.data.salePublicStartTime" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 7 ;
                     NOW ;
                     COMPARE ;
                     LE ;
                     IF {}
                        { PUSH string "WrongCondition: sp.now <= self.data.salePublicEndTime" ;
                          FAILWITH } ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "WrongCondition: self.data.status == 1" ; FAILWITH } ;
                     AMOUNT ;
                     DUP 3 ;
                     CAR ;
                     GET 3 ;
                     CAR ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "AMOUNT LESS THAN MINIMUM AMOUNT" ; FAILWITH } ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     PUSH mutez 1 ;
                     DUP 4 ;
                     CAR ;
                     GET 3 ;
                     CDR ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     DUP 4 ;
                     GET 10 ;
                     SENDER ;
                     MEM ;
                     IF { DROP ;
                          SWAP ;
                          DROP ;
                          PUSH mutez 1 ;
                          DUP 3 ;
                          GET 3 ;
                          GET 5 ;
                          EDIV ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          CAR }
                        { DIG 2 ; DROP } ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     DIG 2 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 98 ; FAILWITH } { CAR } ;
                     DUP ;
                     INT ;
                     DIG 2 ;
                     DUP ;
                     GET 5 ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     GET 5 ;
                     GET 3 ;
                     SUB ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Not enough Tokens" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP 7 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     GET 7 ;
                     AMOUNT ;
                     ADD ;
                     UPDATE 7 ;
                     DUP ;
                     DUG 2 ;
                     GET 9 ;
                     SENDER ;
                     MEM ;
                     IF {}
                        { SWAP ;
                          DUP ;
                          GET 9 ;
                          PUSH (option
                                  (pair (pair (map nat (pair nat (pair mutez timestamp))) nat) (pair mutez (pair nat nat))))
                               (Some (Pair (Pair {} 0) (Pair 0 (Pair 0 0)))) ;
                          SENDER ;
                          UPDATE ;
                          UPDATE 9 ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 9 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 273 ; FAILWITH } {} ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     GET 9 ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     NOW ;
                     AMOUNT ;
                     DUP 10 ;
                     PAIR 3 ;
                     SOME ;
                     DIG 7 ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 9 ;
                     DUP ;
                     GET 9 ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 278 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     PUSH nat 1 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 9 ;
                     DUP ;
                     GET 9 ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 279 ; FAILWITH } {} ;
                     DUP ;
                     GET 5 ;
                     DIG 5 ;
                     ADD ;
                     UPDATE 5 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 9 ;
                     DUP ;
                     GET 9 ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 108 ; FAILWITH } {} ;
                     DUP ;
                     GET 3 ;
                     AMOUNT ;
                     ADD ;
                     UPDATE 3 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 9 ;
                     NIL operation } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "CAN ONLY BE CALLED BY ADMIN" ; FAILWITH } ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     PUSH nat 0 ;
                     COMPARE ;
                     LT ;
                     IF { NIL operation ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CONTRACT unit ;
                          IF_NONE { PUSH string "Not enough Funds / Transfer Error" ; FAILWITH } {} ;
                          BALANCE ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { NIL operation } ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CDR ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     DIG 5 ;
                     DIG 6 ;
                     DUP ;
                     GET 3 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR 3 ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "ONLY ADMIN CAN TRANSFER LIQUIDITY" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 7 ;
                     NOW ;
                     COMPARE ;
                     GT ;
                     IF {}
                        { PUSH string "WrongCondition: sp.now > self.data.salePublicEndTime" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     GET 5 ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     GET 5 ;
                     GET 3 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 190 ; FAILWITH } {} ;
                     DUP ;
                     PUSH nat 0 ;
                     COMPARE ;
                     LT ;
                     IF { SWAP ;
                          DROP ;
                          NIL operation ;
                          DUP 3 ;
                          GET 3 ;
                          CAR ;
                          CDR ;
                          CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                          IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          NIL (pair address (list (pair address (pair nat nat)))) ;
                          NIL (pair address (pair nat nat)) ;
                          DIG 5 ;
                          DIG 6 ;
                          DUP ;
                          GET 3 ;
                          GET 3 ;
                          SWAP ;
                          DUP ;
                          DUG 8 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR 3 ;
                          CONS ;
                          SELF_ADDRESS ;
                          PAIR ;
                          CONS ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { DROP 2 ; NIL operation } ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     PUSH nat 0 ;
                     COMPARE ;
                     LT ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { PUSH string "Not enough Funds / Transfer Error" ; FAILWITH } {} ;
                          BALANCE ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          CONS }
                        {} ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "WrongCondition: self.data.status == 1" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     PUSH nat 2 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "ONLY ADMIN CAN WHITELIST" ; FAILWITH } ;
                     DUP ;
                     ITER { DIG 2 ;
                            DUP ;
                            GET 10 ;
                            PUSH (option bool) (Some True) ;
                            DIG 3 ;
                            UPDATE ;
                            UPDATE 10 ;
                            SWAP } ;
                     DROP ;
                     NIL operation }
                   { DROP ;
                     DUP ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     PUSH nat 2 ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "Can't withdraw before liquidity is transferred." ; FAILWITH } ;
                     DUP ;
                     GET 3 ;
                     GET 6 ;
                     NOW ;
                     COMPARE ;
                     GT ;
                     IF {} { PUSH string "Tokens are not unlocked yet." ; FAILWITH } ;
                     DUP ;
                     GET 9 ;
                     SENDER ;
                     MEM ;
                     IF {} { PUSH string "NOT PARTICIPATED IN SALE" ; FAILWITH } ;
                     DUP ;
                     GET 9 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 119 ; FAILWITH } {} ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 9 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 120 ; FAILWITH } {} ;
                     GET 6 ;
                     DUP ;
                     DUP 3 ;
                     COMPARE ;
                     NEQ ;
                     IF {} { PUSH string "CAN'T WITHDRAW MORE" ; FAILWITH } ;
                     DUP 3 ;
                     GET 5 ;
                     CAR ;
                     NOW ;
                     COMPARE ;
                     GT ;
                     IF { SWAP ; SUB ; ISNAT ; IF_NONE { PUSH int 126 ; FAILWITH } {} }
                        { PUSH nat 0 ;
                          COMPARE ;
                          EQ ;
                          IF {} { PUSH string "ALREADY WITHDRAWN 40%" ; FAILWITH } ;
                          PUSH nat 100 ;
                          PUSH nat 40 ;
                          DIG 2 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 129 ; FAILWITH } { CAR } } ;
                     DUP ;
                     PUSH nat 0 ;
                     COMPARE ;
                     LT ;
                     IF {} { PUSH string "NO TOKENS TO WITHDRAW" ; FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CDR ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     DUP 6 ;
                     DUP 8 ;
                     GET 3 ;
                     GET 3 ;
                     SENDER ;
                     PAIR 3 ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     GET 9 ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 137 ; FAILWITH } {} ;
                     DUP ;
                     GET 6 ;
                     DIG 6 ;
                     ADD ;
                     UPDATE 6 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 9 ;
                     SWAP } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
