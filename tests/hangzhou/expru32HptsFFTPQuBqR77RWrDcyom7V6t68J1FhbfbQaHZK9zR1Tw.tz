{ storage
    (pair (pair (pair (big_map %entries address bool) (nat %fee))
                (pair (address %hdao)
                      (big_map %invoices address (pair (bytes %invoice) (bytes %subjkt)))))
          (pair (pair (address %manager) (big_map %metadata string bytes))
                (pair (big_map %registries address bytes)
                      (pair (big_map %subjkts bytes bool) (big_map %subjkts_metadata bytes bytes))))) ;
  parameter
    (or (or (pair %ban (address %address) (bytes %invoice))
            (pair %registry (bytes %alias) (pair (bytes %metadata) (bytes %subjkt))))
        (or (unit %unregistry) (or (nat %update_fee) (address %update_manager)))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DIG 5 ;
                 GET 5 ;
                 DUP 6 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 81 ; FAILWITH } {} ;
                 DUP 6 ;
                 CDR ;
                 PAIR ;
                 SOME ;
                 DUP 6 ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 GET 7 ;
                 NONE bool ;
                 DIG 4 ;
                 GET 5 ;
                 DUP 5 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 85 ; FAILWITH } {} ;
                 UPDATE ;
                 UPDATE 7 ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 GET 8 ;
                 NONE bytes ;
                 DIG 4 ;
                 GET 5 ;
                 DUP 5 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                 UPDATE ;
                 UPDATE 8 ;
                 DUP ;
                 GET 5 ;
                 NONE bytes ;
                 DIG 3 ;
                 CAR ;
                 UPDATE ;
                 UPDATE 5 ;
                 NIL operation }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 7 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 GET ;
                 IF_NONE { PUSH bool False } {} ;
                 IF { DUP ;
                      GET 4 ;
                      DUP 3 ;
                      GET 5 ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                      COMPARE ;
                      EQ ;
                      IF {}
                         { PUSH string "WrongCondition: self.data.registries[sp.sender] == params.subjkt" ;
                           FAILWITH } }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH bool False } {} ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP ;
                      GET 7 ;
                      NONE bool ;
                      DIG 4 ;
                      GET 5 ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 85 ; FAILWITH } {} ;
                      UPDATE ;
                      UPDATE 7 ;
                      DUP ;
                      DUG 2 ;
                      DUP ;
                      GET 8 ;
                      NONE bytes ;
                      DIG 4 ;
                      GET 5 ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                      UPDATE ;
                      UPDATE 8 ;
                      DUP ;
                      GET 5 ;
                      NONE bytes ;
                      SENDER ;
                      UPDATE ;
                      UPDATE 5 ;
                      SWAP }
                    {} ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 PUSH (option bool) (Some True) ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 GET 7 ;
                 PUSH (option bool) (Some True) ;
                 DUP 4 ;
                 GET 4 ;
                 UPDATE ;
                 UPDATE 7 ;
                 DUP ;
                 GET 8 ;
                 DUP 3 ;
                 GET 3 ;
                 SOME ;
                 DUP 4 ;
                 CAR ;
                 UPDATE ;
                 UPDATE 8 ;
                 DUP ;
                 GET 5 ;
                 DIG 2 ;
                 GET 4 ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 UPDATE 5 ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 90 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PUSH nat 0 ;
                 SELF_ADDRESS ;
                 PAIR 3 ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS } }
           { IF_LEFT
               { DROP ;
                 DUP ;
                 DUP ;
                 GET 7 ;
                 NONE bool ;
                 DIG 3 ;
                 GET 5 ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH int 85 ; FAILWITH } {} ;
                 UPDATE ;
                 UPDATE 7 ;
                 DUP ;
                 DUP ;
                 GET 8 ;
                 NONE bytes ;
                 DIG 3 ;
                 GET 5 ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                 UPDATE ;
                 UPDATE 8 ;
                 DUP ;
                 GET 5 ;
                 NONE bytes ;
                 SENDER ;
                 UPDATE ;
                 UPDATE 5 }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } ;
             NIL operation } ;
         PAIR } }
