{ storage
    (pair (address %currentWinner) (pair (mutez %lastBid) (timestamp %victoryEpoch))) ;
  parameter (or (unit %add_bid) (unit %claim)) ;
  code { CAST (pair (or unit unit) (pair address (pair mutez timestamp))) ;
         UNPAIR ;
         IF_LEFT
           { DROP ;
             DUP ;
             GET 3 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF {}
                { PUSH string "The amount sent is not enough to outbid the current winner" ;
                  FAILWITH } ;
             SENDER ;
             UPDATE 1 ;
             NOW ;
             PUSH int 86400 ;
             ADD ;
             UPDATE 4 ;
             DUP ;
             GET 3 ;
             AMOUNT ;
             ADD ;
             UPDATE 3 ;
             NIL operation }
           { DROP ;
             DUP ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "You are not the winner!" ; FAILWITH } ;
             DUP ;
             GET 4 ;
             NOW ;
             COMPARE ;
             GT ;
             IF {}
                { PUSH string "There is still time left before you can claim your prize" ;
                  FAILWITH } ;
             NIL operation ;
             SENDER ;
             CONTRACT unit ;
             IF_NONE { PUSH int 18 ; FAILWITH } {} ;
             BALANCE ;
             UNIT ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             PUSH mutez 0 ;
             UPDATE 3 ;
             SWAP } ;
         PAIR } }
