{ storage
    (pair (pair (pair (big_map %balance address nat) (big_map %downside address nat))
                (pair (big_map %metadata string bytes)
                      (pair (address %token_address) (big_map %upside address nat))))
          (big_map
             nat
             (lambda
                (pair (or (or (pair nat bool) (or (pair nat address) (pair nat address)))
                          (or (or nat unit) (or unit nat)))
                      (pair (pair (big_map address nat) (big_map address nat))
                            (pair (big_map string bytes) (pair address (big_map address nat)))))
                (pair (list operation)
                      (pair (pair (big_map address nat) (big_map address nat))
                            (pair (big_map string bytes) (pair address (big_map address nat)))))))) ;
  parameter
    (or (or (pair %add_bet (nat %amount) (bool %upside))
            (or (pair %bet_downside (nat %amount) (address %opponent))
                (pair %bet_upside (nat %amount) (address %opponent))))
        (or (or (nat %deposit) (unit %remove_downside))
            (or (unit %remove_upside) (nat %withdraw)))) ;
  code { CAST (pair (or (or (pair nat bool) (or (pair nat address) (pair nat address)))
                        (or (or nat unit) (or unit nat)))
                    (pair (pair (pair (big_map address nat) (big_map address nat))
                                (pair (big_map string bytes) (pair address (big_map address nat))))
                          (big_map
                             nat
                             (lambda
                                (pair (or (or (pair nat bool) (or (pair nat address) (pair nat address)))
                                          (or (or nat unit) (or unit nat)))
                                      (pair (pair (big_map address nat) (big_map address nat))
                                            (pair (big_map string bytes) (pair address (big_map address nat)))))
                                (pair (list operation)
                                      (pair (pair (big_map address nat) (big_map address nat))
                                            (pair (big_map string bytes) (pair address (big_map address nat))))))))) ;
         UNPAIR 3 ;
         DUP ;
         IF_LEFT
           { IF_LEFT
               { DROP ; PUSH nat 0 }
               { IF_LEFT { DROP ; PUSH nat 1 } { DROP ; PUSH nat 2 } } }
           { IF_LEFT
               { IF_LEFT { DROP ; PUSH nat 3 } { DROP ; PUSH nat 4 } }
               { IF_LEFT { DROP ; PUSH nat 5 } { DROP ; PUSH nat 6 } } } ;
         DUP 4 ;
         SWAP ;
         GET ;
         IF_NONE { PUSH int -1 ; FAILWITH } {} ;
         DUG 2 ;
         PAIR ;
         EXEC ;
         UNPAIR ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         DUG 2 ;
         PAIR ;
         SWAP ;
         PAIR } }
