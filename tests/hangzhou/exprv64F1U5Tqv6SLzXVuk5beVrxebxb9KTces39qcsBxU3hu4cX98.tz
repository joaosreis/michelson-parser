{ storage
    (pair (pair (pair (address %admin) (bool %balance_valid))
                (pair (address %dao_token_address)
                      (pair (big_map %events
                               nat
                               (pair (pair (pair (timestamp %created_at) (address %creator))
                                           (pair (timestamp %event_start) (nat %fake_votes)))
                                     (pair (pair (nat %real_votes) (string %source))
                                           (pair (nat %tag) (pair (string %title) (bool %valid))))))
                            (pair %fee
                               (pair (nat %minimum_event_dao_token) (nat %minimum_vote_dao_token))
                               (pair (nat %service_fee) (nat %vote_reward))))))
          (pair (pair (big_map %metadata string bytes)
                      (pair (nat %next_calendar_id) (address %reward_token_address)))
                (pair (set %spam_list address)
                      (pair (nat %vote_threshold)
                            (big_map %votes (pair address nat) (pair (bool %is_real) (timestamp %voted_at))))))) ;
  parameter
    (or (or (or (pair %add_event
                   (pair (timestamp %event_start) (string %source))
                   (pair (nat %tag) (string %title)))
                (list %add_to_spam_list address))
            (or (list %callback_add_event
                   (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))
                (or (list %callback_vote
                       (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))
                    (address %change_admin))))
        (or (or (pair %mark_as_invalid (list %event_ids nat) (bool %valid))
                (or (list %remove_from_spam_list address) (bool %update_balance_valid)))
            (or (pair %update_fee
                   (pair (nat %minimum_event_dao_token) (nat %minimum_vote_dao_token))
                   (pair (nat %service_fee) (nat %vote_reward)))
                (or (nat %update_vote_threshold) (pair %vote (nat %calendar_id) (bool %is_real)))))) ;
  code { CAST (pair (or (or (or (pair (pair timestamp string) (pair nat string)) (list address))
                            (or (list (pair (pair address nat) nat)) (or (list (pair (pair address nat) nat)) address)))
                        (or (or (pair (list nat) bool) (or (list address) bool))
                            (or (pair (pair nat nat) (pair nat nat)) (or nat (pair nat bool)))))
                    (pair (pair (pair address bool)
                                (pair address
                                      (pair (big_map
                                               nat
                                               (pair (pair (pair timestamp address) (pair timestamp nat))
                                                     (pair (pair nat string) (pair nat (pair string bool)))))
                                            (pair (pair nat nat) (pair nat nat)))))
                          (pair (pair (big_map string bytes) (pair nat address))
                                (pair (set address) (pair nat (big_map (pair address nat) (pair bool timestamp))))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DUP ;
                     GET 4 ;
                     SIZE ;
                     PUSH nat 0 ;
                     COMPARE ;
                     LT ;
                     IF { DUP ; CAR ; CDR ; SIZE ; PUSH nat 0 ; COMPARE ; LT }
                        { PUSH bool False } ;
                     IF {} { PUSH string "INVALID ADD EVENT INPUT" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     MEM ;
                     IF { PUSH string "IN SPAMMER LIST" ; FAILWITH } {} ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     GET 3 ;
                     CONTRACT %balance_of
                       (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                     IF_NONE { PUSH string "InvalidTokenInterface" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     SELF %callback_add_event ;
                     NIL (pair address nat) ;
                     PUSH nat 0 ;
                     SENDER ;
                     PAIR ;
                     CONS ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     PUSH bool True ;
                     DUP 8 ;
                     GET 4 ;
                     PAIR ;
                     DUP 8 ;
                     GET 3 ;
                     PAIR ;
                     DUP 8 ;
                     CAR ;
                     CDR ;
                     PUSH nat 0 ;
                     PAIR ;
                     PAIR ;
                     PUSH nat 0 ;
                     DIG 8 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     SENDER ;
                     NOW ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     DIG 7 ;
                     GET 3 ;
                     GET 3 ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     CAR ;
                     GET 9 ;
                     COMPARE ;
                     GT ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 3 ;
                          GET 4 ;
                          CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                          IF_NONE { PUSH int 27 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          NIL (pair address (list (pair address (pair nat nat)))) ;
                          NIL (pair address (pair nat nat)) ;
                          DUP 6 ;
                          CAR ;
                          GET 9 ;
                          PUSH nat 0 ;
                          SELF_ADDRESS ;
                          PAIR 3 ;
                          CONS ;
                          SENDER ;
                          PAIR ;
                          CONS ;
                          TRANSFER_TOKENS ;
                          CONS }
                        {} ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     PUSH nat 1 ;
                     ADD ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     DUP ;
                     ITER { DIG 2 ; DUP ; GET 5 ; PUSH bool True ; DIG 3 ; UPDATE ; UPDATE 5 ; SWAP } ;
                     DROP ;
                     NIL operation } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "NotToken" ; FAILWITH } ;
                     PUSH nat 0 ;
                     SWAP ;
                     ITER { SWAP ; DROP ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 7 ;
                     CAR ;
                     SWAP ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string
                               "WrongCondition: balance.value >= self.data.fee.minimum_event_dao_token" ;
                          FAILWITH } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "NotToken" ; FAILWITH } ;
                         PUSH nat 0 ;
                         SWAP ;
                         ITER { SWAP ; DROP ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 7 ;
                         CDR ;
                         SWAP ;
                         COMPARE ;
                         GE ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: balance.value >= self.data.fee.minimum_vote_dao_token" ;
                              FAILWITH } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR } } ;
                 NIL operation } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     ITER { DIG 2 ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            DUP ;
                            DIG 6 ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 261 ; FAILWITH } {} ;
                            DUP 8 ;
                            CDR ;
                            UPDATE 8 ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP } ;
                     DROP }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                         DUP ;
                         ITER { DIG 2 ; DUP ; GET 5 ; PUSH bool False ; DIG 3 ; UPDATE ; UPDATE 5 ; SWAP } ;
                         DROP }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR } } ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP 6 ;
                     GET 3 ;
                     UPDATE 3 ;
                     DUP 6 ;
                     GET 4 ;
                     UPDATE 4 ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     DIG 6 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                         UPDATE 7 ;
                         NIL operation }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 8 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         MEM ;
                         IF { PUSH string "ALREADY VOTED" ; FAILWITH } {} ;
                         SENDER ;
                         DUP 3 ;
                         CAR ;
                         GET 5 ;
                         DUP 3 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 178 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         NEQ ;
                         IF {} { PUSH string "THE CREATOR" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         GET 5 ;
                         DUP 3 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 179 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CDR ;
                         MEM ;
                         IF { PUSH string "IN SPAMMER LIST" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 180 ; FAILWITH } {} ;
                         GET 8 ;
                         IF {} { PUSH string "INVALID EVENT" ; FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         GET 3 ;
                         CONTRACT %balance_of
                           (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                         IF_NONE { PUSH string "InvalidTokenInterface" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         SELF %callback_vote ;
                         NIL (pair address nat) ;
                         PUSH nat 0 ;
                         SENDER ;
                         PAIR ;
                         CONS ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         IF { DIG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              DUP ;
                              DUP 8 ;
                              CAR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 186 ; FAILWITH } {} ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              UNPAIR ;
                              PUSH nat 1 ;
                              ADD ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 }
                            { DIG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              DUP ;
                              DUP 8 ;
                              CAR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 188 ; FAILWITH } {} ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              PUSH nat 1 ;
                              ADD ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 } ;
                         DIG 2 ;
                         DUP ;
                         GET 8 ;
                         NOW ;
                         DUP 5 ;
                         CDR ;
                         PAIR ;
                         SOME ;
                         DUP 5 ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         UPDATE ;
                         UPDATE 8 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         IF { PUSH nat 0 ;
                              DUP 4 ;
                              CAR ;
                              GET 5 ;
                              DUP 4 ;
                              CAR ;
                              GET ;
                              IF_NONE { PUSH int 197 ; FAILWITH } {} ;
                              CAR ;
                              GET 4 ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH nat 100 }
                                 { DUP 3 ;
                                   CAR ;
                                   GET 5 ;
                                   DUP 3 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 200 ; FAILWITH } {} ;
                                   GET 3 ;
                                   CAR ;
                                   DUP 4 ;
                                   CAR ;
                                   GET 5 ;
                                   DUP 4 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 200 ; FAILWITH } {} ;
                                   CAR ;
                                   GET 4 ;
                                   ADD ;
                                   PUSH nat 100 ;
                                   DUP 5 ;
                                   CAR ;
                                   GET 5 ;
                                   DUP 5 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 200 ; FAILWITH } {} ;
                                   GET 3 ;
                                   CAR ;
                                   MUL ;
                                   EDIV ;
                                   IF_NONE { PUSH int 200 ; FAILWITH } { CAR } } ;
                              DUP 4 ;
                              GET 7 ;
                              SWAP ;
                              COMPARE ;
                              GE ;
                              IF { DUP 3 ;
                                   GET 3 ;
                                   GET 4 ;
                                   CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                                   IF_NONE { PUSH int 27 ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   NIL (pair address (list (pair address (pair nat nat)))) ;
                                   NIL (pair address (pair nat nat)) ;
                                   DUP 7 ;
                                   CAR ;
                                   GET 10 ;
                                   PUSH nat 0 ;
                                   DUP 9 ;
                                   CAR ;
                                   GET 5 ;
                                   DIG 8 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 206 ; FAILWITH } {} ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   PAIR 3 ;
                                   CONS ;
                                   SELF_ADDRESS ;
                                   PAIR ;
                                   CONS ;
                                   TRANSFER_TOKENS ;
                                   CONS }
                                 { SWAP ; DROP } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              GET 4 ;
                              CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                              IF_NONE { PUSH int 27 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              NIL (pair address (list (pair address (pair nat nat)))) ;
                              NIL (pair address (pair nat nat)) ;
                              DUP 6 ;
                              CAR ;
                              GET 10 ;
                              PUSH nat 0 ;
                              SENDER ;
                              PAIR 3 ;
                              CONS ;
                              SELF_ADDRESS ;
                              PAIR ;
                              CONS ;
                              TRANSFER_TOKENS ;
                              CONS }
                            { SWAP ; DROP } } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
